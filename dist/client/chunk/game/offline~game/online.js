(window.webpackJsonpsnakey3=window.webpackJsonpsnakey3||[]).push([[0],[,,,,,,function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var s=r(1);let i=(()=>{class e{constructor(e,t,r){this.sequence=t,this.characters=r,this.parent=e,this.children=[]}static CREATE_TREE_MAP(t){const r=new Map;for(const e in t){const s=t[e].seq,i=new n(e,t[e].weight),a=r.get(s);a?a.push(i):r.set(s,[i])}const s=new e.Root;return Array.from(r).sort((e,t)=>e[0].length-t[0].length).forEach(e=>{s.addCharMapping(...e)}),s.finalize(),s}finalize(){this.validateConstruction(),Object.freeze(this.characters),Object.freeze(this.children),this.children.forEach(e=>e.finalize())}validateConstruction(){if(!this.sequence.startsWith(this.parent.sequence))throw new Error("Child node's sequence must start with that of its parent.")}reset(){this.children.forEach(e=>e.reset()),this.inheritingHitCount=0,this.inheritingWeightedHitCount=0,this.characters.forEach(e=>{e.reset();for(let t=0;t<10*Math.random();t++)this.incrementNumHits(e)})}addCharMapping(t,r){if(!s.a.Seq.REGEXP.test(t))throw new RangeError(`Mapping-sequence "${t}" did not match the required regular expression "${s.a.Seq.REGEXP.source}".`);if(0===r.length)throw new Error("Must not make mapping without written characters.");let i=this;{let e=this;for(;e;)i=e,e=e.children.find(e=>t.startsWith(e.sequence))}if(i.sequence===t)throw new Error(`Mappings for all written-characters with a commoncorresponding typeable-sequence should be registered together,but an existing mapping for the sequence "${t}" was found.`);i.children.push(new e(i,t,r))}chooseOnePair(e){const t=this.characters.slice(0).sort(n.CMP[e]).shift(),r={char:t.char,seq:this.sequence};return this.incrementNumHits(t),r}incrementNumHits(e){e.incrementNumHits(),this.__recursiveIncrementNumHits(e.weightInv)}__recursiveIncrementNumHits(e){this.inheritingHitCount+=1,this.inheritingWeightedHitCount+=e,this.children.forEach(t=>t.__recursiveIncrementNumHits(e))}get personalHitCount(){return this.inheritingHitCount-this.parent.inheritingHitCount}get averageCharHitCount(){return this.characters.reduce((e,t)=>e+t.hitCount,0)/this.characters.length}get personalWeightedHitCount(){return this.inheritingWeightedHitCount-this.parent.inheritingWeightedHitCount}andNonRootParents(){const e=[];let t=this;for(;t.parent;)e.push(t),t=t.parent;return e}getLeafNodes(){const e=[];return this.__recursiveGetLeafNodes(e),e}__recursiveGetLeafNodes(e){this.children.length?this.children.forEach(t=>{t.__recursiveGetLeafNodes(e)}):e.push(this)}simpleView(){let e=this.characters.map(e=>e.simpleView());return Object.assign(Object.create(null),{seq:this.sequence,chars:1===e.length?e[0]:e,hits:this.personalHitCount,kids:this.children.map(e=>e.simpleView()),__proto__:void 0})}}return e.LEAF_CMP=Object.freeze({[s.a.BalancingScheme.SEQ]:(e,t)=>e.inheritingHitCount-t.inheritingHitCount,[s.a.BalancingScheme.CHAR]:(e,t)=>e.inheritingHitCount-t.inheritingHitCount,[s.a.BalancingScheme.WEIGHT]:(e,t)=>e.inheritingWeightedHitCount-t.inheritingWeightedHitCount}),e.PATH_CMP=Object.freeze({[s.a.BalancingScheme.SEQ]:(e,t)=>e.personalHitCount-t.personalHitCount,[s.a.BalancingScheme.CHAR]:(e,t)=>e.averageCharHitCount-t.averageCharHitCount,[s.a.BalancingScheme.WEIGHT]:(e,t)=>e.personalWeightedHitCount-t.personalWeightedHitCount}),e})();var a;(a=i||(i={})).Root=class extends a{constructor(){super(void 0,"",[])}validateConstruction(){}chooseOnePair(e){throw new TypeError("Must never hit on the root.")}get personalHitCount(){throw new TypeError("Must never hit on the root.")}get personalWeightedHitCount(){throw new TypeError("Must never hit on the root.")}andNonRootParents(){throw new TypeError}simpleView(){return this.children.map(e=>e.simpleView())}},Object.freeze(i),Object.freeze(i.prototype);let n=(()=>{class e{constructor(e,t){if(t<=0)throw new RangeError(`All weights must be positive, but we were passed the value "${t}" for the character "${e}".`);this.char=e,this.weightInv=1/t}reset(){this.hitCount=0,this.weightedHitCount=0}incrementNumHits(){this.hitCount+=1,this.weightedHitCount+=this.weightInv}simpleView(){return Object.assign(Object.create(null),{char:this.char,hits:this.hitCount})}}return e.CMP=Object.freeze({[s.a.BalancingScheme.SEQ]:(e,t)=>e.hitCount-t.hitCount,[s.a.BalancingScheme.CHAR]:(e,t)=>e.hitCount-t.hitCount,[s.a.BalancingScheme.WEIGHT]:(e,t)=>e.weightedHitCount-t.weightedHitCount}),e})();Object.freeze(n),Object.freeze(n.prototype);class o extends s.a{constructor(e,t){if(super(),this.static=e,this.treeMap=i.CREATE_TREE_MAP(t),this.leafNodes=this.treeMap.getLeafNodes(),this.leafNodes.length!==this.static.frontend.numLeaves)throw new Error(`maintenance required: the frontend constant for the language "${this.static.frontend.id}" needs to be updated to the correct, computed value, which is \`${this.leafNodes.length}\`.`)}get numLeaves(){return this.leafNodes.length}reset(){this.treeMap.reset()}getNonConflictingChar(e,t){this.leafNodes.sort(i.LEAF_CMP[t]);let r=void 0;for(const s of this.leafNodes){const a=s.andNonRootParents();for(let t=0;t<a.length;t++){const r=e.find(e=>e.startsWith(a[t].sequence));if(r){r===a[t].sequence?a.splice(0):a.splice(t);break}}if(a.length){a.sort(i.PATH_CMP[t]),r=a[0];break}}if(!r)throw new Error("Invariants guaranteeing that a LangSeq canalways be shuffled-in were not met.");return r.chooseOnePair(t)}simpleView(){return Object.assign(Object.create(null),{id:this.static.frontend.id,displayName:this.static.frontend.display,root:this.treeMap.simpleView(),numLeaves:this.leafNodes.length})}}o||(o={}),Object.freeze(o),Object.freeze(o.prototype)},function(e,t,r){"use strict";r.d(t,"b",(function(){return d.a})),r.d(t,"a",(function(){return l}));var s,i=r(2),a=r(16),n=r(1),o=r(18),h=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},c=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class u extends n.b{constructor(e,t){if(super(),s.set(this,void 0),Math.trunc(t.playerId)!==t.playerId)throw new RangeError("Player ID's must be integer values.");this.playerId=t.playerId,this.isALocalOperator=t.isALocalOperator,this.game=e,this.status=new this.game.__playerStatusCtor(this,t.noCheckGameOver),this.tile=new o.a(new u.TileGetterSource(this))}__afterAllPlayersConstruction(){this.status.__afterAllPlayersConstruction()}reset(e){h(this,s,e),this.hostTile.__setOccupant(this.playerId,this.status.immigrantInfo)}get coord(){return this.hostTile.coord}get hostTile(){return c(this,s)}onGoBesideOtherPlayer(){}moveTo(e){if(this.hostTile.occupantId!==this.playerId){if(this.game.gameType!==i.a.Type.ONLINE)throw new Error("Linkage between player and occupied tile disagrees.")}else this.hostTile.evictOccupant();if(e.isOccupied){if(this.game.gameType!==i.a.Type.ONLINE)throw new Error("Only one player can occupy a tile at a time.")}else h(this,s,e),e.__setOccupant(this.playerId,this.status.immigrantInfo)}}s=new WeakMap,function(e){class t{constructor(e){this.player=e}__getTileAt(){return this.player.game.grid.tile.at(this.player.coord)}__getTileDestsFrom(){return this.player.game.grid.tile.destsFrom(this.player.coord).get}__getTileSourcesTo(){return this.player.game.grid.tile.sourcesTo(this.player.coord).get}}e.TileGetterSource=t,Object.freeze(t),Object.freeze(t.prototype)}(u||(u={})),Object.freeze(u),Object.freeze(u.prototype);r(10);var d=r(11);class l extends u{constructor(e,t){if(super(e,t),!l.Username.REGEXP.test(t.username))throw new RangeError(`Username "${t.username}" does not match the required regular expression, "${l.Username.REGEXP.source}".`);this.familyId=t.familyId,this.teamId=t.teamId,this.username=t.username}reset(e){super.reset(e),this.status.reset(),this.lastAcceptedRequestId=a.a.INITIAL_REQUEST_ID,this.requestInFlight=!1}__abstractNotifyThatGameStatusBecamePlaying(){}__abstractNotifyThatGameStatusBecamePaused(){}__abstractNotifyThatGameStatusBecameOver(){}makeMovementRequest(e,t){if(this.game.status!==i.a.Status.PLAYING)throw new Error("This is not a necessary precondition, but we're doing it anyway.");if(this.requestInFlight)throw new Error("Only one request should ever be in flight at a time.");this.requestInFlight=!0,this.game.processMoveRequest(new a.a.Movement(this.playerId,this.lastAcceptedRequestId,e,t))}get team(){return this.game.teams[this.teamId]}isTeamedWith(e){return this.team.members.includes(e)}}!function(e){let t,r;!function(e){e.REGEXP=/[a-zA-Z](?:[ ]?[a-zA-Z0-9:-]+?){4,}/}(t=e.Username||(e.Username={})),function(e){e.finalize=e=>{const t=Array.from(new Set(e.map(e=>e.teamId))).sort((e,t)=>e-t).reduce((e,t,r)=>(e[t]=r,e),[]);return e.slice().sort((e,r)=>t[e.teamId]-t[r.teamId]).map((e,r)=>Object.assign(e,{playerId:r,teamId:t[e.teamId]}))}}(r=e.CtorArgs||(e.CtorArgs={})),Object.freeze(r)}(l||(l={})),Object.freeze(l),Object.freeze(l.prototype)},function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return a}));var s,i=r(0);!function(e){e.getImplementation=t=>e.__Constructors[t]}(s||(s={}));class a{__VisibleGrid_super(e,t){const r=i.a.Grid;t.classList.add(r.Class.IMPL_BODY),t.dataset[r.Dataset.IMPL_COORD_SYS]=e.coordSys,this.baseElem=t;const s=document.createElement("div");s.classList.add(i.a.Player.Class.SHORT_SPOTLIGHT);const a=document.createElement("div");a.classList.add(i.a.Player.Class.LONG_SPOTLIGHT),this.spotlightElems=Object.freeze([s,a])}}Object.freeze(a),Object.freeze(a.prototype)},function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return d}));var s,i=r(1);!function(e){let t;!function(e){e.EUCLID2="EUCLID2",e.BEEHIVE="BEEHIVE"}(t=e.System||(e.System={}));class r{constructor(e){}}e.Abstract=r,function(t){class r extends e.Abstract{}t.Mathy=r}(r=e.Abstract||(e.Abstract={})),Object.freeze(r),Object.freeze(r.prototype)}(s||(s={})),Object.freeze(s);var a,n,o,h,c=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},u=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class d{constructor(e){a.set(this,void 0),n.set(this,void 0),o.set(this,void 0),h.set(this,void 0),this.coord=e,c(this,a,i.b.Id.NULL)}reset(){this.evictOccupant(),this.lastKnownUpdateId=0,this.freeHealth=0,this.setLangCharSeqPair(i.a.CharSeqPair.NULL)}__setOccupant(e,t){c(this,a,e)}get isOccupied(){return this.occupantId!==i.b.Id.NULL}evictOccupant(){c(this,a,i.b.Id.NULL)}get occupantId(){return u(this,a)}get freeHealth(){return u(this,n)}set freeHealth(e){c(this,n,e)}setLangCharSeqPair(e){c(this,o,e.char),c(this,h,e.seq)}get langChar(){return u(this,o)}get langSeq(){return u(this,h)}}a=new WeakMap,n=new WeakMap,o=new WeakMap,h=new WeakMap,Object.freeze(d),Object.freeze(d.prototype)},function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var s,i=r(11),a=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)},n=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r};class o{constructor(e,t){s.set(this,void 0),this.player=e,this.noCheckGameOver=t}reset(){this.health=0}__afterAllPlayersConstruction(){}get immigrantInfo(){}get health(){return a(this,s)}set health(e){const t=this.isDowned;if(n(this,s,e),t||!this.isDowned||this.noCheckGameOver)return;const r=this.player.team,a=this.player.game.teams;if(r.elimOrder===i.a.ElimOrder.STANDING&&r.members.every(e=>e.status.noCheckGameOver||e.status.isDowned)){const e=1+a.filter(e=>e.elimOrder!==i.a.ElimOrder.STANDING).length;r.elimOrder=1+a.filter(e=>e.elimOrder!==i.a.ElimOrder.STANDING&&e.elimOrder!==i.a.ElimOrder.IMMORTAL).length,e===a.length&&this.player.game.statusBecomeOver()}}get isDowned(){return this.health<0}}s=new WeakMap,Object.freeze(o),Object.freeze(o.prototype)},function(e,t,r){"use strict";r.d(t,"a",(function(){return n}));var s,i=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},a=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class n{constructor(e,t){if(s.set(this,void 0),0===t.length)throw new Error("teams must have at least one member.");this.id=e,this.members=t,i(this,s,this.members.every(e=>e.status.noCheckGameOver)?n.ElimOrder.IMMORTAL:n.ElimOrder.STANDING)}reset(){this.elimOrder!==n.ElimOrder.IMMORTAL&&(this.elimOrder=n.ElimOrder.STANDING)}get elimOrder(){return a(this,s)}set elimOrder(e){if(this.elimOrder===n.ElimOrder.IMMORTAL)throw new Error("Cannot change the elimination status of an immortal team.");i(this,s,e)}}s=new WeakMap,function(e){let t;!function(e){e.IMMORTAL=-1,e.STANDING=0}(t=e.ElimOrder||(e.ElimOrder={}))}(n||(n={})),Object.freeze(n),Object.freeze(n.prototype)},function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var s=r(2),i=r(7);class a extends i.a{constructor(e,t){if(super(e,t),e.gameType===s.a.Type.ONLINE)throw new TypeError("OnlineGames should be using regular Players instead.")}__abstractNotifyThatGameStatusBecamePlaying(){this.movementContinueWithInitialDelay()}__abstractNotifyThatGameStatusBecamePaused(){this.game.cancelTimeout(this.scheduledMovementCallbackId),this.scheduledMovementCallbackId=void 0}__abstractNotifyThatGameStatusBecameOver(){this.game.cancelTimeout(this.scheduledMovementCallbackId),this.scheduledMovementCallbackId=void 0}movementContinue(){this.makeMovementRequest(this.game.grid.getUntToward(this.coord,this.computeDesiredDestination()),this.getNextMoveType()),this.movementContinueWithInitialDelay()}movementContinueWithInitialDelay(){this.scheduledMovementCallbackId=this.game.setTimeout(()=>this.movementContinue(),this.computeNextMovementTimer())}}!function(e){e.of=(t,r)=>{const s=r.familyId;return new e.__Constructors[s](t,r)}}(a||(a={}))},function(e,t,r){},function(e,t,r){"use strict";r.d(t,"a",(function(){return h}));var s,i=r(0),a=r(9),n=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},o=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class h extends a.b{constructor(e){super(e),s.set(this,void 0);{const e=n(this,s,document.createElement("div"));e.classList.add(i.a.General.Class.CENTER_CONTENTS,i.a.General.Class.STACK_CONTENTS,i.a.Tile.Class.BASE),e.setAttribute("aria-label","Tile")}{const e=document.createElement("div");e.classList.add(i.a.Tile.Class.POINTER_HB),e.setAttribute("aria-hidden","true"),o(this,s).appendChild(e)}{const e=this.langCharElem=document.createElement("div");e.classList.add(i.a.Tile.Class.LANG_CHAR),o(this,s).appendChild(e)}{const e=this.langSeqElem=document.createElement("kbd");e.classList.add(i.a.Tile.Class.LANG_SEQ),e.setAttribute("role","tooltip"),o(this,s).appendChild(e)}}__addToDom(e){e.appendChild(o(this,s))}__setOccupant(e,t){super.__setOccupant(e,t),o(this,s).insertBefore(t.playerElem,this.langCharElem),this.langSeqElem.textContent=t.username}evictOccupant(){super.evictOccupant(),this.langSeqElem.textContent=this.langSeq}set freeHealth(e){super.freeHealth=e,this.freeHealth>0?o(this,s).dataset[i.a.Tile.Dataset.HEALTH]=this.freeHealth.toString():delete o(this,s).dataset[i.a.Tile.Dataset.HEALTH]}get freeHealth(){return super.freeHealth}setLangCharSeqPair(e){super.setLangCharSeqPair(e),this.langCharElem.textContent=this.langChar,this.langSeqElem.textContent=this.langSeq}}s=new WeakMap,Object.freeze(h),Object.freeze(h.prototype)},function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var s,i=r(6),a=r(2),n=r(7),o=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},h=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class c extends n.a{constructor(e,t){super(e,t),s.set(this,void 0),this.langRemappingFunc=this.game.langFrontend.remapFunc}reset(e){super.reset(e),this.prevCoord=e.coord,o(this,s,"")}processKeyboardInput(e){this.game.status===a.a.Status.PLAYING&&(this.requestInFlight||(32===e.keyCode?this.coord.equals(this.prevCoord)||this.makeMovementRequest(this.game.grid.getUntAwayFrom(this.coord,this.prevCoord),n.a.MoveType.BOOST):1===e.key.length&&this.seqBufferAcceptKey(e.key)))}seqBufferAcceptKey(e){const t=this.tile.destsFrom().unoccupied.get;if(0!==t.length)if(e){if(e=this.langRemappingFunc(e),i.a.Seq.REGEXP.test(e)){for(let r=this.seqBuffer+e;r.length;r=r.substring(1)){const e=t.find(e=>e.langSeq.startsWith(r));if(e)return o(this,s,r),void(e.langSeq===r&&this.makeMovementRequest(e,n.a.MoveType.NORMAL))}o(this,s,""),this.status.visualBell()}}else{t.find(e=>e.langSeq.startsWith(this.seqBuffer))||o(this,s,"")}}moveTo(e){o(this,s,""),this.prevCoord=this.coord,super.moveTo(e)}__abstractNotifyBecomeCurrent(){this.status.__notifyBecomeCurrent(this.game.grid.spotlightElems)}get seqBuffer(){return h(this,s)}}s=new WeakMap,Object.freeze(c),Object.freeze(c.prototype)},function(e,t,r){"use strict";r.d(t,"a",(function(){return s}));var s,i=r(17);!function(e){e.INITIAL_REQUEST_ID=-1,e.EVENT_NAME=Object.freeze({Bubble:"player-bubble",Movement:"player-movement"});class t{constructor(e,t){this.eventId=i.a.EVENT_ID_REJECT,this.affectedNeighbours=void 0,this.playerId=e,this.playerLastAcceptedRequestId=t}}e.Bubble=t;e.Movement=class extends t{constructor(e,t,r,s){super(e,t),this.newPlayerHealth=void 0,this.tileHealthModDescs=void 0,this.destModDesc={coord:r.coord,lastKnownUpdateId:r.lastKnownUpdateId,newCharSeqPair:void 0,newFreeHealth:void 0},this.moveType=s}}}(s||(s={})),Object.freeze(s)},function(e,t,r){"use strict";var s;r.d(t,"a",(function(){return s})),function(e){e.EVENT_ID_REJECT=-1}(s||(s={})),Object.freeze(s)},function(e,t,r){"use strict";r.d(t,"a",(function(){return s}));class s{constructor(e){this.source=e}at(...e){return this.source.__getTileAt(...e)}destsFrom(...e){return new i(this.source.__getTileDestsFrom(...e))}sourcesTo(...e){return new i(this.source.__getTileSourcesTo(...e))}}Object.freeze(s),Object.freeze(s.prototype);class i{constructor(e){this.contents=e}get occupied(){return this.contents=this.contents.filter(e=>e.isOccupied),this}get unoccupied(){return this.contents=this.contents.filter(e=>!e.isOccupied),this}get get(){return this.contents}}Object.freeze(i),Object.freeze(i.prototype)},function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var s,i,a=r(0),n=r(10),o=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},h=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class c extends n.a{constructor(e,t){super(e,t),s.set(this,void 0),i.set(this,void 0);o(this,s,document.createElement("div")).classList.add(a.a.General.Class.CENTER_CONTENTS,a.a.General.Class.STACK_CONTENTS,a.a.Player.Class.BASE);{const e=document.createElement("div");e.classList.add(a.a.Player.Class.FACE);o(this,i,this.player.isALocalOperator?[e.animate({filter:["brightness(0.7)","brightness(1.0)"]},{duration:300,easing:"ease-in"}),e.animate({transform:c.makeWiggleAnimation(10,2)},{duration:270,easing:"ease-out"})]:[]);{const t=document.createElement("div");t.classList.add(a.a.Player.Class.DOWNED_OVERLAY),e.appendChild(t)}h(this,s).appendChild(e)}}__afterAllPlayersConstruction(){const e=this.player,t=this.player.game.operators[0].teamId;h(this,s).dataset[a.a.Player.Dataset.FACE_SWATCH]=e.isALocalOperator?"me":e.teamId===t?"teammate":"opponent",this.__immigrantInfoCache=Object.freeze({playerElem:h(this,s),username:e.username})}reset(){super.reset();const e=a.a.Player.Dataset.DOWNED;h(this,s).dataset[e.KEY]=e.VALUES.NO}get immigrantInfo(){return this.__immigrantInfoCache}__notifyBecomeCurrent(e){e.forEach(e=>{h(this,s).appendChild(e)})}visualBell(){window.requestAnimationFrame(e=>{h(this,i).forEach(e=>e.play())})}get health(){return super.health}set health(e){const t=this.isDowned;if(super.health=e,t!==this.isDowned){const e=a.a.Player.Dataset.DOWNED;h(this,s).dataset[e.KEY]=this.isDowned?this.player.team.elimOrder?e.VALUES.TEAM:e.VALUES.SELF:e.VALUES.NO}}}s=new WeakMap,i=new WeakMap,function(e){e.makeWiggleAnimation=function(e,t){const r=Array(2*t).fill(e);return r.unshift(0),r.push(0),r.map((e,t)=>`translate(${t%2?e:-e}%)`)}}(c||(c={})),Object.freeze(c),Object.freeze(c.prototype)},function(e,t,r){"use strict";r.d(t,"a",(function(){return l}));var s,i=r(18);class a{constructor(e){this.static=e.gridClass,this.dimensions=e.dimensions,this.tile=new i.a(this)}get area(){return this.static.getArea(this.dimensions)}reset(){this.forEachTile(e=>e.reset())}check(){}getRandomCoord(){return this.static.getRandomCoord(this.dimensions)}}(s=a||(a={})).getImplementation=e=>s.__Constructors[e];var n,o,h=r(8),c=r(1),u=r(9);!function(e){class t extends u.a.Abstract.Mathy{constructor(e){super(e),this.x=e.x,this.y=e.y,Object.freeze(this)}equals(e){return this.x===e.x&&this.y===e.y}round(){return new t({x:Math.round(this.x),y:Math.round(this.y)})}oneNorm(e){return this.sub(e).originOneNorm()}originOneNorm(){return Math.abs(this.x)+Math.abs(this.y)}infNorm(e){return this.sub(e).originInfNorm()}originInfNorm(){return Math.max(Math.abs(this.x),Math.abs(this.y))}axialAlignment(e){return this.sub(e).originAxialAlignment()}originAxialAlignment(){return Math.abs(Math.abs(this.x)-Math.abs(this.y))/(Math.abs(this.x)+Math.abs(this.y))}add(e){return new t({x:this.x+e.x,y:this.y+e.y})}sub(e){return new t({x:this.x-e.x,y:this.y-e.y})}mul(e){return new t({x:e*this.x,y:e*this.y})}}e.Coord=t,Object.freeze(t),Object.freeze(t.prototype);let r=(()=>{class e extends a{constructor(e){super(e);const r=[];for(let s=0;s<this.dimensions.height;s++){const i=[];for(let r=0;r<this.dimensions.width;r++){const a=new e.tileClass(new t({x:r,y:s}));i.push(a)}r.push(i)}this.grid=r}static getAmbiguityThreshold(){return 24}static getSizeLimits(){return this.SIZE_LIMITS}forEachTile(e,t=this){for(const t of this.grid)for(const r of t)e(r)}getUntToward(e,t){const r=this.tile.destsFrom(e).unoccupied.get;if(0===r.length)return this.tile.at(e);if(1===r.length)return r[0];r.sort((e,r)=>e.coord.oneNorm(t)-r.coord.oneNorm(t)).sort((e,r)=>e.coord.infNorm(t)-r.coord.infNorm(t));for(let e=1;e<r.length;e++)if(r[e].coord.infNorm(t)>r[0].coord.infNorm(t)){r.splice(e);break}if(1===r.length)return r[0];if(r[0].coord.x-e.x==0||r[0].coord.y-e.y==0){if(e.axialAlignment(e.sub(t))-.5>0)return r[0];r.shift()}return r[Math.floor(r.length*Math.random())]}getUntAwayFrom(e,t){return this.getUntToward(e,e.add(e.sub(t)))}getRandomCoordAround(e,r){return new t({x:e.x+Math.trunc(2*r*(Math.random()-.5)),y:e.y+Math.trunc(2*r*(Math.random()-.5))})}__getTileAt(e){if(e.x<0||e.x>=this.dimensions.width||e.y<0||e.y>=this.dimensions.height)throw new RangeError("Out of bounds. No such tile exists.");return this.grid[e.y][e.x]}__getTileDestsFrom(e,t=1){let r=e.y-t,s=e.y+t+1,i=e.x-t,a=e.x+t+1;return r>=this.dimensions.height||s<0||i>=this.dimensions.width||a<0?[]:this.grid.slice(Math.max(0,r),Math.min(this.dimensions.height,s)).flatMap(e=>e.slice(Math.max(0,i),Math.min(this.dimensions.width,a)))}__getTileSourcesTo(e,t=1){return this.__getTileDestsFrom(e,t)}minMovesFromTo(e,t){return Math.min(Math.abs(t.x-e.x),Math.abs(t.y-e.y))}static getSpawnCoords(t,r){const s=[];return t.map(t=>{const i=[];for(;t>0;){let a;do{a=e.getRandomCoord(r)}while(s.find(e=>a.equals(e)));i.push(a),s.push(a),t--}return i})}static getArea(e){return e.height*e.width}static getRandomCoord(e){const r=Math.floor(e.width*Math.random()),s=Math.floor(e.height*Math.random());return new t({x:r,y:s})}}return e.SIZE_LIMITS=Object.freeze({height:Object.freeze({min:11,max:51}),width:Object.freeze({min:11,max:51})}),e})();e.Grid=r,function(e){class t extends e{constructor(e){super(e);const t=document.createElement("div");t.style.setProperty("--euclid2-grid-width",this.dimensions.width.toString());for(const e of this.grid)for(const r of e)r.__addToDom(t);this.__VisibleGrid_super(e,t)}}e.Visible=t,Object(c.c)(t,[h.b]),Object.freeze(t),Object.freeze(t.prototype)}(r=e.Grid||(e.Grid={})),Object.freeze(r),Object.freeze(r.prototype)}(n||(n={})),Object.freeze(n),function(e){class t extends u.a.Abstract.Mathy{constructor(e){super(e),this.dash=e.dash,this.bash=e.bash,Object.freeze(this)}equals(e){return this.dash===e.dash&&this.bash===e.bash}round(){const e=Math.floor(this.dash),r=Math.floor(this.bash),s=e-this.dash,i=r-this.bash;return s>2*i?new t({dash:e+1,bash:r}):s<.5*i?new t({dash:e,bash:r+1}):Math.min(s,i)>.5?new t({dash:e+1,bash:r+1}):new t({dash:e,bash:r})}add(e){return new t({dash:this.dash+e.dash,bash:this.bash+e.bash})}sub(e){return new t({dash:this.dash-e.dash,bash:this.bash-e.bash})}mul(e){return new t({dash:e*this.dash,bash:e*this.bash})}}e.Coord=t,Object.freeze(t),Object.freeze(t.prototype);let r=(()=>{class e extends a{constructor(e){super(e)}static getAmbiguityThreshold(){return 18}static getSizeLimits(){return this.SIZE_LIMITS}forEachTile(e,t=this){this.grid.forEach(r=>r.forEach(t=>{e(t)},t),t)}getUntToward(e,t){}getUntAwayFrom(e,t){return this.getUntToward(e,e.add(e.sub(t)))}getRandomCoordAround(e,t){}__getTileAt(e){}__getTileDestsFrom(e){}__getTileSourcesTo(e){}minMovesFromTo(e,t){}static getSpawnCoords(e,t){}static getArea(e){const t=Math.min(e.fslash,e.bslash),r=Math.max(e.fslash,e.bslash),s=-1+e.dash+t;let i=2*t*(e.dash+s);return i+=(r-t-1)*s,i}static getRandomCoord(e){return new t(void 0)}}return e.SIZE_LIMITS=Object.freeze({dash:Object.freeze({min:10,max:50}),bslash:Object.freeze({min:10,max:50}),fslash:Object.freeze({min:10,max:50})}),e})();e.Grid=r,function(e){class t extends e{constructor(e){super(e);this.__VisibleGrid_super(e,void 0)}}e.Visible=t,Object(c.c)(t,[h.b]),Object.freeze(t),Object.freeze(t.prototype)}(r=e.Grid||(e.Grid={})),Object.freeze(r),Object.freeze(r.prototype)}(o||(o={})),Object.freeze(o);var d,l,m=r(12),p=r(7),f=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},g=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class y extends m.a{constructor(e,t){super(e,t),d.set(this,void 0),this.behaviour=Object.freeze(t.familyArgs),this.grid=this.game.grid}__afterAllPlayersConstruction(){super.__afterAllPlayersConstruction(),this.threatProximity=this.game.teams.filter(e=>e.id!==this.teamId).flatMap(e=>e.members),this.targetProximity=this.threatProximity.slice()}reset(e){super.reset(e),f(this,d,this.coord)}moveTo(e){f(this,d,this.coord),super.moveTo(e)}computeDesiredDestination(){this.threatProximity.sort((e,t)=>this.grid.minMovesFromTo(e.coord,this.coord)-this.grid.minMovesFromTo(t.coord,this.coord));for(const e of this.threatProximity){if(this.grid.minMovesFromTo(e.coord,this.coord)>this.behaviour.fearDistance)break;if(!e.status.isDowned&&e.status.health>this.status.health)return this.grid.getUntAwayFrom(this.coord,e.coord).coord}if(this.targetProximity.sort((e,t)=>this.grid.minMovesFromTo(this.coord,e.coord)-this.grid.minMovesFromTo(this.coord,t.coord)),this.status.isDowned)for(const e of this.targetProximity){if(this.grid.minMovesFromTo(this.coord,e.coord)>this.behaviour.bloodThirstDistance)break;if(e.status.health<this.status.health-this.behaviour.healthReserve)return e.coord}if(0===this.game.freeHealthTiles.size){const e=.2;return Math.random()<e?this.grid.getRandomCoordAround(this.coord,3):this.grid.getRandomCoordAround(this.grid.getUntAwayFrom(this.grid.getUntAwayFrom(this.coord,g(this,d)).coord,g(this,d)).coord,1)}let e=void 0,t=1/0;for(const r of this.game.freeHealthTiles){const s=this.grid.minMovesFromTo(this.coord,r.coord);s<t&&(e=r,t=s)}return e.coord}getNextMoveType(){return p.a.MoveType.NORMAL}computeNextMovementTimer(){return 1e3/this.behaviour.movesPerSecond}}d=new WeakMap,Object.freeze(y),Object.freeze(y.prototype),function(e){function t(){a.__Constructors=Object.freeze({EUCLID2:n.Grid,BEEHIVE:o.Grid}),Object.freeze(a),Object.freeze(a.prototype);{const e=h.a;e.__Constructors=Object.freeze({EUCLID2:n.Grid.Visible,BEEHIVE:o.Grid.Visible}),Object.freeze(e)}{const e=m.a;e.__Constructors=Object.freeze({CHASER:y}),Object.freeze(e),Object.freeze(e.prototype)}}e.INIT_CLASS_REGISTRIES=t,Object.freeze(t)}(l||(l={})),Object.freeze(l)},function(e,t,r){"use strict";r.d(t,"a",(function(){return f}));var s,i,a=r(2),n=r(17),o=r(1),h=r(7),c=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},u=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class d{constructor(e,t,r){s.set(this,void 0),i.set(this,void 0),this.gameType=e;const a=this.__getGridImplementation(r.coordSys);if(this.grid=new a({gridClass:a,tileClass:t.tileClass,coordSys:r.coordSys,dimensions:r.gridDimensions}),this.langFrontend=o.a.GET_FRONTEND_DESC_BY_ID(r.langId),this.__playerStatusCtor=t.playerStatusCtor,this.players=this.createPlayers(r),this.operators=this.players.filter(e=>e.isALocalOperator),this.currentOperator=this.operators[0],this.operators.some(e=>e.teamId!==this.operators[0].teamId))throw new Error("All local operators must be on the same team.");{const e=[];if(this.players.forEach(t=>{e[t.teamId]||(e[t.teamId]=[]),e[t.teamId].push(t)}),this.teams=e.map((e,t)=>new h.b(t,e)),this.teams.every(e=>e.id===h.b.ElimOrder.IMMORTAL))throw new Error("All teams are immortal. The game will never end.")}this.players.forEach(e=>e.__afterAllPlayersConstruction())}reset(){return this.grid.reset(),c(this,i,a.a.Status.PAUSED),Promise.resolve()}createPlayers(e){const t=e.playerDescs=this.gameType===a.a.Type.ONLINE?e.playerDescs:h.a.CtorArgs.finalize(e.playerDescs);return Object.freeze(t.map(e=>e.familyId===h.a.Family.HUMAN?e.isALocalOperator?this.__createOperatorPlayer(e):new h.a(this,e):this.__createArtifPlayer(e)))}serializeResetState(){const e=[],t=this.players.map(e=>e.coord),r=[];return this.grid.forEachTile(t=>{e.push({char:t.langChar,seq:t.langSeq}),t.freeHealth&&r.push({coord:t.coord,health:t.freeHealth})}),{csps:e,playerCoords:t,healthCoords:r}}deserializeResetState(e){{let t=0;this.grid.forEachTile(r=>{r.setLangCharSeqPair(e.csps[t++]),r.lastKnownUpdateId=1})}e.playerCoords.forEach((e,t)=>{this.players[t].moveTo(this.grid.tile.at(e))}),e.healthCoords.forEach(e=>{this.grid.tile.at(e.coord).freeHealth=e.health})}get currentOperator(){return u(this,s)}set currentOperator(e){e&&this.currentOperator!==e&&this.operators.includes(e)&&(c(this,s,e),e.__abstractNotifyBecomeCurrent())}get status(){return u(this,i)}statusBecomePlaying(){if(this.status!==a.a.Status.PLAYING){if(this.status!==a.a.Status.PAUSED)throw new Error("Can only resume a game that is currently paused.");this.players.forEach(e=>{e.__abstractNotifyThatGameStatusBecamePlaying()}),this.__abstractStatusBecomePlaying(),c(this,i,a.a.Status.PLAYING)}else console.log("[statusBecomePlaying]: Game is already playing")}statusBecomePaused(){if(this.status!==a.a.Status.PAUSED){if(this.status!==a.a.Status.PLAYING)throw new Error("Can only pause a game that is currently playing.");this.players.forEach(e=>{e.__abstractNotifyThatGameStatusBecamePaused()}),this.__abstractStatusBecomePaused(),c(this,i,a.a.Status.PAUSED)}else console.log("[statusBecomePaused]: Game is already paused")}statusBecomeOver(){if(this.status!==a.a.Status.PLAYING)throw new Error("Can only end a game that is currently playing.");this.players.forEach(e=>{e.__abstractNotifyThatGameStatusBecameOver()}),this.__abstractStatusBecomeOver(),c(this,i,a.a.Status.OVER),console.log("game is over!")}__abstractStatusBecomePlaying(){}__abstractStatusBecomePaused(){}__abstractStatusBecomeOver(){}}s=new WeakMap,i=new WeakMap,Object.freeze(d),Object.freeze(d.prototype);var l,m=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},p=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class f extends d{constructor(e,t,r){super(e,t,r),l.set(this,void 0),this.eventRecordBitmap=[]}reset(){const e=super.reset();return this.eventRecordBitmap.fill(!1,0,a.a.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH),m(this,l,0),e}get nextUnusedEventId(){return p(this,l)}recordEvent(e){const t=e.eventId,r=t%a.a.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH;if(t===n.a.EVENT_ID_REJECT)throw new TypeError("Do not try to record events for rejected requests.");if(t<0||t!==Math.trunc(t))throw new RangeError("Event ID's must only be assigned positive, integer values.");if(this.eventRecordBitmap[r])throw new Error("Event ID's must be assigned unique values.");this.eventRecordBitmap[r]=!0,this.eventRecordBitmap[(t+a.a.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH-a.a.K.EVENT_RECORD_FORWARD_WINDOW_LENGTH)%a.a.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH]=!1,m(this,l,+p(this,l)+1)}executeTileModEvent(e,t=!0){Object.freeze(e);const r=this.grid.tile.at(e.coord);if(r.lastKnownUpdateId>e.lastKnownUpdateId)return r;if(r.lastKnownUpdateId===e.lastKnownUpdateId)throw new Error("never.");return e.newCharSeqPair&&(r.setLangCharSeqPair(e.newCharSeqPair),t&&this.operators.filter(e=>e.tile.destsFrom().get.includes(r)).forEach(e=>e.seqBufferAcceptKey(""))),r.lastKnownUpdateId=e.lastKnownUpdateId,r.freeHealth=e.newFreeHealth,r}executePlayerMoveEvent(e){var t;const r=this.players[e.playerId],s=e.playerLastAcceptedRequestId-r.lastAcceptedRequestId;if(e.eventId===n.a.EVENT_ID_REJECT)return void(0===s&&(r.requestInFlight=!1));this.recordEvent(e);const i=this.executeTileModEvent(e.destModDesc,r!==this.currentOperator);if(null===(t=e.tileHealthModDescs)||void 0===t||t.forEach(e=>{this.executeTileModEvent(e)}),s>1){if(r===this.currentOperator)throw new Error("This never happens. See comment in source.")}else{if(r.requestInFlight=!1,!(r===this.currentOperator?1===s:s<=1))throw new Error("This never happens. See comment in source");r.status.health=e.newPlayerHealth.health,r.moveTo(i),r.lastAcceptedRequestId=e.playerLastAcceptedRequestId}}executePlayerBubbleEvent(e){this.players[e.playerId].requestInFlight=!1,e.eventId!==n.a.EVENT_ID_REJECT&&this.recordEvent(e)}}l=new WeakMap,Object.freeze(f),Object.freeze(f.prototype)}]]);
//# sourceMappingURL=online.js.map