(window.webpackJsonpsnakey3=window.webpackJsonpsnakey3||[]).push([[1],{18:function(e,t,r){var s={"./Cellphone.ts":[19,4],"./Emote.ts":[20,5],"./English.ts":[21,6],"./Japanese.ts":[22,7],"./Korean.ts":[23,8],"./Morse.ts":[24,9]};function n(e){if(!r.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],n=t[0];return r.e(t[1]).then((function(){return r(n)}))}n.keys=function(){return Object.keys(s)},n.id=18,e.exports=n},26:function(e,t,r){"use strict";r.r(t),r.d(t,"OfflineGame",(function(){return w}));var s=r(16),n=r(7),a=r(2),o=r(8),i=r(17),h=r(1);class c{constructor(e){const t=[];for(const r of e)t[r]=new c.Entry;this.entries=t}reset(){for(const e of this.entries)e.reset()}}!function(e){class t{constructor(){this.moveCounts={}}reset(){this.totalHealthPickedUp=0,Object.getOwnPropertyNames(h.b.MoveType).forEach(e=>{this.moveCounts[e]=0})}}e.Entry=t,Object.freeze(t),Object.freeze(t.prototype)}(c||(c={})),Object.freeze(c),Object.freeze(c.prototype);var l,d,u,p=r(11),f=function(e,t,r,s){return new(r||(r=Promise))((function(n,a){function o(e){try{h(s.next(e))}catch(e){a(e)}}function i(e){try{h(s.throw(e))}catch(e){a(e)}}function h(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(o,i)}h((s=s.apply(e,t||[])).next())}))},g=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},m=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class v extends i.a{constructor(e,t,s){super(e,t,s),l.set(this,void 0),d.set(this,void 0),u.set(this,void 0),this.averageFreeHealth=s.averageFreeHealthPerTile*this.grid.area,this.averageFreeHealthPerTile=s.averageFreeHealthPerTile,g(this,d,new Set),g(this,u,r(18)(`./${this.langFrontend.module}.ts`).then(e=>{this.lang=e[this.langFrontend.module][this.langFrontend.export].getInstance();const t=this.grid.static.getAmbiguityThreshold();if(this.lang.numLeaves<t)throw new Error(`Found ${this.lang.numLeaves} leaves, but at least ${t} were required. The provided mappings composing the current Lang-under-construction are not sufficient to ensure that a shuffling operation will always be able to find a safe candidate to use as a replacement. Please see the spec for Lang.getNonConflictingChar.`);return this.lang})),this.langBalancingScheme=s.langBalancingScheme,this.scoreInfo=new c(this.players.map(e=>e.playerId))}reset(){const e=Object.create(null,{reset:{get:()=>super.reset}});return f(this,void 0,void 0,(function*(){yield e.reset.call(this),g(this,l,0),m(this,d).clear(),yield m(this,u),this.lang.reset(),this.grid.forEachTile(e=>{e.setLangCharSeqPair(this.dryRunShuffleLangCharSeqAt(e))}),this.teams.forEach(e=>e.reset());const t=this.grid.static.getSpawnCoords(this.teams.map(e=>e.members.length),this.grid.dimensions);return this.teams.forEach((e,r)=>{e.members.forEach((e,s)=>{e.reset(this.grid.tile.at(t[r][s]))})}),this.scoreInfo.reset(),Promise.resolve()}))}__createArtifPlayer(e){return p.a.of(this,e)}dryRunShuffleLangCharSeqAt(e){e.setLangCharSeqPair(n.a.CharSeqPair.NULL);const t=Array.from(new Set(this.grid.tile.sourcesTo(e.coord).get.flatMap(e=>this.grid.tile.destsFrom(e.coord).get)));return this.lang.getNonConflictingChar(t.map(e=>e.langSeq).filter(e=>e),this.langBalancingScheme)}get currentFreeHealth(){return m(this,l)}get freeHealthTiles(){return m(this,d)}dryRunSpawnFreeHealth(e){let t=this.averageFreeHealth-this.currentFreeHealth;if(t<=0)return;const r=[];for(;t>0;){let s;do{s=this.grid.tile.at(this.grid.getRandomCoord())}while(s.isOccupied||r.find(e=>s.coord.equals(e.coord)));const n=1;if(Math.random()<a.a.K.HEALTH_UPDATE_CHANCE){let t;(t=e.find(e=>s.coord.equals(e.coord)))?t.newFreeHealth=(t.newFreeHealth||0)+n:r.push({coord:s.coord,lastKnownUpdateId:1+s.lastKnownUpdateId,newCharSeqPair:void 0,newFreeHealth:s.freeHealth+n})}t-=n}return r}getHealthCostOfBoost(){return this.averageFreeHealthPerTile/a.a.K.PCT_MOVES_THAT_ARE_BOOST}executeTileModEvent(e,t=!0){Object.freeze(e);const r=this.grid.tile.at(e.coord);if(e.lastKnownUpdateId!==1+r.lastKnownUpdateId)throw new Error("this never happens. see comment in source.");return g(this,l,m(this,l)+(e.newFreeHealth-r.freeHealth)),0===e.newFreeHealth?m(this,d).delete(r):m(this,d).add(r),super.executeTileModEvent(e,t),r}managerCheckGamePlayingRequest(e){if(this.status!==a.a.Status.PLAYING)return;const t=this.players[e.playerId];if(!t)throw new Error("No such player exists.");if(e.playerLastAcceptedRequestId!==t.lastAcceptedRequestId)throw new RangeError(e.playerLastAcceptedRequestId<t.lastAcceptedRequestId?"Clients should not make requests until they have received my response to their last request.":"Client seems to have incremented the request ID counter on their own, which is is illegal.");return t}processMoveRequest(e){const t=this.managerCheckGamePlayingRequest(e);if(!t)return void this.executePlayerMoveEvent(e);const r=this.grid.tile.at(e.destModDesc.coord);if(r.isOccupied||r.lastKnownUpdateId!==e.destModDesc.lastKnownUpdateId)return void this.executePlayerMoveEvent(e);const s=t.status.health+r.freeHealth*(t.status.isDowned?a.a.K.HEALTH_EFFECT_FOR_DOWNED_PLAYER:1)-(e.moveType===o.a.MoveType.BOOST?this.getHealthCostOfBoost():0);if(s<0)return void this.executePlayerMoveEvent(e);const n=this.scoreInfo.entries[t.playerId];n.totalHealthPickedUp+=r.freeHealth,n.moveCounts[e.moveType]+=1,e.playerLastAcceptedRequestId=1+t.lastAcceptedRequestId,e.newPlayerHealth={health:s},e.destModDesc.lastKnownUpdateId=1+r.lastKnownUpdateId,e.destModDesc.newFreeHealth=0,e.destModDesc.newCharSeqPair=this.dryRunShuffleLangCharSeqAt(r),e.tileHealthModDescs=this.dryRunSpawnFreeHealth([e.destModDesc]),e.eventId=this.nextUnusedEventId,this.executePlayerMoveEvent(e)}processPlayerContact(e){}processBubbleRequest(e){const t=this.managerCheckGamePlayingRequest(e);t?(e.playerLastAcceptedRequestId=1+t.lastAcceptedRequestId,e.eventId=this.nextUnusedEventId,this.executePlayerBubbleEvent(e)):this.executePlayerBubbleEvent(e)}}l=new WeakMap,d=new WeakMap,u=new WeakMap,Object.freeze(v),Object.freeze(v.prototype),r(12);class w extends v{constructor(e,t){super(s.b.Type.OFFLINE,{onGameBecomeOver:e,tileClass:s.f,playerStatusCtor:s.e},t),this.__BrowserGame_Ctor()}__getGridImplementation(e){return s.d.getImplementation(e)}setTimeout(e,t,...r){return setTimeout(e,t,r)}cancelTimeout(e){clearTimeout(e)}}Object(s.g)(w,[s.a]),Object.freeze(w),Object.freeze(w.prototype)}}]);
//# sourceMappingURL=offline.js.map