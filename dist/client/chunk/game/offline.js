(window.webpackJsonpsnakey3=window.webpackJsonpsnakey3||[]).push([[0],{13:function(e,t,r){"use strict";var s;r.r(t),r.d(t,"OfflineGame",(function(){return Te})),function(e){let t,r,s,i;!function(e){e.SERVER="SERVER",e.ONLINE="ONLINE",e.OFFLINE="OFFLINE"}(t=e.Type||(e.Type={})),function(e){e.EVENT_NAME="game-create"}(r=e.CtorArgs||(e.CtorArgs={})),function(e){e.EVENT_NAME="game-reset"}(s=e.Serialization||(e.Serialization={})),function(e){e.PLAYING="PLAYING",e.PAUSED="PAUSED",e.OVER="OVER"}(i=e.Status||(e.Status={})),e.K=Object.freeze({HEALTH_UPDATE_CHANCE:.1,PCT_MOVES_THAT_ARE_BOOST:.05,HEALTH_EFFECT_FOR_DOWNED_PLAYER:.6,EVENT_RECORD_WRAPPING_BUFFER_LENGTH:128,EVENT_RECORD_FORWARD_WINDOW_LENGTH:64})}(s||(s={})),Object.freeze(s);var i,a=r(0),n=r(1);!function(e){let t;!function(e){e.EUCLID2="EUCLID2",e.BEEHIVE="BEEHIVE"}(t=e.System||(e.System={}));class r{constructor(e){}}e.Abstract=r,function(t){class r extends e.Abstract{}t.Mathy=r}(r=e.Abstract||(e.Abstract={})),Object.freeze(r),Object.freeze(r.prototype)}(i||(i={})),Object.freeze(i);var o,h,c,l,d=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},u=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class m{constructor(e){o.set(this,void 0),h.set(this,void 0),c.set(this,void 0),l.set(this,void 0),this.coord=e,d(this,o,n.b.Id.NULL)}reset(){this.evictOccupant(),this.lastKnownUpdateId=0,this.freeHealth=0,this.setLangCharSeqPair(n.a.CharSeqPair.NULL)}__setOccupant(e,t){d(this,o,e)}get isOccupied(){return this.occupantId!==n.b.Id.NULL}evictOccupant(){d(this,o,n.b.Id.NULL)}get occupantId(){return u(this,o)}get freeHealth(){return u(this,h)}set freeHealth(e){d(this,h,e)}setLangCharSeqPair(e){d(this,c,e.char),d(this,l,e.seq)}get langChar(){return u(this,c)}get langSeq(){return u(this,l)}}o=new WeakMap,h=new WeakMap,c=new WeakMap,l=new WeakMap,Object.freeze(m),Object.freeze(m.prototype);var p,f,g=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},E=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class y extends m{constructor(e){super(e),p.set(this,void 0);{const e=g(this,p,document.createElement("div"));e.classList.add(a.a.General.Class.CENTER_CONTENTS,a.a.General.Class.STACK_CONTENTS,a.a.Tile.Class.BASE),e.setAttribute("aria-label","Tile")}{const e=document.createElement("div");e.classList.add(a.a.Tile.Class.POINTER_HB),e.setAttribute("aria-hidden","true"),E(this,p).appendChild(e)}{const e=this.langCharElem=document.createElement("div");e.classList.add(a.a.Tile.Class.LANG_CHAR),E(this,p).appendChild(e)}{const e=this.langSeqElem=document.createElement("div");e.classList.add(a.a.Tile.Class.LANG_SEQ),e.setAttribute("role","tooltip"),E(this,p).appendChild(e)}}__addToDom(e){e.appendChild(E(this,p))}__setOccupant(e,t){super.__setOccupant(e,t),E(this,p).insertBefore(t.playerElem,this.langCharElem),this.langSeqElem.innerText=t.username}evictOccupant(){super.evictOccupant(),this.langSeqElem.innerText=this.langSeq}set freeHealth(e){super.freeHealth=e,this.freeHealth>0?E(this,p).dataset[a.a.Tile.Dataset.HEALTH]=this.freeHealth.toString():delete E(this,p).dataset[a.a.Tile.Dataset.HEALTH]}get freeHealth(){return super.freeHealth}setLangCharSeqPair(e){super.setLangCharSeqPair(e),this.langCharElem.innerText=this.langChar,this.langSeqElem.innerText=this.langSeq}}p=new WeakMap,Object.freeze(y),Object.freeze(y.prototype),function(e){e.getImplementation=t=>e.__Constructors[t]}(f||(f={}));class w{__VisibleGrid_super(e,t){const r=a.a.Grid;t.classList.add(r.Class.IMPL_BODY),t.dataset[r.Dataset.IMPL_COORD_SYS]=e.coordSys,this.baseElem=t;const s=document.createElement("div");s.classList.add(a.a.Player.Class.SHORT_SPOTLIGHT);const i=document.createElement("div");i.classList.add(a.a.Player.Class.LONG_SPOTLIGHT),this.spotlightElems=Object.freeze([s,i])}}Object.freeze(w),Object.freeze(w.prototype);var v,T,b=r(5);!function(e){e.EVENT_ID_REJECT=-1}(v||(v={})),Object.freeze(v),function(e){e.INITIAL_REQUEST_ID=-1,e.EVENT_NAME=Object.freeze({Bubble:"player-bubble",Movement:"player-movement"});class t{constructor(e,t){this.eventId=v.EVENT_ID_REJECT,this.affectedNeighbours=void 0,this.playerId=e,this.playerLastAcceptedRequestId=t}}e.Bubble=t;e.Movement=class extends t{constructor(e,t,r,s){super(e,t),this.newPlayerHealth=void 0,this.tileHealthModDescs=void 0,this.destModDesc={coord:r.coord,lastKnownUpdateId:r.lastKnownUpdateId,newCharSeqPair:void 0,newFreeHealth:void 0},this.moveType=s}}}(T||(T={})),Object.freeze(T);class O{constructor(e){this.source=e}at(...e){return this.source.__getTileAt(...e)}destsFrom(...e){return new _(this.source.__getTileDestsFrom(...e))}sourcesTo(...e){return new _(this.source.__getTileSourcesTo(...e))}}Object.freeze(O),Object.freeze(O.prototype);class _{constructor(e){this.contents=e}get occupied(){return this.contents=this.contents.filter(e=>e.isOccupied),this}get unoccupied(){return this.contents=this.contents.filter(e=>!e.isOccupied),this}get get(){return this.contents}}Object.freeze(_),Object.freeze(_.prototype);var C,I=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},A=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class S extends n.b{constructor(e,t){if(super(),C.set(this,void 0),Math.trunc(t.playerId)!==t.playerId)throw new RangeError("Player ID's must be integer values.");this.playerId=t.playerId,this.isALocalOperator=t.isALocalOperator,this.game=e,this.status=new this.game.__playerStatusCtor(this,t.noCheckGameOver),this.tile=new O(new S.TileGetterSource(this))}__afterAllPlayersConstruction(){this.status.__afterAllPlayersConstruction()}reset(e){I(this,C,e),this.hostTile.__setOccupant(this.playerId,this.status.immigrantInfo)}get coord(){return this.hostTile.coord}get hostTile(){return A(this,C)}onGoBesideOtherPlayer(){}moveTo(e){if(this.hostTile.occupantId!==this.playerId){if(this.game.gameType!==s.Type.ONLINE)throw new Error("Linkage between player and occupied tile disagrees.")}else this.hostTile.evictOccupant();if(e.isOccupied){if(this.game.gameType!==s.Type.ONLINE)throw new Error("Only one player can occupy a tile at a time.")}else I(this,C,e),e.__setOccupant(this.playerId,this.status.immigrantInfo)}}C=new WeakMap,function(e){class t{constructor(e){this.player=e}__getTileAt(){return this.player.game.grid.tile.at(this.player.coord)}__getTileDestsFrom(){return this.player.game.grid.tile.destsFrom(this.player.coord).get}__getTileSourcesTo(){return this.player.game.grid.tile.sourcesTo(this.player.coord).get}}e.TileGetterSource=t,Object.freeze(t),Object.freeze(t.prototype)}(S||(S={})),Object.freeze(S),Object.freeze(S.prototype);var M,N=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},P=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class R{constructor(e,t){if(M.set(this,void 0),0===t.length)throw new Error("teams must have at least one member.");this.id=e,this.members=t,N(this,M,this.members.every(e=>e.status.noCheckGameOver)?R.ElimOrder.IMMORTAL:R.ElimOrder.STANDING)}reset(){this.elimOrder!==R.ElimOrder.IMMORTAL&&(this.elimOrder=R.ElimOrder.STANDING)}get elimOrder(){return P(this,M)}set elimOrder(e){if(this.elimOrder===R.ElimOrder.IMMORTAL)throw new Error("Cannot change the elimination status of an immortal team.");N(this,M,e)}}M=new WeakMap,function(e){let t;!function(e){e.IMMORTAL=-1,e.STANDING=0}(t=e.ElimOrder||(e.ElimOrder={}))}(R||(R={})),Object.freeze(R),Object.freeze(R.prototype);var H,L=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)},z=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r};class j{constructor(e,t){H.set(this,void 0),this.player=e,this.noCheckGameOver=t}reset(){this.health=0}__afterAllPlayersConstruction(){}get immigrantInfo(){}get health(){return L(this,H)}set health(e){const t=this.isDowned;if(z(this,H,e),t||!this.isDowned||this.noCheckGameOver)return;const r=this.player.team,s=this.player.game.teams;if(r.elimOrder===R.ElimOrder.STANDING&&r.members.every(e=>e.status.noCheckGameOver||e.status.isDowned)){const e=1+s.filter(e=>e.elimOrder!==R.ElimOrder.STANDING).length;r.elimOrder=1+s.filter(e=>e.elimOrder!==R.ElimOrder.STANDING&&e.elimOrder!==R.ElimOrder.IMMORTAL).length,e===s.length&&this.player.game.statusBecomeOver()}}get isDowned(){return this.health<0}}H=new WeakMap,Object.freeze(j),Object.freeze(j.prototype);class q extends S{constructor(e,t){if(super(e,t),!q.Username.REGEXP.test(t.username))throw new RangeError(`Username "${t.username}" does not match the required regular expression, "${q.Username.REGEXP.source}".`);this.familyId=t.familyId,this.teamId=t.teamId,this.username=t.username}reset(e){super.reset(e),this.status.reset(),this.lastAcceptedRequestId=T.INITIAL_REQUEST_ID,this.requestInFlight=!1}__abstractNotifyThatGameStatusBecamePlaying(){}__abstractNotifyThatGameStatusBecamePaused(){}__abstractNotifyThatGameStatusBecameOver(){}makeMovementRequest(e,t){if(this.game.status!==s.Status.PLAYING)throw new Error("This is not a necessary precondition, but we're doing it anyway.");if(this.requestInFlight)throw new Error("Only one request should ever be in flight at a time.");this.requestInFlight=!0,this.game.processMoveRequest(new T.Movement(this.playerId,this.lastAcceptedRequestId,e,t))}get team(){return this.game.teams[this.teamId]}isTeamedWith(e){return this.team.members.includes(e)}}!function(e){let t,r;!function(e){e.REGEXP=/[a-zA-Z](?:[ ]?[a-zA-Z0-9:-]+?){4,}/}(t=e.Username||(e.Username={})),function(e){e.finalize=e=>{const t=Array.from(new Set(e.map(e=>e.teamId))).sort((e,t)=>e-t).reduce((e,t,r)=>(e[t]=r,e),[]);return e.slice().sort((e,r)=>t[e.teamId]-t[r.teamId]).map((e,r)=>Object.assign(e,{playerId:r,teamId:t[e.teamId]}))}}(r=e.CtorArgs||(e.CtorArgs={})),Object.freeze(r)}(q||(q={})),Object.freeze(q),Object.freeze(q.prototype);var D,x=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},F=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class G extends q{constructor(e,t){super(e,t),D.set(this,void 0),this.langRemappingFunc=this.game.langFrontend.remapFunc}reset(e){super.reset(e),this.prevCoord=e.coord,x(this,D,"")}processKeyboardInput(e){this.game.status===s.Status.PLAYING&&(this.requestInFlight||(32===e.keyCode?this.coord.equals(this.prevCoord)||this.makeMovementRequest(this.game.grid.getUntAwayFrom(this.coord,this.prevCoord),q.MoveType.BOOST):1===e.key.length&&this.seqBufferAcceptKey(e.key)))}seqBufferAcceptKey(e){const t=this.tile.destsFrom().unoccupied.get;if(0!==t.length)if(e){if(e=this.langRemappingFunc(e),b.a.Seq.REGEXP.test(e)){for(let r=this.seqBuffer+e;r.length;r=r.substring(1)){const e=t.find(e=>e.langSeq.startsWith(r));if(e)return x(this,D,r),void(e.langSeq===r&&this.makeMovementRequest(e,q.MoveType.NORMAL))}x(this,D,""),this.status.visualBell()}}else{t.find(e=>e.langSeq.startsWith(this.seqBuffer))||x(this,D,"")}}moveTo(e){x(this,D,""),this.prevCoord=this.coord,super.moveTo(e)}__abstractNotifyBecomeCurrent(){this.status.__notifyBecomeCurrent(this.game.grid.spotlightElems)}get seqBuffer(){return F(this,D)}}D=new WeakMap,Object.freeze(G),Object.freeze(G.prototype);var B,U,W,k=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},V=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class K extends j{constructor(e,t){super(e,t),B.set(this,void 0),U.set(this,void 0);k(this,B,document.createElement("div")).classList.add(a.a.General.Class.CENTER_CONTENTS,a.a.General.Class.STACK_CONTENTS,a.a.Player.Class.BASE);{const e=document.createElement("div");e.classList.add(a.a.Player.Class.FACE);k(this,U,this.player.isALocalOperator?[e.animate({filter:["brightness(0.7)","brightness(1.0)"]},{duration:300,easing:"ease-in"}),e.animate({transform:K.makeWiggleAnimation(10,2)},{duration:270,easing:"ease-out"})]:[]);{const t=document.createElement("div");t.classList.add(a.a.Player.Class.DOWNED_OVERLAY),e.appendChild(t)}V(this,B).appendChild(e)}}__afterAllPlayersConstruction(){const e=this.player,t=this.player.game.operators[0].teamId;V(this,B).dataset[a.a.Player.Dataset.FACE_SWATCH]=e.isALocalOperator?"me":e.teamId===t?"teammate":"opponent",this.__immigrantInfoCache=Object.freeze({playerElem:V(this,B),username:e.username})}reset(){super.reset();const e=a.a.Player.Dataset.DOWNED;V(this,B).dataset[e.KEY]=e.VALUES.NO}get immigrantInfo(){return this.__immigrantInfoCache}__notifyBecomeCurrent(e){e.forEach(e=>{V(this,B).appendChild(e)})}visualBell(){window.requestAnimationFrame(e=>{V(this,U).forEach(e=>e.play())})}get health(){return super.health}set health(e){const t=this.isDowned;if(super.health=e,t!==this.isDowned){const e=a.a.Player.Dataset.DOWNED;V(this,B).dataset[e.KEY]=this.isDowned?this.player.team.elimOrder?e.VALUES.TEAM:e.VALUES.SELF:e.VALUES.NO}}}B=new WeakMap,U=new WeakMap,(K||(K={})).makeWiggleAnimation=function(e,t){const r=Array(2*t).fill(e);return r.unshift(0),r.push(0),r.map((e,t)=>`translate(${t%2?e:-e}%)`)},Object.freeze(K),Object.freeze(K.prototype);class Y extends q{constructor(e,t){if(super(e,t),e.gameType===s.Type.ONLINE)throw new TypeError("OnlineGames should be using regular Players instead.")}__abstractNotifyThatGameStatusBecamePlaying(){this.movementContinueWithInitialDelay()}__abstractNotifyThatGameStatusBecamePaused(){this.game.cancelTimeout(this.scheduledMovementCallbackId),this.scheduledMovementCallbackId=void 0}__abstractNotifyThatGameStatusBecameOver(){this.game.cancelTimeout(this.scheduledMovementCallbackId),this.scheduledMovementCallbackId=void 0}movementContinue(){this.makeMovementRequest(this.game.grid.getUntToward(this.coord,this.computeDesiredDestination()),this.getNextMoveType()),this.movementContinueWithInitialDelay()}movementContinueWithInitialDelay(){this.scheduledMovementCallbackId=this.game.setTimeout(()=>this.movementContinue(),this.computeNextMovementTimer())}}(W=Y||(Y={})).of=(e,t)=>{const r=t.familyId;return new W.__Constructors[r](e,t)};var $,J,Q=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},X=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class Z{constructor(e,t,r){$.set(this,void 0),J.set(this,void 0),this.gameType=e;const s=this.__getGridImplementation(r.coordSys);if(this.grid=new s({gridClass:s,tileClass:t.tileClass,coordSys:r.coordSys,dimensions:r.gridDimensions}),this.langFrontend=n.a.GET_FRONTEND_DESC_BY_ID(r.langId),this.__playerStatusCtor=t.playerStatusCtor,this.players=this.createPlayers(r),this.operators=this.players.filter(e=>e.isALocalOperator),this.currentOperator=this.operators[0],this.operators.some(e=>e.teamId!==this.operators[0].teamId))throw new Error("All local operators must be on the same team.");{const e=[];if(this.players.forEach(t=>{e[t.teamId]||(e[t.teamId]=[]),e[t.teamId].push(t)}),this.teams=e.map((e,t)=>new R(t,e)),this.teams.every(e=>e.id===R.ElimOrder.IMMORTAL))throw new Error("All teams are immortal. The game will never end.")}this.players.forEach(e=>e.__afterAllPlayersConstruction())}reset(){return this.grid.reset(),Q(this,J,s.Status.PAUSED),Promise.resolve()}createPlayers(e){const t=e.playerDescs=this.gameType===s.Type.ONLINE?e.playerDescs:q.CtorArgs.finalize(e.playerDescs);return Object.freeze(t.map(e=>e.familyId===q.Family.HUMAN?e.isALocalOperator?this.__createOperatorPlayer(e):new q(this,e):this.__createArtifPlayer(e)))}serializeResetState(){const e=[],t=this.players.map(e=>e.coord),r=[];return this.grid.forEachTile(t=>{e.push({char:t.langChar,seq:t.langSeq}),t.freeHealth&&r.push({coord:t.coord,health:t.freeHealth})}),{csps:e,playerCoords:t,healthCoords:r}}deserializeResetState(e){{let t=0;this.grid.forEachTile(r=>{r.setLangCharSeqPair(e.csps[t++]),r.lastKnownUpdateId=1})}e.playerCoords.forEach((e,t)=>{this.players[t].moveTo(this.grid.tile.at(e))}),e.healthCoords.forEach(e=>{this.grid.tile.at(e.coord).freeHealth=e.health})}get currentOperator(){return X(this,$)}set currentOperator(e){e&&this.currentOperator!==e&&this.operators.includes(e)&&(Q(this,$,e),e.__abstractNotifyBecomeCurrent())}get status(){return X(this,J)}statusBecomePlaying(){if(this.status!==s.Status.PLAYING){if(this.status!==s.Status.PAUSED)throw new Error("Can only resume a game that is currently paused.");this.players.forEach(e=>{e.__abstractNotifyThatGameStatusBecamePlaying()}),this.__abstractStatusBecomePlaying(),Q(this,J,s.Status.PLAYING)}else console.log("[statusBecomePlaying]: Game is already playing")}statusBecomePaused(){if(this.status!==s.Status.PAUSED){if(this.status!==s.Status.PLAYING)throw new Error("Can only pause a game that is currently playing.");this.players.forEach(e=>{e.__abstractNotifyThatGameStatusBecamePaused()}),this.__abstractStatusBecomePaused(),Q(this,J,s.Status.PAUSED)}else console.log("[statusBecomePaused]: Game is already paused")}statusBecomeOver(){if(this.status!==s.Status.PLAYING)throw new Error("Can only end a game that is currently playing.");this.players.forEach(e=>{e.__abstractNotifyThatGameStatusBecameOver()}),this.__abstractStatusBecomeOver(),Q(this,J,s.Status.OVER),console.log("game is over!")}__abstractStatusBecomePlaying(){}__abstractStatusBecomePaused(){}__abstractStatusBecomeOver(){}}$=new WeakMap,J=new WeakMap,Object.freeze(Z),Object.freeze(Z.prototype);var ee,te=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},re=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class se extends Z{constructor(e,t,r){super(e,t,r),ee.set(this,void 0),this.eventRecordBitmap=[]}reset(){const e=super.reset();return this.eventRecordBitmap.fill(!1,0,s.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH),te(this,ee,0),e}get nextUnusedEventId(){return re(this,ee)}recordEvent(e){const t=e.eventId,r=t%s.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH;if(t===v.EVENT_ID_REJECT)throw new TypeError("Do not try to record events for rejected requests.");if(t<0||t!==Math.trunc(t))throw new RangeError("Event ID's must only be assigned positive, integer values.");if(this.eventRecordBitmap[r])throw new Error("Event ID's must be assigned unique values.");this.eventRecordBitmap[r]=!0,this.eventRecordBitmap[(t+s.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH-s.K.EVENT_RECORD_FORWARD_WINDOW_LENGTH)%s.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH]=!1,te(this,ee,+re(this,ee)+1)}executeTileModEvent(e,t=!0){Object.freeze(e);const r=this.grid.tile.at(e.coord);if(r.lastKnownUpdateId>e.lastKnownUpdateId)return r;if(r.lastKnownUpdateId===e.lastKnownUpdateId)throw new Error("never.");return e.newCharSeqPair&&(r.setLangCharSeqPair(e.newCharSeqPair),t&&this.operators.filter(e=>e.tile.destsFrom().get.includes(r)).forEach(e=>e.seqBufferAcceptKey(""))),r.lastKnownUpdateId=e.lastKnownUpdateId,r.freeHealth=e.newFreeHealth,r}executePlayerMoveEvent(e){var t;const r=this.players[e.playerId],s=e.playerLastAcceptedRequestId-r.lastAcceptedRequestId;if(e.eventId===v.EVENT_ID_REJECT)return void(0===s&&(r.requestInFlight=!1));this.recordEvent(e);const i=this.executeTileModEvent(e.destModDesc,r!==this.currentOperator);if(null===(t=e.tileHealthModDescs)||void 0===t||t.forEach(e=>{this.executeTileModEvent(e)}),s>1){if(r===this.currentOperator)throw new Error("This never happens. See comment in source.")}else{if(r.requestInFlight=!1,!(r===this.currentOperator?1===s:s<=1))throw new Error("This never happens. See comment in source");r.status.health=e.newPlayerHealth.health,r.moveTo(i),r.lastAcceptedRequestId=e.playerLastAcceptedRequestId}}executePlayerBubbleEvent(e){this.players[e.playerId].requestInFlight=!1,e.eventId!==v.EVENT_ID_REJECT&&this.recordEvent(e)}}ee=new WeakMap,Object.freeze(se),Object.freeze(se.prototype);class ie{constructor(e){const t=[];for(const r of e)t[r]=new ie.Entry;this.entries=t}reset(){for(const e of this.entries)e.reset()}}!function(e){class t{constructor(){this.moveCounts={}}reset(){this.totalHealthPickedUp=0,Object.getOwnPropertyNames(n.b.MoveType).forEach(e=>{this.moveCounts[e]=0})}}e.Entry=t,Object.freeze(t),Object.freeze(t.prototype)}(ie||(ie={})),Object.freeze(ie),Object.freeze(ie.prototype);var ae,ne,oe,he,ce,le,de=function(e,t,r,s){return new(r||(r=Promise))((function(i,a){function n(e){try{h(s.next(e))}catch(e){a(e)}}function o(e){try{h(s.throw(e))}catch(e){a(e)}}function h(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(n,o)}h((s=s.apply(e,t||[])).next())}))},ue=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},me=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class pe extends se{constructor(e,t,s){super(e,t,s),ae.set(this,void 0),ne.set(this,void 0),oe.set(this,void 0),this.averageFreeHealth=s.averageFreeHealthPerTile*this.grid.area,this.averageFreeHealthPerTile=s.averageFreeHealthPerTile,ue(this,ne,new Set),ue(this,oe,r(7)(`./${this.langFrontend.module}.ts`).then(e=>{this.lang=e[this.langFrontend.module][this.langFrontend.export].getInstance();const t=this.grid.static.getAmbiguityThreshold();if(this.lang.numLeaves<t)throw new Error(`Found ${this.lang.numLeaves} leaves, but at least ${t} were required. The provided mappings composing the current Lang-under-construction are not sufficient to ensure that a shuffling operation will always be able to find a safe candidate to use as a replacement. Please see the spec for Lang.getNonConflictingChar.`);return this.lang})),this.langBalancingScheme=s.langBalancingScheme,this.scoreInfo=new ie(this.players.map(e=>e.playerId))}reset(){const e=Object.create(null,{reset:{get:()=>super.reset}});return de(this,void 0,void 0,(function*(){yield e.reset.call(this),ue(this,ae,0),me(this,ne).clear(),yield me(this,oe),this.lang.reset(),this.grid.forEachTile(e=>{e.setLangCharSeqPair(this.dryRunShuffleLangCharSeqAt(e))}),this.teams.forEach(e=>e.reset());const t=this.grid.static.getSpawnCoords(this.teams.map(e=>e.members.length),this.grid.dimensions);return this.teams.forEach((e,r)=>{e.members.forEach((e,s)=>{e.reset(this.grid.tile.at(t[r][s]))})}),this.scoreInfo.reset(),Promise.resolve()}))}dryRunShuffleLangCharSeqAt(e){e.setLangCharSeqPair(b.a.CharSeqPair.NULL);const t=Array.from(new Set(this.grid.tile.sourcesTo(e.coord).get.flatMap(e=>this.grid.tile.destsFrom(e.coord).get)));return this.lang.getNonConflictingChar(t.map(e=>e.langSeq).filter(e=>e),this.langBalancingScheme)}get currentFreeHealth(){return me(this,ae)}get freeHealthTiles(){return me(this,ne)}dryRunSpawnFreeHealth(e){let t=this.averageFreeHealth-this.currentFreeHealth;if(t<=0)return;const r=[];for(;t>0;){let i;do{i=this.grid.tile.at(this.grid.getRandomCoord())}while(i.isOccupied||r.find(e=>i.coord.equals(e.coord)));const a=1;if(Math.random()<s.K.HEALTH_UPDATE_CHANCE){let t;(t=e.find(e=>i.coord.equals(e.coord)))?t.newFreeHealth=(t.newFreeHealth||0)+a:r.push({coord:i.coord,lastKnownUpdateId:1+i.lastKnownUpdateId,newCharSeqPair:void 0,newFreeHealth:i.freeHealth+a})}t-=a}return r}getHealthCostOfBoost(){return this.averageFreeHealthPerTile/s.K.PCT_MOVES_THAT_ARE_BOOST}executeTileModEvent(e,t=!0){Object.freeze(e);const r=this.grid.tile.at(e.coord);if(e.lastKnownUpdateId!==1+r.lastKnownUpdateId)throw new Error("this never happens. see comment in source.");return ue(this,ae,me(this,ae)+(e.newFreeHealth-r.freeHealth)),0===e.newFreeHealth?me(this,ne).delete(r):me(this,ne).add(r),super.executeTileModEvent(e,t),r}managerCheckGamePlayingRequest(e){if(this.status!==s.Status.PLAYING)return;const t=this.players[e.playerId];if(!t)throw new Error("No such player exists.");if(e.playerLastAcceptedRequestId!==t.lastAcceptedRequestId)throw new RangeError(e.playerLastAcceptedRequestId<t.lastAcceptedRequestId?"Clients should not make requests until they have received my response to their last request.":"Client seems to have incremented the request ID counter on their own, which is is illegal.");return t}processMoveRequest(e){const t=this.managerCheckGamePlayingRequest(e);if(!t)return void this.executePlayerMoveEvent(e);const r=this.grid.tile.at(e.destModDesc.coord);if(r.isOccupied||r.lastKnownUpdateId!==e.destModDesc.lastKnownUpdateId)return void this.executePlayerMoveEvent(e);const i=t.status.health+r.freeHealth*(t.status.isDowned?s.K.HEALTH_EFFECT_FOR_DOWNED_PLAYER:1)-(e.moveType===q.MoveType.BOOST?this.getHealthCostOfBoost():0);if(i<0)return void this.executePlayerMoveEvent(e);const a=this.scoreInfo.entries[t.playerId];a.totalHealthPickedUp+=r.freeHealth,a.moveCounts[e.moveType]+=1,e.playerLastAcceptedRequestId=1+t.lastAcceptedRequestId,e.newPlayerHealth={health:i},e.destModDesc.lastKnownUpdateId=1+r.lastKnownUpdateId,e.destModDesc.newFreeHealth=0,e.destModDesc.newCharSeqPair=this.dryRunShuffleLangCharSeqAt(r),e.tileHealthModDescs=this.dryRunSpawnFreeHealth([e.destModDesc]),e.eventId=this.nextUnusedEventId,this.executePlayerMoveEvent(e)}processPlayerContact(e){}processBubbleRequest(e){const t=this.managerCheckGamePlayingRequest(e);t?(e.playerLastAcceptedRequestId=1+t.lastAcceptedRequestId,e.eventId=this.nextUnusedEventId,this.executePlayerBubbleEvent(e)):this.executePlayerBubbleEvent(e)}}ae=new WeakMap,ne=new WeakMap,oe=new WeakMap,Object.freeze(pe),Object.freeze(pe.prototype);class fe{constructor(e){this.static=e.gridClass,this.dimensions=e.dimensions,this.tile=new O(this)}get area(){return this.static.getArea(this.dimensions)}reset(){this.forEachTile(e=>e.reset())}check(){}getRandomCoord(){return this.static.getRandomCoord(this.dimensions)}}(he=fe||(fe={})).getImplementation=e=>he.__Constructors[e],function(e){class t extends i.Abstract.Mathy{constructor(e){super(e),this.x=e.x,this.y=e.y,Object.freeze(this)}equals(e){return this.x===e.x&&this.y===e.y}round(){return new t({x:Math.round(this.x),y:Math.round(this.y)})}oneNorm(e){return this.sub(e).originOneNorm()}originOneNorm(){return Math.abs(this.x)+Math.abs(this.y)}infNorm(e){return this.sub(e).originInfNorm()}originInfNorm(){return Math.max(Math.abs(this.x),Math.abs(this.y))}axialAlignment(e){return this.sub(e).originAxialAlignment()}originAxialAlignment(){return Math.abs(Math.abs(this.x)-Math.abs(this.y))/(Math.abs(this.x)+Math.abs(this.y))}add(e){return new t({x:this.x+e.x,y:this.y+e.y})}sub(e){return new t({x:this.x-e.x,y:this.y-e.y})}mul(e){return new t({x:e*this.x,y:e*this.y})}}e.Coord=t,Object.freeze(t),Object.freeze(t.prototype);class r extends fe{constructor(e){super(e);const r=[];for(let s=0;s<this.dimensions.height;s++){const i=[];for(let r=0;r<this.dimensions.width;r++){const a=new e.tileClass(new t({x:r,y:s}));i.push(a)}r.push(i)}this.grid=r}static getAmbiguityThreshold(){return 24}static getSizeLimits(){return this.SIZE_LIMITS}forEachTile(e,t=this){for(const t of this.grid)for(const r of t)e(r)}getUntToward(e,t){const r=this.tile.destsFrom(e).unoccupied.get;if(0===r.length)return this.tile.at(e);if(1===r.length)return r[0];r.sort((e,r)=>e.coord.oneNorm(t)-r.coord.oneNorm(t)).sort((e,r)=>e.coord.infNorm(t)-r.coord.infNorm(t));for(let e=1;e<r.length;e++)if(r[e].coord.infNorm(t)>r[0].coord.infNorm(t)){r.splice(e);break}if(1===r.length)return r[0];if(r[0].coord.x-e.x==0||r[0].coord.y-e.y==0){if(e.axialAlignment(e.sub(t))-.5>0)return r[0];r.shift()}return r[Math.floor(r.length*Math.random())]}getUntAwayFrom(e,t){return this.getUntToward(e,e.add(e.sub(t)))}getRandomCoordAround(e,r){return new t({x:e.x+Math.trunc(2*r*(Math.random()-.5)),y:e.y+Math.trunc(2*r*(Math.random()-.5))})}__getTileAt(e){if(e.x<0||e.x>=this.dimensions.width||e.y<0||e.y>=this.dimensions.height)throw new RangeError("Out of bounds. No such tile exists.");return this.grid[e.y][e.x]}__getTileDestsFrom(e,t=1){let r=e.y-t,s=e.y+t+1,i=e.x-t,a=e.x+t+1;return r>=this.dimensions.height||s<0||i>=this.dimensions.width||a<0?[]:this.grid.slice(Math.max(0,r),Math.min(this.dimensions.height,s)).flatMap(e=>e.slice(Math.max(0,i),Math.min(this.dimensions.width,a)))}__getTileSourcesTo(e,t=1){return this.__getTileDestsFrom(e,t)}minMovesFromTo(e,t){return Math.min(Math.abs(t.x-e.x),Math.abs(t.y-e.y))}static getSpawnCoords(e,t){const s=[];return e.map(e=>{const i=[];for(;e>0;){let a;do{a=r.getRandomCoord(t)}while(s.find(e=>a.equals(e)));i.push(a),s.push(a),e--}return i})}static getArea(e){return e.height*e.width}static getRandomCoord(e){const r=Math.floor(e.width*Math.random()),s=Math.floor(e.height*Math.random());return new t({x:r,y:s})}}r.SIZE_LIMITS=Object.freeze({height:Object.freeze({min:11,max:51}),width:Object.freeze({min:11,max:51})}),e.Grid=r,function(e){class t extends e{constructor(e){super(e);const t=document.createElement("div");t.style.setProperty("--euclid2-grid-width",this.dimensions.width.toString());for(const e of this.grid)for(const r of e)r.__addToDom(t);this.__VisibleGrid_super(e,t)}}e.Visible=t,Object(n.c)(t,[w]),Object.freeze(t),Object.freeze(t.prototype)}(r=e.Grid||(e.Grid={})),Object.freeze(r),Object.freeze(r.prototype)}(ce||(ce={})),Object.freeze(ce),function(e){class t extends i.Abstract.Mathy{constructor(e){super(e),this.dash=e.dash,this.bash=e.bash,Object.freeze(this)}equals(e){return this.dash===e.dash&&this.bash===e.bash}round(){const e=Math.floor(this.dash),r=Math.floor(this.bash),s=e-this.dash,i=r-this.bash;return s>2*i?new t({dash:e+1,bash:r}):s<.5*i?new t({dash:e,bash:r+1}):Math.min(s,i)>.5?new t({dash:e+1,bash:r+1}):new t({dash:e,bash:r})}add(e){return new t({dash:this.dash+e.dash,bash:this.bash+e.bash})}sub(e){return new t({dash:this.dash-e.dash,bash:this.bash-e.bash})}mul(e){return new t({dash:e*this.dash,bash:e*this.bash})}}e.Coord=t,Object.freeze(t),Object.freeze(t.prototype);class r extends fe{constructor(e){super(e)}static getAmbiguityThreshold(){return 18}static getSizeLimits(){return this.SIZE_LIMITS}forEachTile(e,t=this){this.grid.forEach(r=>r.forEach(t=>{e(t)},t),t)}getUntToward(e,t){}getUntAwayFrom(e,t){return this.getUntToward(e,e.add(e.sub(t)))}getRandomCoordAround(e,t){}__getTileAt(e){}__getTileDestsFrom(e){}__getTileSourcesTo(e){}minMovesFromTo(e,t){}static getSpawnCoords(e,t){}static getArea(e){const t=Math.min(e.fslash,e.bslash),r=Math.max(e.fslash,e.bslash),s=-1+e.dash+t;let i=2*t*(e.dash+s);return i+=(r-t-1)*s,i}static getRandomCoord(e){return new t(void 0)}}r.SIZE_LIMITS=Object.freeze({dash:Object.freeze({min:10,max:50}),bslash:Object.freeze({min:10,max:50}),fslash:Object.freeze({min:10,max:50})}),e.Grid=r,function(e){class t extends e{constructor(e){super(e);this.__VisibleGrid_super(e,void 0)}}e.Visible=t,Object(n.c)(t,[w]),Object.freeze(t),Object.freeze(t.prototype)}(r=e.Grid||(e.Grid={})),Object.freeze(r),Object.freeze(r.prototype)}(le||(le={})),Object.freeze(le);var ge,Ee,ye=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,r),r},we=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class ve extends Y{constructor(e,t){super(e,t),ge.set(this,void 0),this.behaviour=Object.freeze(t.familyArgs),this.grid=this.game.grid}__afterAllPlayersConstruction(){super.__afterAllPlayersConstruction(),this.threatProximity=this.game.teams.filter(e=>e.id!==this.teamId).flatMap(e=>e.members),this.targetProximity=this.threatProximity.slice()}reset(e){super.reset(e),ye(this,ge,this.coord)}moveTo(e){ye(this,ge,this.coord),super.moveTo(e)}computeDesiredDestination(){this.threatProximity.sort((e,t)=>this.grid.minMovesFromTo(e.coord,this.coord)-this.grid.minMovesFromTo(t.coord,this.coord));for(const e of this.threatProximity){if(this.grid.minMovesFromTo(e.coord,this.coord)>this.behaviour.fearDistance)break;if(!e.status.isDowned&&e.status.health>this.status.health)return this.grid.getUntAwayFrom(this.coord,e.coord).coord}if(this.targetProximity.sort((e,t)=>this.grid.minMovesFromTo(this.coord,e.coord)-this.grid.minMovesFromTo(this.coord,t.coord)),this.status.isDowned)for(const e of this.targetProximity){if(this.grid.minMovesFromTo(this.coord,e.coord)>this.behaviour.bloodThirstDistance)break;if(e.status.health<this.status.health-this.behaviour.healthReserve)return e.coord}if(0===this.game.freeHealthTiles.size){const e=.2;return Math.random()<e?this.grid.getRandomCoordAround(this.coord,3):this.grid.getRandomCoordAround(this.grid.getUntAwayFrom(this.grid.getUntAwayFrom(this.coord,we(this,ge)).coord,we(this,ge)).coord,1)}let e=void 0,t=1/0;for(const r of this.game.freeHealthTiles){const s=this.grid.minMovesFromTo(this.coord,r.coord);s<t&&(e=r,t=s)}return e.coord}getNextMoveType(){return q.MoveType.NORMAL}computeNextMovementTimer(){return 1e3/this.behaviour.movesPerSecond}}ge=new WeakMap,Object.freeze(ve),Object.freeze(ve.prototype),function(e){function t(){fe.__Constructors=Object.freeze({EUCLID2:ce.Grid,BEEHIVE:le.Grid}),Object.freeze(fe),Object.freeze(fe.prototype);{const e=f;e.__Constructors=Object.freeze({EUCLID2:ce.Grid.Visible,BEEHIVE:le.Grid.Visible}),Object.freeze(e)}{const e=Y;e.__Constructors=Object.freeze({CHASER:ve}),Object.freeze(e),Object.freeze(e.prototype)}}e.INIT_CLASS_REGISTRIES=t,Object.freeze(t)}(Ee||(Ee={})),Object.freeze(Ee),r(6),Ee.INIT_CLASS_REGISTRIES();class Te extends pe{constructor(e){super(s.Type.OFFLINE,{tileClass:y,playerStatusCtor:K},e),this.htmlElements=Object.freeze({gridImplElem:this.grid.baseElem})}__getGridImplementation(e){return f.getImplementation(e)}__createOperatorPlayer(e){return new G(this,e)}__createArtifPlayer(e){return Y.of(this,e)}setTimeout(e,t,...r){return setTimeout(e,t,r)}cancelTimeout(e){clearTimeout(e)}}Object.freeze(Te),Object.freeze(Te.prototype)},5:function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var s,i=r(1);class a{constructor(e,t,r){this.sequence=t,this.characters=r,this.parent=e,this.children=[]}static CREATE_TREE_MAP(e){const t=new Map;for(const r in e){const s=e[r].seq,i=new n(r,e[r].weight),a=t.get(s);a?a.push(i):t.set(s,[i])}const r=new a.Root;return Array.from(t).sort((e,t)=>e[0].length-t[0].length).forEach(e=>{r.addCharMapping(...e)}),r.finalize(),r}finalize(){this.validateConstruction(),Object.freeze(this.characters),Object.freeze(this.children),this.children.forEach(e=>e.finalize())}validateConstruction(){if(!this.sequence.startsWith(this.parent.sequence))throw new Error("Child node's sequence must start with that of its parent.")}reset(){this.children.forEach(e=>e.reset()),this.inheritingHitCount=0,this.inheritingWeightedHitCount=0,this.characters.forEach(e=>{e.reset();for(let t=0;t<10*Math.random();t++)this.incrementNumHits(e)})}addCharMapping(e,t){if(!i.a.Seq.REGEXP.test(e))throw new RangeError(`Mapping-sequence "${e}" did not match the required regular expression "${i.a.Seq.REGEXP.source}".`);if(0===t.length)throw new Error("Must not make mapping without written characters.");let r=this;{let t=this;for(;t;)r=t,t=t.children.find(t=>e.startsWith(t.sequence))}if(r.sequence===e)throw new Error(`Mappings for all written-characters with a commoncorresponding typeable-sequence should be registered together,but an existing mapping for the sequence "${e}" was found.`);r.children.push(new a(r,e,t))}chooseOnePair(e){const t=this.characters.slice(0).sort(n.CMP[e]).shift(),r={char:t.char,seq:this.sequence};return this.incrementNumHits(t),r}incrementNumHits(e){e.incrementNumHits(),this.__recursiveIncrementNumHits(e.weightInv)}__recursiveIncrementNumHits(e){this.inheritingHitCount+=1,this.inheritingWeightedHitCount+=e,this.children.forEach(t=>t.__recursiveIncrementNumHits(e))}get personalHitCount(){return this.inheritingHitCount-this.parent.inheritingHitCount}get averageCharHitCount(){return this.characters.reduce((e,t)=>e+t.hitCount,0)/this.characters.length}get personalWeightedHitCount(){return this.inheritingWeightedHitCount-this.parent.inheritingWeightedHitCount}andNonRootParents(){const e=[];let t=this;for(;t.parent;)e.push(t),t=t.parent;return e}getLeafNodes(){const e=[];return this.__recursiveGetLeafNodes(e),e}__recursiveGetLeafNodes(e){this.children.length?this.children.forEach(t=>{t.__recursiveGetLeafNodes(e)}):e.push(this)}simpleView(){let e=this.characters.map(e=>e.simpleView());return Object.assign(Object.create(null),{seq:this.sequence,chars:1===e.length?e[0]:e,hits:this.personalHitCount,kids:this.children.map(e=>e.simpleView()),__proto__:void 0})}}a.LEAF_CMP=Object.freeze({[i.a.BalancingScheme.SEQ]:(e,t)=>e.inheritingHitCount-t.inheritingHitCount,[i.a.BalancingScheme.CHAR]:(e,t)=>e.inheritingHitCount-t.inheritingHitCount,[i.a.BalancingScheme.WEIGHT]:(e,t)=>e.inheritingWeightedHitCount-t.inheritingWeightedHitCount}),a.PATH_CMP=Object.freeze({[i.a.BalancingScheme.SEQ]:(e,t)=>e.personalHitCount-t.personalHitCount,[i.a.BalancingScheme.CHAR]:(e,t)=>e.averageCharHitCount-t.averageCharHitCount,[i.a.BalancingScheme.WEIGHT]:(e,t)=>e.personalWeightedHitCount-t.personalWeightedHitCount}),(s=a||(a={})).Root=class extends s{constructor(){super(void 0,"",[])}validateConstruction(){}chooseOnePair(e){throw new TypeError("Must never hit on the root.")}get personalHitCount(){throw new TypeError("Must never hit on the root.")}get personalWeightedHitCount(){throw new TypeError("Must never hit on the root.")}andNonRootParents(){throw new TypeError}simpleView(){return this.children.map(e=>e.simpleView())}},Object.freeze(a),Object.freeze(a.prototype);class n{constructor(e,t){if(t<=0)throw new RangeError(`All weights must be positive, but we were passed the value "${t}" for the character "${e}".`);this.char=e,this.weightInv=1/t}reset(){this.hitCount=0,this.weightedHitCount=0}incrementNumHits(){this.hitCount+=1,this.weightedHitCount+=this.weightInv}simpleView(){return Object.assign(Object.create(null),{char:this.char,hits:this.hitCount})}}n.CMP=Object.freeze({[i.a.BalancingScheme.SEQ]:(e,t)=>e.hitCount-t.hitCount,[i.a.BalancingScheme.CHAR]:(e,t)=>e.hitCount-t.hitCount,[i.a.BalancingScheme.WEIGHT]:(e,t)=>e.weightedHitCount-t.weightedHitCount}),Object.freeze(n),Object.freeze(n.prototype);class o extends i.a{constructor(e,t){if(super(),this.static=e,this.treeMap=a.CREATE_TREE_MAP(t),this.leafNodes=this.treeMap.getLeafNodes(),this.leafNodes.length!==this.static.frontend.numLeaves)throw new Error(`maintenance required: the frontend constant for the language "${this.static.frontend.id}" needs to be updated to the correct, computed value, which is \`${this.leafNodes.length}\`.`)}get numLeaves(){return this.leafNodes.length}reset(){this.treeMap.reset()}getNonConflictingChar(e,t){this.leafNodes.sort(a.LEAF_CMP[t]);let r=void 0;for(const s of this.leafNodes){const i=s.andNonRootParents();for(let t=0;t<i.length;t++){const r=e.find(e=>e.startsWith(i[t].sequence));if(r){r===i[t].sequence?i.splice(0):i.splice(t);break}}if(i.length){i.sort(a.PATH_CMP[t]),r=i[0];break}}if(!r)throw new Error("Invariants guaranteeing that a LangSeq canalways be shuffled-in were not met.");return r.chooseOnePair(t)}simpleView(){return Object.assign(Object.create(null),{id:this.static.frontend.id,displayName:this.static.frontend.display,root:this.treeMap.simpleView(),numLeaves:this.leafNodes.length})}}o||(o={}),Object.freeze(o),Object.freeze(o.prototype)},6:function(e,t,r){},7:function(e,t,r){var s={"./Emote.ts":[8,2],"./English.ts":[9,3],"./Japanese.ts":[10,4],"./Korean.ts":[11,5],"./Morse.ts":[12,6]};function i(e){if(!r.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],i=t[0];return r.e(t[1]).then((function(){return r(i)}))}i.keys=function(){return Object.keys(s)},i.id=7,e.exports=i}}]);
//# sourceMappingURL=offline.js.map