(window.webpackJsonpsnakey3=window.webpackJsonpsnakey3||[]).push([[1],{19:function(e,t,r){var s={"./Cellphone.ts":[20,4],"./Emote.ts":[21,5],"./English.ts":[22,6],"./Japanese.ts":[23,7],"./Korean.ts":[24,8],"./Morse.ts":[25,9]};function a(e){if(!r.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],a=t[0];return r.e(t[1]).then((function(){return r(a)}))}a.keys=function(){return Object.keys(s)},a.id=19,e.exports=a},27:function(e,t,r){"use strict";r.r(t),r.d(t,"OfflineGame",(function(){return m}));var s=r(17),a=r(0),n=r(9),o=r(3),i=r(4),h=r(8),l=r(13),c=r(1);class d{constructor(e){const t=[];for(const r of e)t[r]=new d.Entry;this.entries=t}reset(){for(const e of this.entries)e.reset()}}!function(e){class t{constructor(){this.moveCounts={}}reset(){this.totalHealthPickedUp=0,Object.getOwnPropertyNames(c.b.MoveType).forEach(e=>{this.moveCounts[e]=0})}}e.Entry=t,Object.freeze(t),Object.freeze(t.prototype)}(d||(d={})),Object.freeze(d),Object.freeze(d.prototype);var u,g,p,f=r(18);class v extends f.a{constructor(e,t,s){super(e,t,s),u.set(this,void 0),g.set(this,void 0),p.set(this,void 0),this.averageFreeHealth=s.averageFreeHealthPerTile*this.grid.area,this.averageFreeHealthPerTile=s.averageFreeHealthPerTile,Object(a.c)(this,g,new Set),Object(a.c)(this,p,r(19)(`./${this.langFrontend.module}.ts`).then(e=>{const t=this.langFrontend.export.split(".").reduce((e,t)=>e[t],e[this.langFrontend.module]);this.lang=new t(s.langWeightExaggeration);const r=this.grid.static.getAmbiguityThreshold();if(this.lang.numLeaves<r)throw Error(`Found ${this.lang.numLeaves} leaves, but at least ${r} were required. The provided mappings composing the current Lang-under-construction are not sufficient to ensure that a shuffling operation will always be able to find a safe candidate to use as a replacement. Please see the spec for Lang.getNonConflictingChar.`);return this.lang})),this.scoreInfo=new d(this.players.map(e=>e.playerId))}reset(){const e=Object.create(null,{reset:{get:()=>super.reset}});return Object(a.a)(this,void 0,void 0,(function*(){yield e.reset.call(this),Object(a.c)(this,u,0),Object(a.b)(this,g).clear(),yield Object(a.b)(this,p),this.lang.reset(),this.grid.shuffledForEachTile(e=>{e.setLangCharSeqPair(this.dryRunShuffleLangCharSeqAt(e))}),this.teams.forEach(e=>e.reset());const t=this.grid.static.getSpawnCoords(this.teams.map(e=>e.members.length),this.grid.dimensions);return this.teams.forEach((e,r)=>{e.members.forEach((e,s)=>{e.reset(this.grid.tile.at(t[r][s]))})}),this.scoreInfo.reset(),Promise.resolve()}))}_createArtifPlayer(e){return l.a.of(this,e)}dryRunShuffleLangCharSeqAt(e){e.setLangCharSeqPair(n.a.CharSeqPair.NULL);const t=Array.from(new Set(this.grid.tile.sourcesTo(e.coord).get.flatMap(e=>this.grid.tile.destsFrom(e.coord).get)));return this.lang.getNonConflictingChar(t.map(e=>e.langSeq).filter(e=>e))}get currentFreeHealth(){return Object(a.b)(this,u)}get freeHealthTiles(){return Object(a.b)(this,g)}dryRunSpawnFreeHealth(e){let t=this.averageFreeHealth-this.currentFreeHealth;if(t<=0)return;const r=[];for(;t>0;){let s;do{s=this.grid.tile.at(this.grid.getRandomCoord())}while(s.isOccupied||r.find(e=>i.a.equals(s.coord,e.coord)));const a=1;if(Math.random()<o.a.K.HEALTH_UPDATE_CHANCE){let t;(t=e.find(e=>i.a.equals(s.coord,e.coord)))?t.newFreeHealth=(t.newFreeHealth||0)+a:r.push({coord:s.coord,lastKnownUpdateId:1+s.lastKnownUpdateId,newCharSeqPair:void 0,newFreeHealth:s.freeHealth+a})}t-=a}return r}getHealthCostOfBoost(){return this.averageFreeHealthPerTile/o.a.K.PCT_MOVES_THAT_ARE_BOOST}executeTileModEvent(e,t=!0){Object.freeze(e);const r=this.grid.tile.at(e.coord);if(e.lastKnownUpdateId!==1+r.lastKnownUpdateId)throw"never";return Object(a.c)(this,u,Object(a.b)(this,u)+(e.newFreeHealth-r.freeHealth)),0===e.newFreeHealth?Object(a.b)(this,g).delete(r):Object(a.b)(this,g).add(r),super.executeTileModEvent(e,t),r}managerCheckGamePlayingRequest(e){if("PLAYING"!==this.status)return;const t=this.players[e.playerId];if(!t)throw Error("No such player exists.");if(e.playerLastAcceptedRequestId!==t.lastAcceptedRequestId)throw RangeError(e.playerLastAcceptedRequestId<t.lastAcceptedRequestId?"Clients should not make requests until they have received my response to their last request.":"Client seems to have incremented the request ID counter on their own, which is is illegal.");return t}processMoveRequest(e){const t=this.managerCheckGamePlayingRequest(e);if(!t)return void this.executePlayerMoveEvent(e);const r=this.grid.tile.at(e.destModDesc.coord);if(r.isOccupied||r.lastKnownUpdateId!==e.destModDesc.lastKnownUpdateId)return void this.executePlayerMoveEvent(e);const s=e.moveType===h.a.MoveType.BOOST,a=t.status.health+r.freeHealth*(t.status.isDowned?o.a.K.HEALTH_EFFECT_FOR_DOWNED_PLAYER:1)-(s?this.getHealthCostOfBoost():0);if(s&&a<0)return void this.executePlayerMoveEvent(e);const n=this.scoreInfo.entries[t.playerId];n.totalHealthPickedUp+=r.freeHealth,n.moveCounts[e.moveType]+=1,e.playerLastAcceptedRequestId=1+t.lastAcceptedRequestId,e.newPlayerHealth={health:a},e.destModDesc.lastKnownUpdateId=1+r.lastKnownUpdateId,e.destModDesc.newFreeHealth=0,e.destModDesc.newCharSeqPair=this.dryRunShuffleLangCharSeqAt(r),e.tileHealthModDescs=this.dryRunSpawnFreeHealth([e.destModDesc]),e.eventId=this.nextUnusedEventId,this.executePlayerMoveEvent(e)}processPlayerContact(e){}processBubbleRequest(e){const t=this.managerCheckGamePlayingRequest(e);t?(e.playerLastAcceptedRequestId=1+t.lastAcceptedRequestId,e.eventId=this.nextUnusedEventId,this.executePlayerBubbleEvent(e)):this.executePlayerBubbleEvent(e)}}u=new WeakMap,g=new WeakMap,p=new WeakMap,(v||(v={})).CHECK_VALID_CTOR_ARGS=function(e){const t=[],r=Object.freeze({coordSys:0,gridDimensions:0,averageFreeHealthPerTile:0,langId:0,langWeightExaggeration:0,playerDescs:0}),s=[];for(const t in r){const r=e[t];null==r&&s.push(t)}return s.length&&t.push("Missing the following arguments: "+s),void 0===n.a.GET_FRONTEND_DESC_BY_ID(e.langId)&&t.push(`No language with the ID \`${e.langId}\` exists.`),NaN===parseInt(e.langWeightExaggeration)?t.push(`Language Weight Exaggeration expected a number, but\`${e.langWeightExaggeration}\` is not a number.`):e.langWeightExaggeration=Math.max(0,parseFloat(e.langWeightExaggeration)),t},Object.freeze(v),Object.freeze(v.prototype),r(14);class m extends v{constructor(e,t){super(s.b.Type.OFFLINE,{onGameBecomeOver:e,tileClass:s.e,playerStatusCtor:s.d},t),this._ctorBrowserGame()}setTimeout(e,t,...r){return setTimeout(e,t,r)}cancelTimeout(e){clearTimeout(e)}}Object(s.f)(m,[s.a]),Object.freeze(m),Object.freeze(m.prototype)}}]);
//# sourceMappingURL=offline.js.map