(self.webpackChunksnakey3=self.webpackChunksnakey3||[]).push([[755],{979:(e,t,r)=>{"use strict";r.d(t,{U:()=>h});var s,i=r(406),o=r(951),n=r(655);!function(e){var t,r;class s{constructor(){this.children=[]}reset(){this.inheritingWeightedHitCount=0,this.children.forEach((e=>e.reset()))}_finalize(){Object.freeze(this.children),this.children.forEach((e=>e._finalize()))}_addCharMapping(e,t){if(!o.Uo.Seq.REGEXP.test(e))throw new RangeError(`Mapping-sequence "${e}" did not match the required regular expression "${o.Uo.Seq.REGEXP.source}".`);if(0===t.length)throw new RangeError("never");let r=this;{let t=this;for(;t;)r=t,t=t.children.find((t=>e.startsWith(t.sequence)))}if(r.sequence===e)throw new Error(`Mappings for all written-characters with a commoncorresponding typeable-sequence should be registered together,but an existing mapping for the sequence "${e}" was found.`);r.children.push(new i(r,e,t))}getLeafNodes(){const e=[];return this._recursiveGetLeafNodes(e),e}_recursiveGetLeafNodes(e){this.children.length?this.children.forEach((t=>{t._recursiveGetLeafNodes(e)})):e.push(this)}simpleView(){return this.children}static CREATE_TREE_MAP(e,t){const r=Object.values(e).reduce(((e,t)=>e+t.weight),0),i=0===t?e=>1:1===t?e=>e:e=>Math.pow(e/r,t),o=new Map;for(const t in e){const r=e[t].seq,s=new a(t,i(e[t].weight)),n=o.get(r);n?n.push(s):o.set(r,[s])}const n=new s;return Array.from(o).sort(((e,t)=>e[0].length-t[0].length)).forEach((e=>{n._addCharMapping(...e)})),n._finalize(),n}}s.LEAF_CMP=(e,t)=>e.inheritingWeightedHitCount-t.inheritingWeightedHitCount,e.ParentNode=s,Object.freeze(s),Object.freeze(s.prototype);class i extends s{constructor(e,s,i){super(),t.set(this,void 0),r.set(this,void 0),this.sequence=s,(0,n.YH)(this,r,i),(0,n.YH)(this,t,e)}_finalize(){Object.freeze((0,n.Q_)(this,r)),super._finalize()}reset(){super.reset(),(0,n.Q_)(this,r).forEach((e=>{e.reset(),this.incrementNumHits(e,Math.random()*o.Uo.CHAR_HIT_COUNT_SEED_CEILING)}))}chooseOnePair(){const e=(0,n.Q_)(this,r).slice(0).sort(a.CMP).shift(),t={char:e.char,seq:this.sequence};return this.incrementNumHits(e),t}incrementNumHits(e,t=1){e._incrementNumHits(),this._recursiveIncrementNumHits(e.weightInv*t)}_recursiveIncrementNumHits(e){this.inheritingWeightedHitCount+=e,this.children.forEach((t=>t._recursiveIncrementNumHits(e)))}get personalWeightedHitCount(){return this.inheritingWeightedHitCount-(0,n.Q_)(this,t).inheritingWeightedHitCount}andNonRootParents(){const e=[];for(let r=this;r instanceof i;r=(0,n.Q_)(r,t))e.push(r);return e}simpleView(){let e=(0,n.Q_)(this,r).map((e=>e.simpleView()));return Object.assign(Object.create(null),{seq:this.sequence,chars:1===e.length?e[0]:e,kids:this.children.map((e=>e.simpleView()))})}}t=new WeakMap,r=new WeakMap,i.PATH_CMP=(e,t)=>e.personalWeightedHitCount-t.personalWeightedHitCount,e.ChildNode=i,Object.freeze(i),Object.freeze(i.prototype)}(s||(s={})),Object.freeze(s);class a{constructor(e,t){if(t<=0)throw new RangeError(`All weights must be positive, but we were passed the value "${t}" for the character "${e}".`);this.char=e,this.weightInv=1/t}reset(){this.hitCount=0,this.weightedHitCount=0}_incrementNumHits(){this.hitCount+=1,this.weightedHitCount+=this.weightInv}simpleView(){return Object.assign(Object.create(null),{char:this.char,hits:this.hitCount})}}a.CMP=(e,t)=>e.weightedHitCount-t.weightedHitCount,Object.freeze(a),Object.freeze(a.prototype);class h extends o.Uo{constructor(e,t,r){if(super(),this.frontendDesc=h.GET_FRONTEND_DESC_BY_ID(e),this.treeMap=s.ParentNode.CREATE_TREE_MAP(t,r),this.leafNodes=this.treeMap.getLeafNodes(),i.R.propNoWrite(this,["frontendDesc","treeMap","leafNodes"]),this.leafNodes.length!==this.frontendDesc.numLeaves)throw new Error(`maintenance required: the frontend constant for the language "${this.frontendDesc.id}" needs to be updated to the correct, computed value, which is \`${this.leafNodes.length}\`.`)}get numLeaves(){return this.leafNodes.length}reset(){this.treeMap.reset()}getNonConflictingChar(e){this.leafNodes.sort(s.ParentNode.LEAF_CMP);let t=void 0;for(const r of this.leafNodes){const s=r.andNonRootParents();for(let t=0;t<s.length;t++){const r=e.find((e=>e.startsWith(s[t].sequence)));if(r){r===s[t].sequence?s.length=0:s.splice(t);break}}if(s.length){t=s[0];for(const e of s)e.personalWeightedHitCount<t.personalWeightedHitCount&&(t=e);break}}if(void 0===t)throw new Error("Invariants guaranteeing that a LangSeq canalways be shuffled-in were not met.");return t.chooseOnePair()}simpleView(){return Object.assign(Object.create(null),{id:this.frontendDesc.id,displayName:this.frontendDesc.displayName,root:this.treeMap.simpleView(),numLeaves:this.leafNodes.length})}}h||(h={}),Object.freeze(h),Object.freeze(h.prototype)},40:(e,t,r)=>{"use strict";r.r(t),r.d(t,{OfflineGame:()=>_});var s=r(153),i=r(655),o=r(406),n=r(979),a=r(504),h=r(789),c=r(926);class l extends c.J5{constructor(e,t){if(super(e,t),"ONLINE"===e.gameType)throw new TypeError("OnlineGames should be using regular Players instead.")}_notifyGameNowPlaying(){this.delayedMovementContinue()}_notifyGameNowPaused(){this.game.cancelTimeout(this._scheduledMovementCallbackId),this._scheduledMovementCallbackId=void 0}_notifyGameNowOver(){this.game.cancelTimeout(this._scheduledMovementCallbackId),this._scheduledMovementCallbackId=void 0}movementContinue(){const e=this.computeDesiredDest();this._nextMovementTimerMultiplier=this.game.grid.tile.at(e).langSeq.length,this.makeMovementRequest(this.game.grid.getUntToward(e,this.coord),this.getNextMoveType()),this.delayedMovementContinue()}delayedMovementContinue(){this._scheduledMovementCallbackId=this.game.setTimeout(this.movementContinue.bind(this),this.computeNextMovementTimer()*this._nextMovementTimerMultiplier)}}!function(e){e.of=(t,r)=>{const s=r.familyId;return new e._Constructors[s](t,r)}}(l||(l={})),o.R.protoNoEnum(l,["movementContinue"]);var d=r(951);class u{constructor(e){const t=[];for(const r of e)t[r]=new u.Entry;this.entries=t,o.R.propNoWrite(this,["entries"])}reset(){for(const e of this.entries)e.reset()}}!function(e){class t{constructor(){this.moveCounts={}}reset(){this.totalHealthPickedUp=0,Object.getOwnPropertyNames(d.J5.MoveType).forEach((e=>{this.moveCounts[e]=0}))}}e.Entry=t,Object.freeze(t),Object.freeze(t.prototype)}(u||(u={})),Object.freeze(u),Object.freeze(u.prototype);var g,f,m,p,v=r(191),w=r(985),y=r(358),C=r(886);class E extends l{constructor(e,t){super(e,t),g.set(this,void 0),this.behaviour=Object.freeze(Object.assign({},E.Behaviour.DEFAULT,t.familyArgs)),this.grid=this.game.grid}_afterAllPlayersConstruction(){super._afterAllPlayersConstruction(),this.threatProximity=this.game.teams.filter((e=>e.id!==this.teamId)).flatMap((e=>e.members)),this.targetProximity=[...this.threatProximity],o.R.propNoWrite(this,["threatProximity","targetProximity","behaviour","grid"])}reset(e){super.reset(e),(0,i.YH)(this,g,this.coord)}moveTo(e){(0,i.YH)(this,g,this.coord),super.moveTo(e)}computeDesiredDest(){this.threatProximity.sort(((e,t)=>this.grid.minMovesFromTo(e.coord,this.coord)-this.grid.minMovesFromTo(t.coord,this.coord)));for(const e of this.threatProximity){if(this.grid.minMovesFromTo(e.coord,this.coord)>this.behaviour.fearDistance)break;if(!e.status.isDowned&&e.status.health>this.status.health)return this.grid.getUntAwayFrom(e.coord,this.coord).coord}if(this.targetProximity.sort(((e,t)=>this.grid.minMovesFromTo(this.coord,e.coord)-this.grid.minMovesFromTo(this.coord,t.coord))),this.status.isDowned)for(const e of this.targetProximity){if(this.grid.minMovesFromTo(this.coord,e.coord)>this.behaviour.bloodThirstDistance)break;if(e.status.health<this.status.health-this.behaviour.healthReserve)return e.coord}if(0===this.game.freeHealthTiles.size){if(Math.random()<this.behaviour.wanderingAimlessness)return this.grid.getRandomCoordAround(this.coord,3);{const e=this.grid.getUntAwayFrom.bind(this.grid,(0,i.Q_)(this,g));return this.grid.getRandomCoordAround(e(e(this.coord).coord).coord,1)}}let e=void 0,t=1/0;for(const r of this.game.freeHealthTiles){const s=this.grid.minMovesFromTo(this.coord,r.coord);s<t&&(e=r,t=s)}return e.coord}getNextMoveType(){return c.J5.MoveType.NORMAL}computeNextMovementTimer(){return 1e3/this.behaviour.keyPressesPerSecond}}g=new WeakMap,function(e){let t;!function(e){e.DEFAULT=Object.freeze({fearDistance:5,bloodThirstDistance:7,healthReserve:3,keyPressesPerSecond:2,wanderingAimlessness:.2})}(t=e.Behaviour||(e.Behaviour={}))}(E||(E={})),o.R.protoNoEnum(E,["_afterAllPlayersConstruction"]),Object.freeze(E),Object.freeze(E.prototype),w.r._Constructors=Object.freeze({EUCLID2:y.i.Grid,BEEHIVE:C.v.Grid}),Object.freeze(w.r),Object.freeze(w.r.prototype);{const e=l;e._Constructors=Object.freeze({CHASER:E}),Object.freeze(e),Object.freeze(e.prototype)}class b extends v.R{constructor(e,t,s){super(e,t,s),f.set(this,void 0),m.set(this,void 0),p.set(this,void 0),this.averageFreeHealth=s.averageFreeHealthPerTile*this.grid.area,this.averageFreeHealthPerTile=s.averageFreeHealthPerTile,this.healthCostOfBoost=a.l.K.HEALTH_COST_OF_BOOST(this.averageFreeHealthPerTile,this.grid.static.getDiameterOfLatticePatchHavingArea),(0,i.YH)(this,m,new Set),this.scoreInfo=new u(this.players.map((e=>e.playerId))),o.R.propNoWrite(this,["averageFreeHealth","averageFreeHealthPerTile","healthCostOfBoost","scoreInfo"]),(0,i.YH)(this,p,r(59)(`./${this.langFrontend.module}.ts`).then((e=>{const t=this.langFrontend.export.split(".").reduce(((e,t)=>e[t]),e[this.langFrontend.module]);this.lang=new t(s.langWeightExaggeration),o.R.propNoWrite(this,["lang"]);const r=this.grid.static.getAmbiguityThreshold();if(this.lang.numLeaves<r)throw new Error(`Found ${this.lang.numLeaves} leaves, but at least ${r} were required. The provided mappings composing the current Lang-under-construction are not sufficient to ensure that a shuffling operation will always be able to find a safe candidate to use as a replacement. Please see the spec for Lang.getNonConflictingChar.`);return this.lang})))}reset(){const e=Object.create(null,{reset:{get:()=>super.reset}});return(0,i.mG)(this,void 0,void 0,(function*(){yield e.reset.call(this),(0,i.YH)(this,f,0),(0,i.Q_)(this,m).clear(),yield(0,i.Q_)(this,p),this.lang.reset(),this.grid.shuffledForEachTile((e=>{e.setLangCharSeqPair(this.dryRunShuffleLangCharSeqAt(e))})),this.teams.forEach((e=>e.reset()));const t=this.grid.static.getSpawnCoords(this.teams.map((e=>e.members.length)),this.grid.dimensions);return this.teams.forEach(((e,r)=>{e.members.forEach(((e,s)=>{e.reset(this.grid.tile.at(t[r][s]))}))})),this.scoreInfo.reset(),Promise.resolve()}))}_createArtifPlayer(e){return l.of(this,e)}dryRunShuffleLangCharSeqAt(e,t=!1){e.setLangCharSeqPair(n.U.CharSeqPair.NULL);let r=this.grid.getDestsFromSourcesTo(e.coord).map((e=>e.langSeq));if(t){const e=n.U.CharSeqPair.NULL.seq;r=r.filter((t=>t!==e))}return this.lang.getNonConflictingChar(r)}get currentFreeHealth(){return(0,i.Q_)(this,f)}get freeHealthTiles(){return(0,i.Q_)(this,m)}dryRunSpawnFreeHealth(e){var t;let r=this.averageFreeHealth-this.currentFreeHealth;if(r<=0)return;const s=[];for(;r>0;){let i;do{i=this.grid.tile.at(this.grid.getRandomCoord())}while(i.isOccupied||s.find((e=>h.u.equals(i.coord,e.coord))));const o=a.l.K.AVERAGE_HEALTH_TO_SPAWN_ON_TILE;if(Math.random()<a.l.K.HEALTH_UPDATE_CHANCE){let r;(r=e.find((e=>h.u.equals(i.coord,e.coord))))?r.newFreeHealth=(null!==(t=r.newFreeHealth)&&void 0!==t?t:0)+o:s.push({coord:i.coord,lastKnownUpdateId:1+i.lastKnownUpdateId,newCharSeqPair:void 0,newFreeHealth:i.freeHealth+o})}r-=o}return s}executeTileModEvent(e,t=!0){Object.freeze(e);const r=this.grid.tile.at(e.coord);if(e.lastKnownUpdateId!==1+r.lastKnownUpdateId)throw new RangeError("never");return(0,i.YH)(this,f,(0,i.Q_)(this,f)+(e.newFreeHealth-r.freeHealth)),0===e.newFreeHealth?(0,i.Q_)(this,m).delete(r):(0,i.Q_)(this,m).add(r),super.executeTileModEvent(e,t),r}managerCheckGamePlayingRequest(e){if("PLAYING"!==this.status)return;const t=this.players[e.playerId];if(!t)throw new Error("No such player exists.");if(e.playerLastAcceptedRequestId!==t.lastAcceptedRequestId)throw new RangeError(e.playerLastAcceptedRequestId<t.lastAcceptedRequestId?"Clients should not make requests until they have received my response to their last request.":"Client seems to have incremented the request ID counter on their own, which is is illegal.");return t}processMoveRequest(e){const t=this.managerCheckGamePlayingRequest(e);if(!t)return void this.executePlayerMoveEvent(e);const r=this.grid.tile.at(e.destModDesc.coord);if(r.isOccupied||r.lastKnownUpdateId!==e.destModDesc.lastKnownUpdateId)return void this.executePlayerMoveEvent(e);const s=e.moveType===c.J5.MoveType.BOOST,i=t.status.health+r.freeHealth*(t.status.isDowned?a.l.K.HEALTH_EFFECT_FOR_DOWNED_PLAYER:1)-(s?this.healthCostOfBoost:0);if(s&&i<0)return void this.executePlayerMoveEvent(e);const o=this.scoreInfo.entries[t.playerId];o.totalHealthPickedUp+=r.freeHealth,o.moveCounts[e.moveType]+=1,e.playerLastAcceptedRequestId=1+t.lastAcceptedRequestId,e.newPlayerHealth={health:i},e.destModDesc.lastKnownUpdateId=1+r.lastKnownUpdateId,e.destModDesc.newFreeHealth=0,e.destModDesc.newCharSeqPair=this.dryRunShuffleLangCharSeqAt(r),e.tileHealthModDescs=this.dryRunSpawnFreeHealth([e.destModDesc]),e.eventId=this.nextUnusedEventId,this.executePlayerMoveEvent(e)}processPlayerContact(e){}processBubbleRequest(e){const t=this.managerCheckGamePlayingRequest(e);t?(e.playerLastAcceptedRequestId=1+t.lastAcceptedRequestId,e.eventId=this.nextUnusedEventId,this.executePlayerBubbleEvent(e)):this.executePlayerBubbleEvent(e)}}f=new WeakMap,m=new WeakMap,p=new WeakMap,function(e){e.CHECK_VALID_CTOR_ARGS=function(e){const t=[],r=Object.freeze({coordSys:0,gridDimensions:0,averageFreeHealthPerTile:0,langId:0,langWeightExaggeration:0,playerDescs:0}),s=[];for(const t in r){null==e[t]&&s.push(t)}return s.length&&t.push("Missing the following arguments: "+s),void 0===n.U.GET_FRONTEND_DESC_BY_ID(e.langId)&&t.push(`No language with the ID \`${e.langId}\` exists.`),NaN===parseInt(e.langWeightExaggeration)?t.push(`Language Weight Exaggeration expected a number, but\`${e.langWeightExaggeration}\` is not a number.`):e.langWeightExaggeration=Math.max(0,parseFloat(e.langWeightExaggeration)),t}}(b||(b={})),o.R.protoNoEnum(b,["managerCheckGamePlayingRequest"]),Object.freeze(b),Object.freeze(b.prototype);class _ extends b{constructor(e,t){super(s.lA.Type.OFFLINE,{onGameBecomeOver:e,tileClass:s.gx,playerStatusCtor:s.Ko},t),this._ctorBrowserGame()}setTimeout(e,t,...r){return setTimeout(e,t,r)}cancelTimeout(e){clearTimeout(e)}}s.RQ.applyMixins(_,[s.qM]),Object.freeze(_),Object.freeze(_.prototype)},59:(e,t,r)=>{var s={"./Cellphone.ts":[56,313],"./Emote.ts":[981,858],"./English.ts":[215,184],"./Japanese.ts":[117,410],"./Korean.ts":[181,227],"./Morse.ts":[222,285]};function i(e){if(!r.o(s,e))return Promise.resolve().then((()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],i=t[0];return r.e(t[1]).then((()=>r(i)))}i.keys=()=>Object.keys(s),i.id=59,e.exports=i}}]);
//# sourceMappingURL=offline.js.map