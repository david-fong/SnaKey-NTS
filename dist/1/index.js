(window.webpackJsonpsnakey3=window.webpackJsonpsnakey3||[]).push([[1],{4:function(e,t,s){},5:function(e,t,s){"use strict";s.r(t),s.d(t,"game",(function(){return Ce}));var r,i,a=s(1),n=s(0);!function(e){let t,s,r,i;!function(e){e.SERVER="SERVER",e.ONLINE="ONLINE",e.OFFLINE="OFFLINE"}(t=e.Type||(e.Type={})),function(e){e.EVENT_NAME="game-create"}(s=e.CtorArgs||(e.CtorArgs={})),function(e){e.EVENT_NAME="game-reset"}(r=e.Serialization||(e.Serialization={})),function(e){e.PLAYING="PLAYING",e.PAUSED="PAUSED",e.OVER="OVER"}(i=e.Status||(e.Status={})),e.K=Object.freeze({HEALTH_UPDATE_CHANCE:.1,PCT_MOVES_THAT_ARE_BOOST:.05,HEALTH_EFFECT_FOR_DOWNED_PLAYER:.6,EVENT_RECORD_WRAPPING_BUFFER_LENGTH:128,EVENT_RECORD_FORWARD_WINDOW_LENGTH:64})}(r||(r={})),Object.freeze(r),function(e){let t;!function(e){e.EUCLID2="EUCLID2",e.BEEHIVE="BEEHIVE"}(t=e.System||(e.System={}));class s{constructor(e){}}e.Abstract=s,function(t){class s extends e.Abstract{}t.Mathy=s}(s=e.Abstract||(e.Abstract={})),Object.freeze(s),Object.freeze(s.prototype)}(i||(i={})),Object.freeze(i);var o,h,c,l,d=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},u=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class m{constructor(e){o.set(this,void 0),h.set(this,void 0),c.set(this,void 0),l.set(this,void 0),this.coord=e,d(this,o,n.b.Id.NULL)}reset(){this.evictOccupant(),this.lastKnownUpdateId=0,this.freeHealth=0,this.setLangCharSeqPair(n.a.CharSeqPair.NULL)}visualBell(){}__setOccupant(e,t){d(this,o,e)}get isOccupied(){return this.occupantId!==n.b.Id.NULL}evictOccupant(){d(this,o,n.b.Id.NULL)}get occupantId(){return u(this,o)}get freeHealth(){return u(this,h)}set freeHealth(e){d(this,h,e)}setLangCharSeqPair(e){d(this,c,e.char),d(this,l,e.seq)}get langChar(){return u(this,c)}get langSeq(){return u(this,l)}}o=new WeakMap,h=new WeakMap,c=new WeakMap,l=new WeakMap,Object.freeze(m),Object.freeze(m.prototype);var p,g,f,E,y,w=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},T=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class C extends m{constructor(e){super(e),p.set(this,void 0);{const e=document.createElement("div");e.classList.add(a.a.Tile.Class.BASE,a.a.General.Class.CENTER_CONTENTS,a.a.General.Class.STACK_CONTENTS),w(this,p,e)}{const e=document.createElement("div");e.classList.add(a.a.Tile.Class.POINTER_HB),T(this,p).appendChild(e)}{const e=document.createElement("div");e.classList.add(a.a.Tile.Class.LANG_CHAR),T(this,p).appendChild(e),this.langCharElem=e}{const e=document.createElement("div");e.classList.add(a.a.Tile.Class.LANG_SEQ),T(this,p).appendChild(e),this.langSeqElem=e}}__addToDom(e){e.appendChild(T(this,p))}__setOccupant(e,t){super.__setOccupant(e,t),T(this,p).insertBefore(t.playerElem,this.langCharElem),this.langSeqElem.innerText=t.username}visualBell(){T(this,p)}evictOccupant(){super.evictOccupant(),this.langSeqElem.innerText=this.langSeq}set freeHealth(e){super.freeHealth=e,this.freeHealth>0?T(this,p).dataset[a.a.Tile.Dataset.HEALTH]=this.freeHealth.toString():delete T(this,p).dataset[a.a.Tile.Dataset.HEALTH]}get freeHealth(){return super.freeHealth}setLangCharSeqPair(e){super.setLangCharSeqPair(e),this.langCharElem.innerText=this.langChar,this.langSeqElem.innerText=this.langSeq}}p=new WeakMap,Object.freeze(C),Object.freeze(C.prototype),function(e){e.getImplementation=t=>e.__Constructors[t]}(g||(g={}));class v{constructor(e,t,s){this.sequence=t,this.characters=s,this.parent=e,this.children=[]}static CREATE_TREE_MAP(e){const t=new Map;for(const s in e){const r=e[s].seq,i=new _(s,e[s].weight),a=t.get(r);a?a.push(i):t.set(r,[i])}const s=new v.Root;return Array.from(t).sort((e,t)=>e[0].length-t[0].length).forEach(e=>{s.addCharMapping(...e)}),s.finalize(),s}finalize(){this.validateConstruction(),Object.freeze(this.characters),Object.freeze(this.children),this.children.forEach(e=>e.finalize())}validateConstruction(){if(!this.sequence.startsWith(this.parent.sequence))throw new Error("Child node's sequence must start with that of its parent.")}reset(){this.children.forEach(e=>e.reset()),this.inheritingHitCount=0,this.inheritingWeightedHitCount=0,this.characters.forEach(e=>{e.reset();for(let t=0;t<10*Math.random();t++)this.incrementNumHits(e)})}addCharMapping(e,t){if(!n.a.Seq.REGEXP.test(e))throw new RangeError(`Mapping-sequence "${e}" did not match the required regular expression "${n.a.Seq.REGEXP.source}".`);if(0===t.length)throw new Error("Must not make mapping without written characters.");let s=this;{let t=this;for(;t;)s=t,t=t.children.find(t=>e.startsWith(t.sequence))}if(s.sequence===e)throw new Error(`Mappings for all written-characters with a commoncorresponding typeable-sequence should be registered together,but an existing mapping for the sequence "${e}" was found.`);s.children.push(new v(s,e,t))}chooseOnePair(e){const t=this.characters.slice(0).sort(_.CMP[e]).shift(),s={char:t.char,seq:this.sequence};return this.incrementNumHits(t),s}incrementNumHits(e){e.incrementNumHits(),this.__recursiveIncrementNumHits(e.weightInv)}__recursiveIncrementNumHits(e){this.inheritingHitCount+=1,this.inheritingWeightedHitCount+=e,this.children.forEach(t=>t.__recursiveIncrementNumHits(e))}get personalHitCount(){return this.inheritingHitCount-this.parent.inheritingHitCount}get averageCharHitCount(){return this.characters.reduce((e,t)=>e+t.hitCount,0)/this.characters.length}get personalWeightedHitCount(){return this.inheritingWeightedHitCount-this.parent.inheritingWeightedHitCount}andNonRootParents(){const e=[];let t=this;for(;t.parent;)e.push(t),t=t.parent;return e}getLeafNodes(){const e=[];return this.__recursiveGetLeafNodes(e),e}__recursiveGetLeafNodes(e){this.children.length?this.children.forEach(t=>{t.__recursiveGetLeafNodes(e)}):e.push(this)}simpleView(){let e=this.characters.map(e=>e.simpleView());return Object.assign(Object.create(null),{seq:this.sequence,chars:1===e.length?e[0]:e,hits:this.personalHitCount,kids:this.children.map(e=>e.simpleView()),__proto__:void 0})}}v.LEAF_CMP=Object.freeze({[n.a.BalancingScheme.SEQ]:(e,t)=>e.inheritingHitCount-t.inheritingHitCount,[n.a.BalancingScheme.CHAR]:(e,t)=>e.inheritingHitCount-t.inheritingHitCount,[n.a.BalancingScheme.WEIGHT]:(e,t)=>e.inheritingWeightedHitCount-t.inheritingWeightedHitCount}),v.PATH_CMP=Object.freeze({[n.a.BalancingScheme.SEQ]:(e,t)=>e.personalHitCount-t.personalHitCount,[n.a.BalancingScheme.CHAR]:(e,t)=>e.averageCharHitCount-t.averageCharHitCount,[n.a.BalancingScheme.WEIGHT]:(e,t)=>e.personalWeightedHitCount-t.personalWeightedHitCount}),(f=v||(v={})).Root=class extends f{constructor(){super(void 0,"",[])}validateConstruction(){}chooseOnePair(e){throw new TypeError("Must never hit on the root.")}get personalHitCount(){throw new TypeError("Must never hit on the root.")}get personalWeightedHitCount(){throw new TypeError("Must never hit on the root.")}andNonRootParents(){throw new TypeError}simpleView(){return this.children.map(e=>e.simpleView())}},Object.freeze(v),Object.freeze(v.prototype);class _{constructor(e,t){if(t<=0)throw new RangeError(`All weights must be positive, but we were passed the value "${t}" for the character "${e}".`);this.char=e,this.weightInv=1/t}reset(){this.hitCount=0,this.weightedHitCount=0}incrementNumHits(){this.hitCount+=1,this.weightedHitCount+=this.weightInv}simpleView(){return Object.assign(Object.create(null),{char:this.char,hits:this.hitCount})}}_.CMP=Object.freeze({[n.a.BalancingScheme.SEQ]:(e,t)=>e.hitCount-t.hitCount,[n.a.BalancingScheme.CHAR]:(e,t)=>e.hitCount-t.hitCount,[n.a.BalancingScheme.WEIGHT]:(e,t)=>e.weightedHitCount-t.weightedHitCount}),Object.freeze(_),Object.freeze(_.prototype);class b extends n.a{constructor(e,t){super(),this.static=e,this.treeMap=v.CREATE_TREE_MAP(t),this.leafNodes=this.treeMap.getLeafNodes()}get numLeaves(){return this.leafNodes.length}reset(){this.treeMap.reset()}getNonConflictingChar(e,t){this.leafNodes.sort(v.LEAF_CMP[t]);let s=void 0;for(const r of this.leafNodes){const i=r.andNonRootParents();for(let t=0;t<i.length;t++){const s=e.find(e=>e.startsWith(i[t].sequence));if(s){s===i[t].sequence?i.splice(0):i.splice(t);break}}if(i.length){i.sort(v.PATH_CMP[t]),s=i[0];break}}if(!s)throw new Error("Invariants guaranteeing that a LangSeq canalways be shuffled-in were not met.");return s.chooseOnePair(t)}simpleView(){return Object.assign(Object.create(null),{name:this.static.getName(),desc:this.static.getBlurb(),root:this.treeMap.simpleView()})}}b||(b={}),Object.freeze(b),Object.freeze(b.prototype),function(e){e.EVENT_ID_REJECT=-1}(E||(E={})),Object.freeze(E),function(e){e.INITIAL_REQUEST_ID=-1,e.EVENT_NAME=Object.freeze({Bubble:"player-bubble",Movement:"player-movement"});class t{constructor(e,t){this.eventId=E.EVENT_ID_REJECT,this.affectedNeighbours=void 0,this.playerId=e,this.playerLastAcceptedRequestId=t}}e.Bubble=t;e.Movement=class extends t{constructor(e,t,s,r){super(e,t),this.newPlayerHealth=void 0,this.tilesWithHealthUpdates=void 0,this.dest={coord:s.coord,lastKnownUpdateId:s.lastKnownUpdateId,newCharSeqPair:void 0,newFreeHealth:void 0},this.moveType=r}}}(y||(y={})),Object.freeze(y);class I{constructor(e){this.source=e}at(...e){return this.source.__getTileAt(...e)}destsFrom(...e){return new O(this.source.__getTileDestsFrom(...e))}sourcesTo(...e){return new O(this.source.__getTileSourcesTo(...e))}}Object.freeze(I),Object.freeze(I.prototype);class O{constructor(e){this.contents=e}get occupied(){return this.contents=this.contents.filter(e=>e.isOccupied),this}get unoccupied(){return this.contents=this.contents.filter(e=>!e.isOccupied),this}get get(){return this.contents}}Object.freeze(O),Object.freeze(O.prototype);var S,N=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},A=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class R extends n.b{constructor(e,t){if(super(),S.set(this,void 0),Math.trunc(t.playerId)!==t.playerId)throw new RangeError("Player ID's must be integer values.");this.playerId=t.playerId,this.game=e,this.status=new this.game.__playerStatusCtor(this,t.noCheckGameOver),this.tile=new I(new R.TileGetterSource(this))}__afterAllPlayersConstruction(){this.status.__afterAllPlayersConstruction()}reset(e){N(this,S,e),this.hostTile.__setOccupant(this.playerId,this.status.immigrantInfo)}get coord(){return this.hostTile.coord}get hostTile(){return A(this,S)}onGoBesideOtherPlayer(){}moveTo(e){if(this.hostTile.occupantId!==this.playerId){if(this.game.gameType!==r.Type.ONLINE)throw new Error("Linkage between player and occupied tile disagrees.")}else this.hostTile.evictOccupant();if(e.isOccupied){if(this.game.gameType!==r.Type.ONLINE)throw new Error("Only one player can occupy a tile at a time.")}else N(this,S,e),e.__setOccupant(this.playerId,this.status.immigrantInfo)}}S=new WeakMap,function(e){class t{constructor(e){this.player=e}__getTileAt(){return this.player.game.grid.tile.at(this.player.coord)}__getTileDestsFrom(){return this.player.game.grid.tile.destsFrom(this.player.coord).get}__getTileSourcesTo(){return this.player.game.grid.tile.sourcesTo(this.player.coord).get}}e.TileGetterSource=t,Object.freeze(t),Object.freeze(t.prototype)}(R||(R={})),Object.freeze(R),Object.freeze(R.prototype);var M,H=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},L=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class P{constructor(e,t){if(M.set(this,void 0),0===t.length)throw new Error("teams must have at least one member.");this.id=e,this.members=t,H(this,M,this.members.every(e=>e.status.noCheckGameOver)?P.ElimOrder.IMMORTAL:P.ElimOrder.STANDING)}reset(){this.elimOrder!==P.ElimOrder.IMMORTAL&&(this.elimOrder=P.ElimOrder.STANDING)}get elimOrder(){return L(this,M)}set elimOrder(e){if(this.elimOrder===P.ElimOrder.IMMORTAL)throw new Error("Cannot change the elimination status of an immortal team.");H(this,M,e)}}M=new WeakMap,function(e){let t;!function(e){e.IMMORTAL=-1,e.STANDING=0}(t=e.ElimOrder||(e.ElimOrder={}))}(P||(P={})),Object.freeze(P),Object.freeze(P.prototype);var q,x,G=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)},D=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s};class z{constructor(e,t){q.set(this,void 0),x.set(this,void 0),this.player=e,this.noCheckGameOver=t}reset(){this.score=0,this.health=0}__afterAllPlayersConstruction(){}get immigrantInfo(){}get score(){return G(this,q)}set score(e){D(this,q,e)}get health(){return G(this,x)}set health(e){const t=this.isDowned;if(D(this,x,e),t||!this.isDowned||this.noCheckGameOver)return;const s=this.player.team,r=this.player.game.teams;if(s.elimOrder===P.ElimOrder.STANDING&&s.members.every(e=>e.status.noCheckGameOver||e.status.isDowned)){const e=1+r.filter(e=>e.elimOrder!==P.ElimOrder.STANDING).length;s.elimOrder=1+r.filter(e=>e.elimOrder!==P.ElimOrder.STANDING&&e.elimOrder!==P.ElimOrder.IMMORTAL).length,e===r.length&&this.player.game.statusBecomeOver()}}get isDowned(){return this.health<0}}q=new WeakMap,x=new WeakMap,Object.freeze(z),Object.freeze(z.prototype);class j extends R{constructor(e,t){if(super(e,t),!j.Username.REGEXP.test(t.username))throw new RangeError(`Username "${t.username}" does not match the required regular expression, "${j.Username.REGEXP.source}".`);this.familyId=t.familyId,this.teamId=t.teamId,this.username=t.username}reset(e){super.reset(e),this.status.reset(),this.lastAcceptedRequestId=y.INITIAL_REQUEST_ID,this.requestInFlight=!1}__abstractNotifyThatGameStatusBecamePlaying(){}__abstractNotifyThatGameStatusBecamePaused(){}__abstractNotifyThatGameStatusBecameOver(){}makeMovementRequest(e,t){if(this.game.status!==r.Status.PLAYING)throw new Error("This is not a necessary precondition, but we're doing it anyway.");if(this.requestInFlight)throw new Error("Only one request should ever be in flight at a time.");this.requestInFlight=!0,this.game.processMoveRequest(new y.Movement(this.playerId,this.lastAcceptedRequestId,e,t))}get team(){return this.game.teams[this.teamId]}isTeamedWith(e){return this.team.members.includes(e)}}!function(e){let t,s;!function(e){e.REGEXP=/[a-zA-Z](?:[ ]?[a-zA-Z0-9:-]+?){4,}/}(t=e.Username||(e.Username={})),function(e){e.finalize=e=>{const t=Array.from(new Set(e.map(e=>e.teamId))).sort((e,t)=>e-t).reduce((e,t,s)=>(e[t]=s,e),[]);return e.slice().sort((e,s)=>t[e.teamId]-t[s.teamId]).map((e,s)=>({playerId:s,familyId:e.familyId,teamId:t[e.teamId],socketId:e.socketId,username:e.username,noCheckGameOver:e.noCheckGameOver,familyArgs:e.familyArgs}))}}(s=e.CtorArgs||(e.CtorArgs={})),Object.freeze(s)}(j||(j={})),Object.freeze(j),Object.freeze(j.prototype);var B,F=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},k=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class U extends j{constructor(e,t){super(e,t),B.set(this,void 0),this.langRemappingFunc=b.RemappingFunctions[this.game.langName]}reset(e){super.reset(e),this.prevCoord=e.coord,F(this,B,"")}processKeyboardInput(e){this.game.status===r.Status.PLAYING&&(this.requestInFlight||(32===e.keyCode?this.coord.equals(this.prevCoord)||this.makeMovementRequest(this.game.grid.getUntAwayFrom(this.coord,this.prevCoord),j.MoveType.BOOST):1===e.key.length&&this.seqBufferAcceptKey(e.key)))}seqBufferAcceptKey(e){const t=this.tile.destsFrom().unoccupied.get;if(0!==t.length)if(e){if(e=this.langRemappingFunc(e),b.Seq.REGEXP.test(e)){for(let s=this.seqBuffer+e;s.length;s=s.substring(1)){const e=t.find(e=>e.langSeq.startsWith(s));if(e)return F(this,B,s),void(e.langSeq===s&&this.makeMovementRequest(e,j.MoveType.NORMAL))}F(this,B,""),this.hostTile.visualBell()}}else{t.find(e=>e.langSeq.startsWith(this.seqBuffer))||F(this,B,"")}}moveTo(e){F(this,B,""),this.prevCoord=this.coord,super.moveTo(e)}get seqBuffer(){return k(this,B)}}B=new WeakMap,Object.freeze(U),Object.freeze(U.prototype);var W,V,K,Y=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},$=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class X extends z{constructor(e,t){super(e,t),W.set(this,void 0);{const e=document.createElement("div");e.classList.add(a.a.Player.Class.BASE,a.a.General.Class.CENTER_CONTENTS,a.a.General.Class.STACK_CONTENTS),Y(this,W,e)}{const e=document.createElement("div");e.classList.add(a.a.Player.Class.FACE),$(this,W).appendChild(e)}{const e=document.createElement("div");e.classList.add(a.a.Player.Class.DOWNED_OVERLAY),$(this,W).appendChild(e)}}__afterAllPlayersConstruction(){const e=this.player,t=this.player.game.operator;if(!t)throw new Error("this never happens. see comment in source.");if($(this,W).dataset[a.a.Player.Dataset.FACE_SWATCH]=e===t?"me":e.teamId===t.teamId?"teammate":"opponent",e===t){const e=document.createElement("div");e.classList.add(a.a.Player.Class.SHORT_SPOTLIGHT),$(this,W).appendChild(e);const t=document.createElement("div");t.classList.add(a.a.Player.Class.LONG_SPOTLIGHT),$(this,W).appendChild(t)}this.__immigrantInfoCache=Object.freeze({playerElem:$(this,W),username:e.username})}get immigrantInfo(){return this.__immigrantInfoCache}get score(){return super.score}set score(e){super.score=e}get health(){return super.health}set health(e){const t=this.isDowned;super.health=e,t!==this.isDowned&&($(this,W)[a.a.Player.Dataset.DOWNED]=this.isDowned?this.player.team.elimOrder?"team":"self":"no")}}W=new WeakMap,Object.freeze(X),Object.freeze(X.prototype);class J extends j{constructor(e,t){if(super(e,t),e.gameType===r.Type.ONLINE)throw new TypeError("OnlineGames should be using regular Players instead.")}__abstractNotifyThatGameStatusBecamePlaying(){this.movementContinueWithInitialDelay()}__abstractNotifyThatGameStatusBecamePaused(){this.game.cancelTimeout(this.scheduledMovementCallbackId),this.scheduledMovementCallbackId=void 0}__abstractNotifyThatGameStatusBecameOver(){this.game.cancelTimeout(this.scheduledMovementCallbackId),this.scheduledMovementCallbackId=void 0}movementContinue(){this.makeMovementRequest(this.game.grid.getUntToward(this.coord,this.computeDesiredDestination()),this.getNextMoveType()),this.movementContinueWithInitialDelay()}movementContinueWithInitialDelay(){this.scheduledMovementCallbackId=this.game.setTimeout(()=>this.movementContinue(),this.computeNextMovementTimer())}}(V=J||(J={})).of=(e,t)=>new V.__Constructors[t.familyId](e,t),function(e){class t extends b{constructor(){super(t,Object.entries(r).reduce((e,t)=>{const s=t[0],r=t[0],i=t[1];return e[s]={seq:r,weight:i},e},{}))}static getName(){return b.Names.ENGLISH__LOWERCASE}static getBlurb(){return""}static getInstance(){return this.SINGLETON||(this.SINGLETON=new t),this.SINGLETON}}t.SINGLETON=void 0,e.Lowercase=t,Object.seal(t),Object.freeze(t.prototype);class s extends b{constructor(){let e={};const t=t=>{e=Object.entries(r).reduce((e,s)=>{const r=t(s[0]),i=t(s[0]),a=s[1];return e[r]={seq:i,weight:a},e},e)};t(e=>e.toLowerCase()),t(e=>e.toUpperCase()),super(s,e)}static getName(){return b.Names.ENGLISH__MIXEDCASE}static getBlurb(){return""}static getInstance(){return this.SINGLETON||(this.SINGLETON=new s),this.SINGLETON}}s.SINGLETON=void 0,e.MixedCase=s,Object.seal(s),Object.freeze(s.prototype);const r=Object.freeze({a:8.167,b:1.492,c:2.202,d:4.253,e:12.702,f:2.228,g:2.015,h:6.094,i:6.966,j:.153,k:1.292,l:4.025,m:2.406,n:6.749,o:7.507,p:1.929,q:.095,r:5.987,s:6.327,t:9.356,u:2.758,v:.978,w:2.56,x:.15,y:1.994,z:.077})}(K||(K={})),Object.seal(K);var Q,Z=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},ee=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class te{constructor(e,t,s){Q.set(this,void 0),this.gameType=e;const r=this.__getGridImplementation(s.coordSys);this.grid=new r({gridClass:r,tileClass:t.tileClass,coordSys:s.coordSys,dimensions:s.gridDimensions,domParentHtmlIdHook:s.gridHtmlIdHook||"n/a"}),this.langName=s.languageName,this.__playerStatusCtor=t.playerStatusCtor,this.players=this.createPlayers(s),void 0!==s.operatorIndex&&(this.operator=this.players[s.operatorIndex]);const i=[];if(this.players.forEach(e=>{i[e.teamId]||(i[e.teamId]=[]),i[e.teamId].push(e)}),this.teams=i.map((e,t)=>new P(t,e)),this.players.forEach(e=>e.__afterAllPlayersConstruction()),this.teams.every(e=>e.id===P.ElimOrder.IMMORTAL))throw new Error("All teams are immortal. The game will never end.")}reset(){this.grid.reset(),Z(this,Q,r.Status.PAUSED)}createPlayers(e){return(e.playerDescs=this.gameType===r.Type.ONLINE?e.playerDescs:j.CtorArgs.finalize(e.playerDescs)).map((t,s)=>t.familyId===j.Family.HUMAN?s===e.operatorIndex?this.__createOperatorPlayer(t):new j(this,t):this.__createArtifPlayer(t))}serializeResetState(){const e=[],t=this.players.map(e=>e.coord),s=[];return this.grid.forEachTile(t=>{e.push({char:t.langChar,seq:t.langSeq}),t.freeHealth&&s.push({coord:t.coord,health:t.freeHealth})}),{csps:e,playerCoords:t,healthCoords:s}}deserializeResetState(e){{let t=0;this.grid.forEachTile(s=>{s.setLangCharSeqPair(e.csps[t++]),s.lastKnownUpdateId=1})}e.playerCoords.forEach((e,t)=>{this.players[t].moveTo(this.grid.tile.at(e))}),e.healthCoords.forEach(e=>{this.grid.tile.at(e.coord).freeHealth=e.health})}get status(){return ee(this,Q)}statusBecomePlaying(){if(this.status!==r.Status.PAUSED)throw new Error("Can only resume a game that is currently paused.");this.players.forEach(e=>{e.__abstractNotifyThatGameStatusBecamePlaying()}),this.__abstractStatusBecomePlaying(),Z(this,Q,r.Status.PLAYING),this.grid.baseElem&&this.grid.baseElem.focus()}statusBecomePaused(){if(this.status!==r.Status.PLAYING)throw new Error("Can only pause a game that is currently playing.");this.players.forEach(e=>{e.__abstractNotifyThatGameStatusBecamePaused()}),this.__abstractStatusBecomePaused(),Z(this,Q,r.Status.PAUSED)}statusBecomeOver(){if(this.status!==r.Status.PLAYING)throw new Error("Can only end a game that is currently playing.");this.players.forEach(e=>{e.__abstractNotifyThatGameStatusBecameOver()}),this.__abstractStatusBecomeOver(),Z(this,Q,r.Status.OVER),console.log("game is over!")}__abstractStatusBecomePlaying(){}__abstractStatusBecomePaused(){}__abstractStatusBecomeOver(){}}Q=new WeakMap,Object.freeze(te),Object.freeze(te.prototype);var se,re=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},ie=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class ae extends te{constructor(e,t,s){super(e,t,s),se.set(this,void 0),this.eventRecordBitmap=[]}reset(){super.reset(),this.eventRecordBitmap.fill(!1,0,r.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH),re(this,se,0)}get nextUnusedEventId(){return ie(this,se)}recordEvent(e){const t=e.eventId,s=t%r.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH;if(t===E.EVENT_ID_REJECT)throw new TypeError("Do not try to record events for rejected requests.");if(t<0||t!==Math.trunc(t))throw new RangeError("Event ID's must only be assigned positive, integer values.");if(this.eventRecordBitmap[s])throw new Error("Event ID's must be assigned unique values.");this.eventRecordBitmap[s]=!0,this.eventRecordBitmap[(t+r.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH-r.K.EVENT_RECORD_FORWARD_WINDOW_LENGTH)%r.K.EVENT_RECORD_WRAPPING_BUFFER_LENGTH]=!1,re(this,se,+ie(this,se)+1)}executeTileModEvent(e,t=!0){const s=this.grid.tile.at(e.coord);s.lastKnownUpdateId<e.lastKnownUpdateId&&(e.newCharSeqPair&&(s.setLangCharSeqPair(e.newCharSeqPair),t&&void 0!==this.operator&&!this.operator.tile.destsFrom().get.includes(s)&&this.operator.seqBufferAcceptKey("")),s.lastKnownUpdateId=e.lastKnownUpdateId,s.freeHealth=e.newFreeHealth)}processMoveExecute(e){var t;const s=this.players[e.playerId],r=this.grid.tile.at(e.dest.coord),i=e.playerLastAcceptedRequestId-s.lastAcceptedRequestId;if(e.eventId!==E.EVENT_ID_REJECT)if(this.recordEvent(e),this.executeTileModEvent(e.dest,s!==this.operator),null===(t=e.tilesWithHealthUpdates)||void 0===t||t.forEach(e=>{this.executeTileModEvent(e)}),i>1){if(s===this.operator)throw new Error("This never happens. See comment in source.")}else{if(s.requestInFlight=!1,!(s===this.operator?1===i:i<=1))throw new Error("This never happens. See comment in source");s.status.score=e.newPlayerHealth.score,s.status.health=e.newPlayerHealth.health,s.moveTo(r),s.lastAcceptedRequestId=e.playerLastAcceptedRequestId}else 0===i&&(s.requestInFlight=!1)}processBubbleExecute(e){this.players[e.playerId].requestInFlight=!1,e.eventId!==E.EVENT_ID_REJECT&&this.recordEvent(e)}}se=new WeakMap,Object.freeze(ae),Object.freeze(ae.prototype);var ne,oe,he,ce,le,de=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},ue=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class me extends ae{constructor(e,t,s){super(e,t,s),ne.set(this,void 0),oe.set(this,void 0),this.averageFreeHealth=s.averageFreeHealthPerTile*this.grid.area,this.averageFreeHealthPerTile=s.averageFreeHealthPerTile,de(this,oe,new Set),this.lang=K.Lowercase.getInstance();const r=this.grid.static.getAmbiguityThreshold();if(this.lang.numLeaves<r)throw new Error(`Found ${this.lang.numLeaves} leaves, but at least ${r} were required. The provided mappings composing the current Lang-under-construction are not sufficient to ensure that a shuffling operation will always be able to find a safe candidate to use as a replacement. Please see the spec for Lang.getNonConflictingChar.`);this.langBalancingScheme=s.langBalancingScheme}reset(){super.reset(),de(this,ne,0),ue(this,oe).clear(),this.lang.reset(),this.grid.forEachTile(e=>{e.setLangCharSeqPair(this.dryRunShuffleLangCharSeqAt(e))}),this.teams.forEach(e=>e.reset());const e=this.grid.static.getSpawnCoords(this.teams.map(e=>e.members.length),this.grid.dimensions);this.teams.forEach((t,s)=>{t.members.forEach((t,r)=>{t.reset(this.grid.tile.at(e[s][r]))})})}dryRunShuffleLangCharSeqAt(e){e.setLangCharSeqPair(b.CharSeqPair.NULL);const t=Array.from(new Set(this.grid.tile.sourcesTo(e.coord).get.flatMap(e=>this.grid.tile.destsFrom(e.coord).get)));return this.lang.getNonConflictingChar(t.map(e=>e.langSeq).filter(e=>e),this.langBalancingScheme)}get currentFreeHealth(){return ue(this,ne)}get freeHealthTiles(){return ue(this,oe)}dryRunSpawnFreeHealth(e){let t=this.averageFreeHealth-this.currentFreeHealth;if(t<=0)return;const s=[];for(;t>0;){let i;do{i=this.grid.tile.at(this.grid.getRandomCoord())}while(i.isOccupied||s.find(e=>i.coord.equals(e.coord)));const a=1;if(Math.random()<r.K.HEALTH_UPDATE_CHANCE){let t;(t=e.find(e=>i.coord.equals(e.coord)))?t.newFreeHealth=(t.newFreeHealth||0)+a:s.push({coord:i.coord,lastKnownUpdateId:1+i.lastKnownUpdateId,newCharSeqPair:void 0,newFreeHealth:i.freeHealth+a})}t-=a}return s}getHealthCostOfBoost(){return this.averageFreeHealthPerTile/r.K.PCT_MOVES_THAT_ARE_BOOST}executeTileModEvent(e,t=!0){const s=this.grid.tile.at(e.coord);if(e.lastKnownUpdateId!==1+s.lastKnownUpdateId)throw new Error("this never happens. see comment in source.");de(this,ne,ue(this,ne)+(e.newFreeHealth-s.freeHealth)),0===e.newFreeHealth?ue(this,oe).delete(s):ue(this,oe).add(s),super.executeTileModEvent(e,t)}managerCheckGamePlayingRequest(e){if(this.status!==r.Status.PLAYING)return;const t=this.players[e.playerId];if(!t)throw new Error("No such player exists.");if(e.playerLastAcceptedRequestId!==t.lastAcceptedRequestId)throw new RangeError(e.playerLastAcceptedRequestId<t.lastAcceptedRequestId?"Clients should not make requests until they have received my response to their last request.":"Client seems to have incremented the request ID counter on their own, which is is illegal.");return t}processMoveRequest(e){const t=this.managerCheckGamePlayingRequest(e);if(!t)return void this.processMoveExecute(e);const s=this.grid.tile.at(e.dest.coord);if(s.isOccupied||s.lastKnownUpdateId!==e.dest.lastKnownUpdateId)return void this.processMoveExecute(e);const i=t.status.health+s.freeHealth*(t.status.isDowned?r.K.HEALTH_EFFECT_FOR_DOWNED_PLAYER:1)-(e.moveType===j.MoveType.BOOST?this.getHealthCostOfBoost():0);i<0||(e.playerLastAcceptedRequestId=1+t.lastAcceptedRequestId,e.newPlayerHealth={score:t.status.score+s.freeHealth,health:i},e.dest.lastKnownUpdateId=1+s.lastKnownUpdateId,e.dest.newFreeHealth=0,e.dest.newCharSeqPair=this.dryRunShuffleLangCharSeqAt(s),e.tilesWithHealthUpdates=this.dryRunSpawnFreeHealth([e.dest]),e.eventId=this.nextUnusedEventId),this.processMoveExecute(e)}processBubbleRequest(e){const t=this.managerCheckGamePlayingRequest(e);t?(e.playerLastAcceptedRequestId=1+t.lastAcceptedRequestId,e.eventId=this.nextUnusedEventId,this.processBubbleExecute(e)):this.processBubbleExecute(e)}}ne=new WeakMap,oe=new WeakMap,Object.freeze(me),Object.freeze(me.prototype);class pe extends me{__getGridImplementation(e){return g.getImplementation(e)}constructor(e){if(super(r.Type.OFFLINE,{tileClass:C,playerStatusCtor:X},e),!this.operator)throw new Error("The Operator for an OfflineGame should be defined.");this.reset(),this.grid.baseElem.addEventListener("keydown",e=>(this.operator.processKeyboardInput(e),32!==e.keyCode||(e.preventDefault(),!1)))}__createOperatorPlayer(e){return new U(this,e)}__createArtifPlayer(e){return J.of(this,e)}setTimeout(e,t,...s){return setTimeout(e,t,s)}cancelTimeout(e){clearTimeout(e)}}Object.freeze(pe),Object.freeze(pe.prototype);class ge{constructor(e){this.static=e.gridClass,this.dimensions=e.dimensions,this.tile=new I(this)}get area(){return this.static.getArea(this.dimensions)}reset(){this.forEachTile(e=>e.reset())}check(){}getRandomCoord(){return this.static.getRandomCoord(this.dimensions)}__VisibleGrid_super(e,t){const s=a.a.Grid;t.tabIndex=0,t.classList.add(s.Class.IMPL_BODY);const r=document.getElementById(e.domParentHtmlIdHook);if(!r)throw new RangeError(`The ID "${e.domParentHtmlIdHook}" did not refer to an existing html element.`);r.dataset[s.Dataset.COORD_SYS]=e.coordSys,r.classList.add(s.Class.GRID,a.a.General.Class.TEXT_SELECT_DISABLED,a.a.General.Class.CENTER_CONTENTS,a.a.General.Class.STACK_CONTENTS),r.querySelectorAll("."+s.Class.IMPL_BODY).forEach(e=>e.remove()),r.insertAdjacentElement("afterbegin",t),this.baseElem=t;if(!r.querySelector(":scope ."+s.Class.KBD_DC_BASE)){const e=document.createElement("div");e.classList.add(s.Class.KBD_DC_BASE,a.a.General.Class.CENTER_CONTENTS);{const t=document.createElement("div");t.classList.add(s.Class.KBD_DC_ICON),t.innerText="(click grid to continue typing)",e.appendChild(t)}r.appendChild(e)}}}(he=ge||(ge={})).getImplementation=e=>he.__Constructors[e],function(e){class t extends i.Abstract.Mathy{constructor(e){super(e),this.x=e.x,this.y=e.y,Object.freeze(this)}equals(e){return this.x===e.x&&this.y===e.y}round(){return new t({x:Math.round(this.x),y:Math.round(this.y)})}oneNorm(e){return this.sub(e).originOneNorm()}originOneNorm(){return Math.abs(this.x)+Math.abs(this.y)}infNorm(e){return this.sub(e).originInfNorm()}originInfNorm(){return Math.max(Math.abs(this.x),Math.abs(this.y))}axialAlignment(e){return this.sub(e).originAxialAlignment()}originAxialAlignment(){return Math.abs(Math.abs(this.x)-Math.abs(this.y))/(Math.abs(this.x)+Math.abs(this.y))}add(e){return new t({x:this.x+e.x,y:this.y+e.y})}sub(e){return new t({x:this.x-e.x,y:this.y-e.y})}mul(e){return new t({x:e*this.x,y:e*this.y})}}e.Coord=t,Object.freeze(t),Object.freeze(t.prototype);class s extends ge{constructor(e){super(e);const s=[];for(let r=0;r<this.dimensions.height;r++){const i=[];for(let s=0;s<this.dimensions.width;s++){const a=new e.tileClass(new t({x:s,y:r}));i.push(a)}s.push(i)}this.grid=s}static getAmbiguityThreshold(){return 24}static getSizeLimits(){return this.SIZE_LIMITS}forEachTile(e,t=this){this.grid.forEach(s=>s.forEach(t=>{e(t)},t),t)}getUntToward(e,t){const s=this.tile.destsFrom(e).unoccupied.get;if(0===s.length)return this.tile.at(e);if(1===s.length)return s[0];s.sort((e,s)=>e.coord.oneNorm(t)-s.coord.oneNorm(t)).sort((e,s)=>e.coord.infNorm(t)-s.coord.infNorm(t));for(let e=1;e<s.length;e++)if(s[e].coord.infNorm(t)>s[0].coord.infNorm(t)){s.splice(e);break}if(1===s.length)return s[0];if(s[0].coord.x-e.x==0||s[0].coord.y-e.y==0){if(e.axialAlignment(e.sub(t))-.5>0)return s[0];s.shift()}return s[Math.floor(s.length*Math.random())]}getUntAwayFrom(e,t){return this.getUntToward(e,e.add(e.sub(t)))}getRandomCoordAround(e,s){return new t({x:e.x+Math.trunc(2*s*(Math.random()-.5)),y:e.y+Math.trunc(2*s*(Math.random()-.5))})}__getTileAt(e){if(e.x<0||e.x>=this.dimensions.width||e.y<0||e.y>=this.dimensions.height)throw new RangeError("Out of bounds. No such tile exists.");return this.grid[e.y][e.x]}__getTileDestsFrom(e,t=1){let s=e.y-t,r=e.y+t+1,i=e.x-t,a=e.x+t+1;return s>=this.dimensions.height||r<0||i>=this.dimensions.width||a<0?[]:this.grid.slice(Math.max(0,s),Math.min(this.dimensions.height,r)).flatMap(e=>e.slice(Math.max(0,i),Math.min(this.dimensions.width,a)))}__getTileSourcesTo(e,t=1){return this.__getTileDestsFrom(e,t)}minMovesFromTo(e,t){return Math.min(Math.abs(t.x-e.x),Math.abs(t.y-e.y))}static getSpawnCoords(e,t){const r=[];return e.map(e=>{const i=[];for(;e>0;){let a;do{a=s.getRandomCoord(t)}while(r.find(e=>a.equals(e)));i.push(a),r.push(a),e--}return i})}static getArea(e){return e.height*e.width}static getRandomCoord(e){const s=Math.floor(e.width*Math.random()),r=Math.floor(e.height*Math.random());return new t({x:s,y:r})}}s.SIZE_LIMITS=Object.freeze({height:Object.freeze({min:11,max:51}),width:Object.freeze({min:11,max:51})}),e.Grid=s,function(e){e.Visible=class extends e{constructor(e){super(e);const t=document.createElement("div");t.style.setProperty("--euclid2-grid-width",this.dimensions.width.toString());for(const e of this.grid)for(const s of e)s.__addToDom(t);this.__VisibleGrid_super(e,t)}}}(s=e.Grid||(e.Grid={})),Object.freeze(s),Object.freeze(s.prototype)}(ce||(ce={})),Object.freeze(ce),function(e){class t extends i.Abstract.Mathy{constructor(e){super(e),this.dash=e.dash,this.bash=e.bash,Object.freeze(this)}equals(e){return this.dash===e.dash&&this.bash===e.bash}round(){const e=Math.floor(this.dash),s=Math.floor(this.bash),r=e-this.dash,i=s-this.bash;return r>2*i?new t({dash:e+1,bash:s}):r<.5*i?new t({dash:e,bash:s+1}):Math.min(r,i)>.5?new t({dash:e+1,bash:s+1}):new t({dash:e,bash:s})}add(e){return new t({dash:this.dash+e.dash,bash:this.bash+e.bash})}sub(e){return new t({dash:this.dash-e.dash,bash:this.bash-e.bash})}mul(e){return new t({dash:e*this.dash,bash:e*this.bash})}}e.Coord=t,Object.freeze(t),Object.freeze(t.prototype);class s extends ge{constructor(e){super(e)}static getAmbiguityThreshold(){return 18}static getSizeLimits(){return this.SIZE_LIMITS}forEachTile(e,t=this){this.grid.forEach(s=>s.forEach(t=>{e(t)},t),t)}getUntToward(e,t){}getUntAwayFrom(e,t){return this.getUntToward(e,e.add(e.sub(t)))}getRandomCoordAround(e,t){}__getTileAt(e){}__getTileDestsFrom(e){}__getTileSourcesTo(e){}minMovesFromTo(e,t){}static getSpawnCoords(e,t){}static getArea(e){const t=Math.min(e.fslash,e.bslash),s=Math.max(e.fslash,e.bslash),r=-1+e.dash+t;let i=2*t*(e.dash+r);return i+=(s-t-1)*r,i}static getRandomCoord(e){return new t(void 0)}}s.SIZE_LIMITS=Object.freeze({dash:Object.freeze({min:10,max:50}),bslash:Object.freeze({min:10,max:50}),fslash:Object.freeze({min:10,max:50})}),e.Grid=s,function(e){e.Visible=class extends e{constructor(e){super(e);this.__VisibleGrid_super(e,void 0)}}}(s=e.Grid||(e.Grid={})),Object.freeze(s),Object.freeze(s.prototype)}(le||(le={})),Object.freeze(le);var fe,Ee,ye=function(e,t,s){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");return t.set(e,s),s},we=function(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e)};class Te extends J{constructor(e,t){super(e,t),fe.set(this,void 0),this.behaviour=Object.freeze(t.familyArgs),this.grid=this.game.grid}__afterAllPlayersConstruction(){super.__afterAllPlayersConstruction(),this.threatProximity=this.game.teams.filter(e=>e.id!==this.teamId).flatMap(e=>e.members),this.targetProximity=this.threatProximity.slice()}reset(e){super.reset(e),ye(this,fe,this.coord)}moveTo(e){ye(this,fe,this.coord),super.moveTo(e)}computeDesiredDestination(){this.threatProximity.sort((e,t)=>this.grid.minMovesFromTo(e.coord,this.coord)-this.grid.minMovesFromTo(t.coord,this.coord));for(const e of this.threatProximity){if(this.grid.minMovesFromTo(e.coord,this.coord)>this.behaviour.fearDistance)break;if(!e.status.isDowned&&e.status.health>this.status.health)return this.grid.getUntAwayFrom(this.coord,e.coord).coord}if(this.targetProximity.sort((e,t)=>this.grid.minMovesFromTo(this.coord,e.coord)-this.grid.minMovesFromTo(this.coord,t.coord)),this.status.isDowned)for(const e of this.targetProximity){if(this.grid.minMovesFromTo(this.coord,e.coord)>this.behaviour.bloodThirstDistance)break;if(e.status.health<this.status.health-this.behaviour.healthReserve)return e.coord}if(0===this.game.freeHealthTiles.size){const e=.2;return Math.random()<e?this.grid.getRandomCoordAround(this.coord,3):this.grid.getRandomCoordAround(this.grid.getUntAwayFrom(this.grid.getUntAwayFrom(this.coord,we(this,fe)).coord,we(this,fe)).coord,1)}let e=this.game.freeHealthTiles[0],t=1/0;for(const s of this.game.freeHealthTiles){const r=this.grid.minMovesFromTo(this.coord,s.coord);r<t&&(e=s,t=r)}return e.coord}getNextMoveType(){return j.MoveType.NORMAL}computeNextMovementTimer(){return 1e3/this.behaviour.movesPerSecond}}fe=new WeakMap,Object.freeze(Te),Object.freeze(Te.prototype),function(e){function t(){ge.__Constructors=Object.freeze({EUCLID2:ce.Grid,BEEHIVE:le.Grid}),Object.freeze(ge),Object.freeze(ge.prototype);{const e=g;e.__Constructors=Object.freeze({EUCLID2:ce.Grid.Visible,BEEHIVE:le.Grid.Visible}),Object.freeze(e)}{const e=J;e.__Constructors=Object.freeze({CHASER:Te}),Object.freeze(e),Object.freeze(e.prototype)}}e.INIT_CLASS_REGISTRIES=t,Object.freeze(t)}(Ee||(Ee={})),Object.freeze(Ee),s(4),Ee.INIT_CLASS_REGISTRIES();const Ce=new pe({coordSys:"EUCLID2",gridDimensions:{height:21,width:21},gridHtmlIdHook:a.a.Grid.Id.GRID,averageFreeHealthPerTile:1/45,langBalancingScheme:n.a.BalancingScheme.WEIGHT,languageName:"engl-low",operatorIndex:0,playerDescs:[{familyId:"HUMAN",teamId:0,socketId:void 0,username:"hello world",noCheckGameOver:!1,familyArgs:{}},{familyId:"CHASER",teamId:1,socketId:void 0,username:"chaser test",noCheckGameOver:!0,familyArgs:{fearDistance:5,bloodThirstDistance:7,healthReserve:3,movesPerSecond:2}}]});Ce.statusBecomePlaying()}}]);
//# sourceMappingURL=index.js.map