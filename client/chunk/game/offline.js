"use strict";(self.webpackChunkcapswalk=self.webpackChunkcapswalk||[]).push([[755],{900:(e,t,r)=>{r.r(t),r.d(t,{OfflineGame:()=>k});var s=r(467),o=r(314),i=r(986),a=r(929),n=r(31),h=r(315);class d{constructor(e){const t=[];for(const r of e)t[r]=new d.Entry;this.entries=t,a.R.propNoWrite(this,"entries"),Object.seal(this)}reset(){for(const e of this.entries)e.reset()}}(e=>{class t{constructor(){this.moveCounts={}}reset(){Object.getOwnPropertyNames(i.J.MoveType).forEach((e=>{this.moveCounts[e]=0}))}}e.Entry=t,Object.freeze(t),Object.freeze(t.prototype)})(d||(d={})),Object.freeze(d),Object.freeze(d.prototype);var c=r(387),p=r(817);const l=Object.freeze({Euclid2:c.K.Grid,Beehive:p.v.Grid});var g,u=r(496),m=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)};class f extends u.S{constructor(e){var t,r,s;super(e),this.lang=void 0,((e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,void 0)})(this,g),this.scoreInfo=new d(this.players.map((e=>e.playerId))),a.R.propNoWrite(this,"scoreInfo"),t=this,r=g,s=n.U.Import(e.desc.langId).then((t=>(this.lang=new t(e.desc.langWeightExaggeration),a.R.propNoWrite(this,"lang"),this.lang))),m(t,r,"write to private field"),r.set(t,s)}async reset(){super.reset();const e=Object.freeze({playerCoords:[],csps:[]});var t,r;await(t=this,r=g,m(t,r,"read from private field"),r.get(t)),this.lang.reset(),this.grid.forEachShuffled(((t,r)=>{const s=this.dryRunShuffleLangCspAt(t.coord);this.grid.write(t.coord,s),e.csps[r]=s})),this.teams.forEach((e=>e.reset()));const s=this.grid.static.getSpawnCoords(this.teams.map((e=>e.members.length)),this.grid.dimensions);return this.teams.forEach(((t,r)=>{t.members.forEach(((t,o)=>{const i=s[r][o];t.reset(i),e.playerCoords[t.playerId]=i}))})),this.scoreInfo.reset(),e}dryRunShuffleLangCspAt(e){this.grid.write(e,{seq:""});const t=this.grid.getAllAltDestsThan(e).map((e=>e.seq)).freeze();return this.lang.getNonConflictingChar(t)}requestStateChange(e,t){const r=this.players[e.author];if(e.lastRejectId!==r.reqBuffer.lastRejectId)return;if(this.status!==h.l.Status.PLAYING||this.grid.isOccupied(e.moveDest))return void this.commitStateChange({rejectId:r.reqBuffer.getNextRejectId(),author:e.author},t);const s=e.moveType===i.J.MoveType.BOOST,o=r.boosts+(s?-1:h.l.K.PORTION_OF_MOVES_THAT_ARE_BOOST);s&&o<0?this.commitStateChange({rejectId:r.reqBuffer.getNextRejectId(),author:e.author},t):(this.scoreInfo.entries[r.playerId].moveCounts[e.moveType]+=1,this.commitStateChange({author:e.author,moveType:e.moveType,players:{[r.playerId]:{boosts:o,coord:e.moveDest}},tiles:{[e.moveDest]:this.dryRunShuffleLangCspAt(e.moveDest)}},t))}}g=new WeakMap,(f||(f={})).CHECK_VALID_CTOR_ARGS=function(e){const t=[],r=Object.freeze({coordSys:0,gridDimensions:0,langId:0,langWeightExaggeration:0,players:0}),s=[];for(const t in r){null==e[t]&&s.push(t)}s.length&&t.push("Missing the following arguments: "+s);const o=n.U.GetDesc(e.langId),i=(a=e.coordSys,l[a]);var a;return void 0===o?t.push(`No language with the ID \`${e.langId}\` exists.`):void 0===i?t.push(`No grid with the system ID \`${e.coordSys}\` exists.`):o.isolatedMinOpts<i.ambiguityThreshold&&t.push("The provided language does not have enough sequences\nto ensure that a shuffling operation will always succeed when\npaired with the provided grid system."),"number"!=typeof e.langWeightExaggeration?t.push(`Language Weight Exaggeration expected a number, but \`${e.langWeightExaggeration}\` is not a number.`):e.langWeightExaggeration=Math.max(0,parseFloat(e.langWeightExaggeration)),Object.entries(i.sizeLimits).forEach((([r,s])=>{if(void 0===s)return;const o=e.gridDimensions[r];if("number"!=typeof o)return void t.push(`Expected a number for dimension "${r}" of grid dimensions.`);(o<s.min||o>s.max)&&t.push(`Expected a number within [${s.min}, ${s.max}] but got ${o}.`);const a=i.getArea(e.gridDimensions),n=e.players.length;n/a>h.l.K.MAX_PLAYER_CROWDEDNESS&&t.push(`To have ${n} players, the grid's area must be greater than ${n/h.l.K.MAX_PLAYER_CROWDEDNESS}, but got ${a}.`)})),t},Object.freeze(f),Object.freeze(f.prototype);var v,y,b,O,w,E,T=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)},j=(e,t,r)=>(T(e,t,"read from private field"),r?r.call(e):t.get(e)),C=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},I=(e,t,r,s)=>(T(e,t,"write to private field"),s?s.call(e,r):t.set(e,r),r),R=(e,t,r)=>(T(e,t,"access private method"),r);class S extends i.J{constructor(e,t){super(e,t),C(this,b),C(this,w),C(this,v,void 0),C(this,y,void 0)}onGamePlaying(){R(this,w,E).call(this)}onGamePaused(){this.game.cancelTimeout(j(this,y)),I(this,y,void 0)}onGameOver(){this.game.cancelTimeout(j(this,y)),I(this,y,void 0)}}v=new WeakMap,y=new WeakMap,b=new WeakSet,O=function(){const e=this.computeDesiredDest();I(this,v,this.game.grid.tileAt(e).seq.length),this.makeMovementRequest(this.game.grid.getUntToward(e,this.coord),this.getNextMoveType()),R(this,w,E).call(this)},w=new WeakSet,E=function(){I(this,y,this.game.setTimeout(R(this,b,O).bind(this),this.computeNextMovementTimer()*j(this,v)))},(e=>{var t;class r extends e{constructor(){super(...arguments),C(this,t,{which:0,reuses:0,target:void 0})}reset(e){super.reset(e),j(this,t).which=0,j(this,t).reuses=0,j(this,t).target=void 0}computeDesiredDest(){const e=j(this,t);if(void 0!==e.target&&e.reuses<=h.l.K._ROBOT_PRIORITY_MAX_REUSES){const t=this._behaviours[e.which].call(this,e.target);if(void 0!==t)return e.reuses++,t.dest}e.reuses=0;for(let t=0;t<this._behaviours.length;t++){const r=this._behaviours[t].call(this);if(void 0!==r)return e.which=t,e.target=r.target,r.dest}throw new Error("never")}}t=new WeakMap,e.Decisive=r,Object.freeze(r),Object.freeze(r.prototype)})(S||(S={})),Object.seal(S),Object.freeze(S.prototype);var D=Object.defineProperty,A=Object.getOwnPropertySymbols,_=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable,W=(e,t,r)=>t in e?D(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,z=(e,t)=>{for(var r in t||(t={}))_.call(t,r)&&W(e,r,t[r]);if(A)for(var r of A(t))x.call(t,r)&&W(e,r,t[r]);return e};class M extends S.Decisive{constructor(e,t){super(e,t),this.pred=[],this.prey=[],this.params=Object.freeze(z(z({},M.Behaviour.DEFAULT),t.familyArgs)),this.grid=this.game.grid,Object.seal(this),a.R.propNoWrite(this,"params","grid")}_onTeamsBootstrapped(){super._onTeamsBootstrapped(),this.pred=this.game.teams.filter((e=>e.id!==this.teamId)).flatMap((e=>e.members)).seal(),this.prey=[...this.pred].seal(),a.R.propNoWrite(this,"pred","prey")}_bhvrEvadePred(e){if(void 0!==e)return{dest:this.grid.getUntAwayFrom(this.game.players[e].coord,this.coord)};this.pred.sort(((e,t)=>this.grid.dist(e.coord,this.coord)-this.grid.dist(t.coord,this.coord)));for(const e of this.pred){if(this.grid.dist(e.coord,this.coord)>this.params.fearDistance)break;if(!e.isDowned&&e.boosts>this.boosts)return{dest:this.grid.getUntAwayFrom(e.coord,this.coord),target:e.playerId}}}_bhvrChasePrey(e){if(void 0!==e)return{dest:this.game.players[e].coord};if(this.prey.sort(((e,t)=>this.grid.dist(this.coord,e.coord)-this.grid.dist(this.coord,t.coord))),this.isDowned)for(const e of this.prey){if(this.grid.dist(this.coord,e.coord)>this.params.bloodThirstDistance)break;if(e.boosts<this.boosts-this.params.healthReserve)return{dest:e.coord,target:e.playerId}}}_bhvrGotoHealthElseWander(e){if(Math.random()<this.params.wanderingAimlessness)return{dest:this.grid.getRandomCoordAround(this.coord,3)};{const e=this.grid.getUntAwayFrom.bind(this.grid,this.prevCoord);return{dest:this.grid.getRandomCoordAround(e(e(this.coord)),1)}}}getNextMoveType(){return i.J.MoveType.NORMAL}computeNextMovementTimer(){return 1e3/this.params.keyPressesPerSecond}}(e=>{let t;(t=e.Behaviour||(e.Behaviour={})).DEFAULT=Object.freeze({fearDistance:5,bloodThirstDistance:7,healthReserve:3,keyPressesPerSecond:1.8,wanderingAimlessness:.2})})(M||(M={})),M.prototype._behaviours=Object.freeze([M.prototype._bhvrEvadePred,M.prototype._bhvrChasePrey,M.prototype._bhvrGotoHealthElseWander]),a.R.protoNoEnum(M,"_onTeamsBootstrapped"),Object.freeze(M),Object.freeze(M.prototype);const P={Chaser:M};function N(e,t){const r=t.familyId;return new P[r](e,t)}class k extends f{constructor(e,t){super({impl:{gridClassLookup:s.t,ClientPlayer:o.r,RobotPlayer:N,onGameBecomeOver:e},desc:(i.J.CtorArgs.finalize(t),t),clientPlayerIds:t.players.filter((e=>"Human"===e.familyId)).map((e=>e.playerId))}),Object.seal(this)}}Object.freeze(k),Object.freeze(k.prototype)}}]);
//# sourceMappingURL=offline.js.map