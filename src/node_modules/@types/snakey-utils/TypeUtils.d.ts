/**
 * This file should be included in the `compilerOptions.types` array
 * for all `\*\*\/.templates/tsconfig.json` files under `src/`.
 */


 /**
  * ### Snakey alias for Readonly<T>
  */
type RoArray<T> = ReadonlyArray<T>;

/**
 * ### Snakey No-Readonly<T>
 */
type NoRo<T extends object> = {
    -readonly [ K in keyof T ]: T[K];
};

// not used/needed yet.
//type Modify<T, R extends Partial<Record<keyof T, any>>> = Omit<T, keyof R> & R;

// not used/needed yet.
//type Require<T, K extends keyof T> = T & Pick<Required<T>, K>;


/**
 * @returns
 * A shallow copy of the given object containing all instance fields
 * belonging to the object and not to any of its prototypes. Suitable
 * for sending over an internet connection.
 *
 * **Important:** We don't actually need this! Socket.io implicitly
 * sends objects serialized as JSON.
 *
 * @param obj - The object to create a shallow copy of with no prototype.
 */
// export const noProto = <T extends object>(obj: T): T => {
//     return Object.assign(Object.create(null), obj);
// };
