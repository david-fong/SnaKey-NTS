@import "./normalize.vendor.css";

/* If anything goes into fullscreen mode: */
::backdrop {
	background-color: var(--colour-mainBg);
}
@media (light-level: dim) {
	body {
		filter: brightness(0.7);
	}
}

:root {
	scroll-behavior: smooth;
	font-family:
		monospace,
		"Trebuchet MS",
		"Lucida Sans Unicode",
		"MS PGothic"            /* Japanese */
		;
	font-weight: bold;
	color: var(--colour-mainFg);
	text-align: center;
	white-space: pre-line;
	transition: filter 0.5s ease-in-out;

	--spc-s: 0.2em;
	--spc-m: 0.4em;
	--line-height-m: 1.4;
}

body {
	margin: 0;
	user-select: none;
	-webkit-user-select: none;
}

:disabled {
	cursor: not-allowed;
}

* {
	scrollbar-width: thin;
	scrollbar-color: transparent;
	scrollbar-track-color: var(--colour-tileBd);
}
::-webkit-scrollbar {
	width:  8px;
	height: 8px;
}
::-webkit-scrollbar-track {
	background-color: transparent;
}
::-webkit-scrollbar-thumb {
	background: var(--colour-tileBd);
	border-radius: 30px;
	border: 2px solid transparent;
}
::-webkit-scrollbar-corner {
	visibility: hidden;
}

table {
	border-spacing: 0;
}
button {
	font: inherit;
	color: inherit;
	padding: 0px;
	background-color: var(--colour-tileBg);
}
button:disabled {
	opacity: 0.7;
}
input {
	font: inherit;
	text-align: inherit;
	box-sizing: border-box;
}



/* ============================
        UTILITY CLASSES
============================ */

.fill-parent {
	position: absolute;
	inset: 0;
	overflow: hidden hidden;
}

.center-contents {
	display: grid;
	place-content: center;
	place-items: center;
}
.stack-contents {
	position:   relative;
}
.stack-contents > * {
	position:   absolute;
}


/* Does not imposes effects on external sizing
calculations except by setting its own items'
margins and padding, and its own padding. */
.input-group {
	background-color: var(--colour-mainBg);
	padding: var(--spacing);
	border-radius: calc(
		var(--border-radius) + (2.0 * var(--spacing))
	);
}
.input-group > * {
	contain: strict;
	position: relative;
}
.input-group input.input-group-item {
	padding: 0px;
}
.input-group input.input-group-item:invalid {
	border-style:   dotted;
}
.input-group .input-group-item {
	border-radius:  var(--border-radius);
	margin:         var(--spacing);
	border:   0px solid var(--colour-tileBg);
	color:              var(--colour-tileFg);
	background-color:   var(--colour-tileBg);
	transition: all 0.15s ease-in;
}
/* Note: The javascript focuses these on pointer entry. */
.input-group .input-group-item:focus {
	outline: none;
	border-color: var(--colour-tileBd);
	animation: 0.4s steps(2) -0.5s infinite alternate input-group-item-focus;
}
.input-group:focus-within .input-group-item:not(:focus) {
	filter: brightness(0.9);
	opacity: 0.6;
}
@keyframes input-group-item-focus {
	from {
		margin: calc(var(--spacing) / 3.0);
		border-width: calc(1.2 * var(--spacing));
	}
	to {
		margin: calc(var(--spacing) * 2.0 / 3.0);
		border-width: calc(1.4 * var(--spacing));
	}
}
