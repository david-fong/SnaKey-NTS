{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint"
        //"eslint-plugin-tsdoc"
    ],
    "env": {
        "es6": true
    },



    "rules": {
        // regular javascript linting:
        "getter-return": "error",
        "no-invalid-regexp": ["error", { "allowConstructorFlags": ["u", "y"] }],
        "no-unreachable": "error",
        "eqeqeq": ["error", "smart"],
        "no-eval": "error",
        "no-invalid-this": "error",
        "no-throw-literal": "error",
        "no-useless-catch": "error",
        "yoda": ["error", "never", { "exceptRange": true }],
        "semi-spacing": ["error", {"before": false, "after": true}],
        "space-before-function-paren": ["error", {
            "anonymous": "never",
            "named": "never",
            "asyncArrow": "always"
        }],

        // typescript docs linting:
        //"tsdoc/syntax": "error",

        // typescript linting:
        "semi": "off",
        "@typescript-eslint/semi": ["error", "always"],
        "camelcase": "off",
        "@typescript-eslint/camelcase": ["error", { "properties": "always" }],
        "@typescript-eslint/class-name-casing": ["error", { "allowUnderscorePrefix": true }],
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-misused-new": ["error"]
    },
    "overrides": [
        {
            // enable the rule specifically for TypeScript files
            "files": ["*.ts", "*.tsx"],
            "rules": {
                "@typescript-eslint/explicit-function-return-type": ["error", { "allowExpressions": true }]
            }
        }
    ]
}