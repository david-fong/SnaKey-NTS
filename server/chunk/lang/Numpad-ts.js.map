{"version":3,"file":"chunk/lang/Numpad-ts.js","mappings":"8GAEiBA,E,SAAV,CAAU,IAIT,gBAAqB,IACpBC,YAAYC,GAClBC,MAAM,SAAUD,GAAA,eAGhB,MAAME,EAAyB,GAC/B,QAASC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC7B,MAAMC,EAAMD,EAAEE,WAAWC,SAAS,EAAE,KACpCJ,EAAKE,GAAO,CAAEG,IAAKH,EAAKI,OAAQ,GAEjC,OAAON,GAVF,EAAMJ,OAAA,EAcbW,OAAOC,OAAO,GACdD,OAAOC,OAAO,EAAOC,YAnBf,CAAUb,IAAAA,EAAA,KAqBjBW,OAAOC,OAAOZ","sources":[".././src/base/lang/impl/Numpad.ts?"],"sourcesContent":["import { Lang } from \"../Lang\";\n\nexport namespace Numpad {\n\t/**\n\t * # Number Pad\n\t */\n\texport class Numpad extends Lang {\n\t\tpublic constructor(weightScaling: number) {\n\t\t\tsuper(\"numpad\", weightScaling);\n\t\t}\n\t\tpublic static BUILD(): Lang.ForwardDict {\n\t\t\tconst dict: Lang.ForwardDict = {};\n\t\t\tfor (let i = 0; i < 100; i++) {\n\t\t\t\tconst str = i.toString().padStart(2,\"0\");\n\t\t\t\tdict[str] = { seq: str, weight: 1 };\n\t\t\t}\n\t\t\treturn dict;\n\t\t}\n\t}\n\tNumpad as Lang.ClassIf;\n\tObject.freeze(Numpad);\n\tObject.freeze(Numpad.prototype);\n}\nObject.freeze(Numpad);"],"names":["Numpad","constructor","weightScaling","super","dict","i","str","toString","padStart","seq","weight","Object","freeze","prototype"],"sourceRoot":""}