{"version":3,"sources":[".././src/base/lang/impl/Numpad.ts?"],"names":["Numpad","weightScaling","super","dict","i","str","toString","padStart","seq","weight","Object","freeze","prototype"],"mappings":"8GAEiBA,E,UAAV,SAAU,GAIT,gBAAqB,IACpB,YAAYC,GAClBC,MAAM,SAAUD,GAAA,eAGhB,MAAME,EAAgC,GACtC,QAASC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC7B,MAAMC,EAAMD,EAAEE,WAAWC,SAAS,EAAE,KACpCJ,EAAKE,GAAO,CAAEG,IAAKH,EAAKI,OAAQ,GAEjC,OAAON,GAVF,EAAMH,OAAA,EAcbU,OAAOC,OAAO,GACdD,OAAOC,OAAO,EAAOC,WAnBf,CAAUZ,MAAA,KAqBjBU,OAAOC,OAAOX","file":"chunk/lang/Numpad-ts.js","sourcesContent":["import { Lang } from \"../Lang\";\r\n\r\nexport namespace Numpad {\r\n\t/**\r\n\t * # Number Pad\r\n\t */\r\n\texport class Numpad extends Lang {\r\n\t\tpublic constructor(weightScaling: number) {\r\n\t\t\tsuper(\"numpad\", weightScaling);\r\n\t\t}\r\n\t\tpublic static BUILD(): Lang.WeightedForwardMap {\r\n\t\t\tconst dict: Lang.WeightedForwardMap = {};\r\n\t\t\tfor (let i = 0; i < 100; i++) {\r\n\t\t\t\tconst str = i.toString().padStart(2,\"0\");\r\n\t\t\t\tdict[str] = { seq: str, weight: 1 };\r\n\t\t\t}\r\n\t\t\treturn dict;\r\n\t\t}\r\n\t}\r\n\tNumpad as Lang.ClassIf;\r\n\tObject.freeze(Numpad);\r\n\tObject.freeze(Numpad.prototype);\r\n}\r\nObject.freeze(Numpad);"],"sourceRoot":""}