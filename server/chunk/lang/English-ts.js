"use strict";exports.id=184,exports.ids=[184],exports.modules={468:(t,e,r)=>{r.r(e),r.d(e,{English:()=>n});var n,s=r(523);(t=>{class e extends s.U{constructor(t){super("engl-low",t)}static BUILD(){return s.U.BuildUtils.WORD_FOR_WORD(t.LETTER_FREQUENCY)}}t.Lowercase=e,Object.freeze(e),Object.freeze(e.prototype);class r extends s.U{constructor(t){super("engl-mix",t)}static BUILD(){let e={};const r=r=>{e=Object.entries(t.LETTER_FREQUENCY).freeze().reduce(((t,[e,n])=>{const s=r(e);return t[s]={seq:s,weight:n},t}),e)};return r((t=>t.toLowerCase())),r((t=>t.toUpperCase())),e}}let n,c;t.MixedCase=r,Object.freeze(r),Object.freeze(r.prototype),(e=>{class r extends s.U{constructor(t){super("engl-cell-enc",t)}static BUILD(){return Object.entries(t.LETTER_FREQUENCY).freeze().reduce(((t,[e,r],s)=>(t[e]={seq:n[s],weight:r},t)),{})}}e.Encode=r,Object.freeze(r),Object.freeze(r.prototype);const n=[3,3,3,3,3,4,3,4].flatMap(((t,e)=>{const r=[],n=(1+e).toString();for(let e=n;e.length<=t;e+=n)r.push(e);return r})).freeze()})(n=t.OldCellphone||(t.OldCellphone={})),Object.freeze(n),t.LETTER_FREQUENCY=Object.freeze(JSON.parse('{\n\t\t"a": 8.167, "b": 1.492, "c": 2.202, "d": 4.253,\n\t\t"e":12.702, "f": 2.228, "g": 2.015, "h": 6.094,\n\t\t"i": 6.966, "j": 0.153, "k": 1.292, "l": 4.025,\n\t\t"m": 2.406, "n": 6.749, "o": 7.507, "p": 1.929,\n\t\t"q": 0.095, "r": 5.987, "s": 6.327, "t": 9.356,\n\t\t"u": 2.758, "v": 0.978, "w": 2.560, "x": 0.150,\n\t\t"y": 1.994, "z": 0.077\n\t}')),t.LETTER_FREQUENCY_EXT=Object.freeze(Object.assign((()=>{const t={".":65.3,",":61.3,'"':26.7,"'":24.3,"-":15.3,"?":5.6,":":3.4,"!":3.3,";":3.2};for(let e=0;e<10;e++)t[e.toString()]=10;let e=0;for(const r in t)e+=t[r];for(const r in t)t[r]*=8/e;return t})(),t.LETTER_FREQUENCY)),(e=>{class r extends s.U{constructor(t){super("mors-enc",t)}static BUILD(){const r={};for(const[n,s]of Object.entries(e.Dict).freeze())r[n]={seq:s,weight:t.LETTER_FREQUENCY_EXT[n]};return r}}e.Encode=r,Object.freeze(r),Object.freeze(r.prototype);class n extends s.U{constructor(t){super("mors-dec",t)}static BUILD(){const r={};for(const[n,s]of Object.entries(e.Dict).freeze())r[s.replace(/\./g,"â€¢").replace(/-/g,"|")]={seq:n,weight:t.LETTER_FREQUENCY_EXT[n]};return r}}e.Decode=n,Object.freeze(n),Object.freeze(n.prototype),e.Dict=Object.freeze(JSON.parse('{\n\t\t\t"0": "-----", "5": ".....",\n\t\t\t"1": ".----", "6": "-....",\n\t\t\t"2": "..---", "7": "--...",\n\t\t\t"3": "...--", "8": "---..",\n\t\t\t"4": "....-", "9": "----.",\n\n\t\t\t"a": ".-"   , "n": "-."   ,\n\t\t\t"b": "-..." , "o": "---"  ,\n\t\t\t"c": "-.-." , "p": ".--." ,\n\t\t\t"d": "-.."  , "q": "--.-" ,\n\t\t\t"e": "."    , "r": ".-."  ,\n\t\t\t"f": "..-." , "s": "..."  ,\n\t\t\t"g": "--."  , "t": "-"    ,\n\t\t\t"h": "...." , "u": "..-"  ,\n\t\t\t"i": ".."   , "v": "...-" ,\n\t\t\t"j": ".---" , "w": ".--"  ,\n\t\t\t"k": "-.-"  , "x": "-..-" ,\n\t\t\t"l": ".-.." , "y": "-.--" ,\n\t\t\t"m": "--"   , "z": "--.." ,\n\n\t\t\t".": ".-.-.-",\n\t\t\t",": "--..--",\n\t\t\t"?": "..--..",\n\t\t\t"!": "-.-.--",\n\t\t\t"-": "-....-"\n\t\t}'))})(c=t.Morse||(t.Morse={})),Object.freeze(c)})(n||(n={})),Object.freeze(n)}};
//# sourceMappingURL=English-ts.js.map