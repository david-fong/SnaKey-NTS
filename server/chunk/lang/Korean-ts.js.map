{"version":3,"sources":[".././src/base/lang/impl/Korean.ts?"],"names":["Korean","weightScaling","super","INITIALIZE","ij","mj","fj","flatMap","jamos","atoms","split","freeze","map","atom","DUB_KEYBOARD","join","Object","Dubeolsik","prototype","SEB_KEYBOARD","INITIALS","value","MEDIALS","FINALS","Sebeolsik","roman","Romanization","seqBuilder","forwardDict","forEach","initialJamo","initialIdx","medialJamo","medialIdx","finalJamo","finalIdx","offset","length","char","String","fromCharCode","seq","weight","freq"],"mappings":"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","file":"chunk/lang/Korean-ts.js","sourcesContent":["import { Lang } from \"../Lang\";\r\n\r\n\r\n/**\r\n * # Korean\r\n *\r\n * [Frequency data](https://www.koreascience.or.kr/article/JAKO201514751644957.page).\r\n * Another paper (that I didn't use): https://www.koreascience.or.kr/article/JAKO201507158233900.page\r\n *\r\n * I have normalized jamo frequency values to an average value of one.\r\n * In the above data sources there is no data for when a character has\r\n * no final jamo. I looked at [this](https://en.wiktionary.org/wiki/Wiktionary:Frequency_lists/Korean_5800)\r\n * to make an estimate for that value.\r\n *\r\n * https://wikipedia.org/wiki/Hangul_consonant_and_vowel_tables#Hangul_syllables\r\n * https://wikipedia.org/wiki/Korean_language_and_computers#Hangul_in_Unicode\r\n * https://wikipedia.org/wiki/Hangul_Jamo_(Unicode_block)\r\n */\r\nexport namespace Korean {\r\n\r\n\t/**\r\n\t * # Dubeolsik (3-row layout)\r\n\t *\r\n\t * https://wikipedia.org/wiki/Keyboard_layout#Dubeolsik\r\n\t * https://www.branah.com/korean\r\n\t */\r\n\texport class Dubeolsik extends Lang {\r\n\t\tprivate static readonly DUB_KEYBOARD = Object.freeze(<const>{\r\n\t\t\t\"\": \"\",\r\n\t\t\t\"ㅂ\": \"q\", \"ㅈ\": \"w\", \"ㄷ\": \"e\", \"ㄱ\": \"r\", \"ㅅ\": \"t\",\r\n\t\t\t\"ㅛ\": \"y\", \"ㅕ\": \"u\", \"ㅑ\": \"i\", \"ㅐ\": \"o\", \"ㅔ\": \"p\",\r\n\t\t\t\"ㅁ\": \"a\", \"ㄴ\": \"s\", \"ㅇ\": \"d\", \"ㄹ\": \"f\", \"ㅎ\": \"g\",\r\n\t\t\t\"ㅗ\": \"h\", \"ㅓ\": \"j\", \"ㅏ\": \"k\", \"ㅣ\": \"l\",\r\n\t\t\t\"ㅋ\": \"z\", \"ㅌ\": \"x\", \"ㅊ\": \"c\", \"ㅍ\": \"v\", \"ㅠ\": \"b\",\r\n\t\t\t\"ㅜ\": \"n\", \"ㅡ\": \"m\",\r\n\t\t\t\"ㅃ\": \"Q\", \"ㅉ\": \"W\", \"ㄸ\": \"E\", \"ㄲ\": \"R\", \"ㅆ\": \"T\",\r\n\t\t\t\"ㅒ\": \"O\", \"ㅖ\": \"P\",\r\n\t\t});\r\n\r\n\t\tpublic constructor(weightScaling: number) {\r\n\t\t\tsuper(\"kore-dub\", weightScaling);\r\n\t\t}\r\n\t\tpublic static BUILD(): Lang.WeightedForwardMap {\r\n\t\t\treturn INITIALIZE((ij, mj, fj) => {\r\n\t\t\t\ttype Atoms = Array<keyof typeof Dubeolsik.DUB_KEYBOARD>;\r\n\t\t\t\tconst atoms = ([ij, mj, fj].flatMap((jamos) => jamos.atoms.split(\"\")) as Atoms).freeze();\r\n\t\t\t\treturn atoms.map((atom) => Dubeolsik.DUB_KEYBOARD[atom]).join(\"\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tDubeolsik as Lang.ClassIf;\r\n\tObject.freeze(Dubeolsik);\r\n\tObject.freeze(Dubeolsik.prototype);\r\n\r\n\r\n\t/**\r\n\t * # Sebeolsik (5-row layout)\r\n\t *\r\n\t * \\*Note: the branah link below is to an earlier version of\r\n\t * Sebeolsik, [Sebeolsik 390](https://wikipedia.org/wiki/Keyboard_layout#Sebeolsik_390).\r\n\t *\r\n\t * https://wikipedia.org/wiki/Keyboard_layout#Sebeolsik_Final\r\n\t * https://www.branah.com/sebeolsik\r\n\t */\r\n\texport class Sebeolsik extends Lang {\r\n\t\tprivate static readonly SEB_KEYBOARD = Object.freeze(<const>{\r\n\t\t\t// Finals and consonant clusters are found on the left.\r\n\t\t\tFINALS: {\r\n\t\t\t\t\"\": \"\",\r\n\t\t\t\t\"ㅎ\": \"1\", \"ㅆ\": \"2\", \"ㅂ\": \"3\", // 1-row\r\n\t\t\t\t\"ㅅ\": \"q\", \"ㄹ\": \"w\", // q-row\r\n\t\t\t\t\"ㅇ\": \"a\", \"ㄴ\": \"s\", // a-row\r\n\t\t\t\t\"ㅁ\": \"z\", \"ㄱ\": \"x\", // z-row\r\n\t\t\t\t\"ㄲ\": \"!\", \"ㄺ\": \"@\", \"ㅈ\": \"#\", \"ㄿ\": \"$\", \"ㄾ\": \"%\", // !-row\r\n\t\t\t\t\"ㅍ\": \"Q\", \"ㅌ\": \"W\", \"ㄵ\": \"E\", \"ㅀ\": \"R\", \"ㄽ\": \"T\", // Q-row\r\n\t\t\t\t\"ㄷ\": \"A\", \"ㄶ\": \"S\", \"ㄼ\": \"D\", \"ㄻ\": \"F\", // A-row\r\n\t\t\t\t\"ㅊ\": \"Z\", \"ㅄ\": \"X\", \"ㅋ\": \"C\", \"ㄳ\": \"V\", // Z-row\r\n\t\t\t},\r\n\t\t\t// Medials are found in the middle.\r\n\t\t\tMEDIALS: {\r\n\t\t\t\t\"ㅛ\": \"4\", \"ㅠ\": \"5\", \"ㅑ\": \"6\", \"ㅖ\": \"7\", \"ㅢ\": \"8\", // \"ㅜ\": \"9\",\r\n\t\t\t\t\"ㅕ\": \"e\", \"ㅐ\": \"r\", \"ㅓ\": \"t\", // q-row\r\n\t\t\t\t\"ㅣ\": \"d\", \"ㅏ\": \"f\", \"ㅡ\": \"g\", // a-row\r\n\t\t\t\t\"ㅔ\": \"c\", \"ㅗ\": \"v\", \"ㅜ\": \"b\", // z-row\r\n\t\t\t\t\"ㅒ\": \"G\",\r\n\t\t\t\t// Things that don't have dedicated keys:\r\n\t\t\t\t\"ㅘ\": \"vf\", \"ㅙ\": \"vr\", \"ㅚ\": \"vd\", \"ㅝ\": \"bt\", \"ㅞ\": \"bc\", \"ㅟ\": \"bd\",\r\n\t\t\t},\r\n\t\t\t// Initials are found on the right.\r\n\t\t\tINITIALS: {\r\n\t\t\t\t\"ㅋ\": \"0\", // 1-row\r\n\t\t\t\t\"ㄹ\": \"y\", \"ㄷ\": \"u\", \"ㅁ\": \"i\", \"ㅊ\": \"o\", \"ㅍ\": \"p\", // q-row\r\n\t\t\t\t\"ㄴ\": \"h\", \"ㅇ\": \"j\", \"ㄱ\": \"k\", \"ㅈ\": \"l\", \"ㅂ\": \";\", \"ㅌ\": \"'\", // a-row\r\n\t\t\t\t\"ㅅ\": \"n\", \"ㅎ\": \"m\", // z-row\r\n\t\t\t\t\"ㄲ\": \"!\",  // !-row\r\n\t\t\t\t// NOTE: If we included numbers, this is where they would go.\r\n\t\t\t\t// Things that don't have dedicated keys:\r\n\t\t\t\t\"ㄸ\": \"uu\", \"ㅃ\": \";;\", \"ㅆ\": \"nn\", \"ㅉ\": \"l\",\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tpublic constructor(weightScaling: number) {\r\n\t\t\tsuper(\"kore-sub\", weightScaling);\r\n\t\t}\r\n\t\tpublic static BUILD(): Lang.WeightedForwardMap {\r\n\t\t\treturn INITIALIZE((ij, mj, fj) => {\r\n\t\t\t\treturn Sebeolsik.SEB_KEYBOARD.INITIALS[ij.value]\r\n\t\t\t\t\t+ Sebeolsik.SEB_KEYBOARD.MEDIALS[mj.value]\r\n\t\t\t\t\t+ Sebeolsik.SEB_KEYBOARD.FINALS[fj.value];\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tSebeolsik as Lang.ClassIf;\r\n\tObject.freeze(Sebeolsik);\r\n\tObject.freeze(Sebeolsik.prototype);\r\n\r\n\r\n\t/**\r\n\t * # Korean Romanization\r\n\t *\r\n\t * https://wikipedia.org/wiki/Revised_Romanization_of_Korean#Transcription_rules\r\n\t * https://wikipedia.org/wiki/Romanization_of_Korean#Systems\r\n\t * https://www.korean.go.kr/front_eng/roman/roman_01.do\r\n\t */\r\n\texport class Romanization extends Lang {\r\n\t\tpublic constructor(weightScaling: number) {\r\n\t\t\tsuper(\"kore-rom\", weightScaling);\r\n\t\t}\r\n\t\tpublic static BUILD(): Lang.WeightedForwardMap {\r\n\t\t\treturn INITIALIZE((ij, mj, fj) => {\r\n\t\t\t\treturn ij.roman + mj.roman + fj.roman;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tRomanization as Lang.ClassIf;\r\n\tObject.freeze(Romanization);\r\n\tObject.freeze(Romanization.prototype);\r\n\r\n\r\n\tconst UNICODE_HANGUL_SYLLABLES_BASE = 0xAC00;\r\n\r\n\ttype JamoDesc = Readonly<{\r\n\t\tvalue: string; // not used. for readability.\r\n\t\tatoms: string; // used for keyboard mapping.\r\n\t\troman: string;\r\n\t}>;\r\n\r\n\t/**\r\n\t * Helper for each implementation's constructors.\r\n\t *\r\n\t * @param seqBuilder - Return a {@link Lang.Seq} based on the three\r\n\t *      parts of a syllable (passed in to this as parameters).\r\n\t * @returns A transformation of initializer information to a form\r\n\t *      suitable for consumption by the {@link Lang} constructor.\r\n\t */\r\n\tconst INITIALIZE = (\r\n\t\tseqBuilder: SeqBuilder,\r\n\t): Lang.WeightedForwardMap => {\r\n\t\tconst forwardDict: Lang.WeightedForwardMap = {};\r\n\t\tINITIALS.forEach((initialJamo, initialIdx) => {\r\n\t\t\tMEDIALS.forEach((medialJamo, medialIdx) => {\r\n\t\t\t\tFINALS.forEach((finalJamo, finalIdx) => {\r\n\t\t\t\t\t// base + f + F(m + Mi)\r\n\t\t\t\t\tlet offset = initialIdx;\r\n\t\t\t\t\toffset = MEDIALS.length * offset + medialIdx;\r\n\t\t\t\t\toffset =  FINALS.length * offset + finalIdx;\r\n\t\t\t\t\tconst char = String.fromCharCode(UNICODE_HANGUL_SYLLABLES_BASE + offset);\r\n\t\t\t\t\tforwardDict[char] = {\r\n\t\t\t\t\t\tseq: seqBuilder(initialJamo, medialJamo, finalJamo),\r\n\t\t\t\t\t\tweight: initialJamo.freq * medialJamo.freq * finalJamo.freq,\r\n\t\t\t\t\t\t// TODO.impl remove the above fallback once weights dict gets implemented.\r\n\t\t\t\t\t\t//   Also then fix the internal `averageWeight` argument in each implementation.\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn forwardDict;\r\n\t};\r\n\ttype SeqBuilder = { (\r\n\t\tij: typeof INITIALS[number],\r\n\t\tmj: typeof MEDIALS[number],\r\n\t\tfj: typeof FINALS[number],\r\n\t): Lang.Seq, };\r\n\r\n\t/**\r\n\t * # Initial Jamo (Choseong)\r\n\t */\r\n\tconst INITIALS = Object.freeze(<const>[\r\n\t\t{ value: \"ㄱ\", atoms: \"ㄱ\",   roman: \"g\" , freq: 2.508206 },\r\n\t\t{ value: \"ㄲ\", atoms: \"ㄱㄱ\", roman: \"kk\", freq: 0.139215 },\r\n\t\t{ value: \"ㄴ\", atoms: \"ㄴ\",   roman: \"n\" , freq: 1.278464 },\r\n\t\t{ value: \"ㄷ\", atoms: \"ㄷ\",   roman: \"d\" , freq: 1.715174 },\r\n\t\t{ value: \"ㄸ\", atoms: \"ㄷㄷ\", roman: \"tt\", freq: 0.155508 },\r\n\t\t{ value: \"ㄹ\", atoms: \"ㄹ\",   roman: \"r\" , freq: 1.306990 },\r\n\t\t{ value: \"ㅁ\", atoms: \"ㅁ\",   roman: \"m\" , freq: 0.920276 },\r\n\t\t{ value: \"ㅂ\", atoms: \"ㅂ\",   roman: \"b\" , freq: 0.768992 },\r\n\t\t{ value: \"ㅃ\", atoms: \"ㅂㅂ\", roman: \"pp\", freq: 0.034349 },\r\n\t\t{ value: \"ㅅ\", atoms: \"ㅅ\",   roman: \"s\" , freq: 1.620272 },\r\n\t\t{ value: \"ㅆ\", atoms: \"ㅅㅅ\", roman: \"ss\", freq: 0.062508 },\r\n\t\t{ value: \"ㅇ\", atoms: \"ㅇ\",   roman: \"-\" , freq: 4.509884 }, // TODO.learn \"-\" ? see wikipedia\r\n\t\t{ value: \"ㅈ\", atoms: \"ㅈ\",   roman: \"j\" , freq: 1.603205 },\r\n\t\t{ value: \"ㅉ\", atoms: \"ㅈㅈ\", roman: \"jj\", freq: 0.043767 },\r\n\t\t{ value: \"ㅊ\", atoms: \"ㅊ\",   roman: \"ch\", freq: 0.428943 },\r\n\t\t{ value: \"ㅋ\", atoms: \"ㅋ\",   roman: \"k\" , freq: 0.103017 },\r\n\t\t{ value: \"ㅌ\", atoms: \"ㅌ\",   roman: \"t\" , freq: 0.228492 },\r\n\t\t{ value: \"ㅍ\", atoms: \"ㅍ\",   roman: \"p\" , freq: 0.212015 },\r\n\t\t{ value: \"ㅎ\", atoms: \"ㅎ\",   roman: \"h\" , freq: 1.360725 },\r\n\t]);\r\n\tINITIALS as TU.RoArr<JamoDesc>; // type-check\r\n\r\n\t/**\r\n\t * # Medial Jamo (Jungseong)\r\n\t */\r\n\tconst MEDIALS = Object.freeze(<const>[\r\n\t\t{ value: \"ㅏ\", atoms: \"ㅏ\",   roman: \"a\"  , freq: 4.559484 },\r\n\t\t{ value: \"ㅐ\", atoms: \"ㅐ\",   roman: \"ae\" , freq: 0.970054 },\r\n\t\t{ value: \"ㅑ\", atoms: \"ㅑ\",   roman: \"ya\" , freq: 0.150865 },\r\n\t\t{ value: \"ㅒ\", atoms: \"ㅒ\",   roman: \"yae\", freq: 0.008922 },\r\n\t\t{ value: \"ㅓ\", atoms: \"ㅓ\",   roman: \"eo\" , freq: 2.231959 },\r\n\t\t{ value: \"ㅔ\", atoms: \"ㅔ\",   roman: \"e\"  , freq: 0.932004 },\r\n\t\t{ value: \"ㅕ\", atoms: \"ㅕ\",   roman: \"yeo\", freq: 1.000171 },\r\n\t\t{ value: \"ㅖ\", atoms: \"ㅖ\",   roman: \"ye\" , freq: 0.105095 },\r\n\t\t{ value: \"ㅗ\", atoms: \"ㅗ\",   roman: \"o\"  , freq: 2.040807 },\r\n\t\t{ value: \"ㅘ\", atoms: \"ㅗㅏ\", roman: \"wa\" , freq: 0.385060 },\r\n\t\t{ value: \"ㅙ\", atoms: \"ㅗㅐ\", roman: \"wae\", freq: 0.026550 },\r\n\t\t{ value: \"ㅚ\", atoms: \"ㅗㅣ\", roman: \"oe\" , freq: 0.236245 },\r\n\t\t{ value: \"ㅛ\", atoms: \"ㅛ\",   roman: \"yo\" , freq: 0.223892 },\r\n\t\t{ value: \"ㅜ\", atoms: \"ㅜ\",   roman: \"u\"  , freq: 1.402448 },\r\n\t\t{ value: \"ㅝ\", atoms: \"ㅜㅓ\", roman: \"wo\" , freq: 0.135821 },\r\n\t\t{ value: \"ㅞ\", atoms: \"ㅜㅔ\", roman: \"we\" , freq: 0.004818 },\r\n\t\t{ value: \"ㅟ\", atoms: \"ㅜㅣ\", roman: \"wi\" , freq: 0.112462 },\r\n\t\t{ value: \"ㅠ\", atoms: \"ㅠ\",   roman: \"yu\" , freq: 0.111584 },\r\n\t\t{ value: \"ㅡ\", atoms: \"ㅡ\",   roman: \"eu\" , freq: 2.727101 },\r\n\t\t{ value: \"ㅢ\", atoms: \"ㅡㅣ\", roman: \"ui\" , freq: 0.425688 },\r\n\t\t{ value: \"ㅣ\", atoms: \"ㅣ\",   roman: \"i\"  , freq: 3.208973 },\r\n\t]);\r\n\tMEDIALS as TU.RoArr<JamoDesc>; // type-check\r\n\r\n\t/**\r\n\t * # Final Jamo (Jongseong)\r\n\t */\r\n\tconst FINALS = Object.freeze(<const>[\r\n\t\t{ value: \"\",   atoms: \"\",     roman: \"\" , freq: 17.061190 },\r\n\t\t{ value: \"ㄱ\", atoms: \"ㄱ\",   roman: \"k\" , freq: 1.109483 },\r\n\t\t{ value: \"ㄲ\", atoms: \"ㄱㄱ\", roman: \"k\" , freq: 0.016359 },\r\n\t\t{ value: \"ㄳ\", atoms: \"ㄱㅅ\", roman: \"kt\", freq: 0.000962 },\r\n\t\t{ value: \"ㄴ\", atoms: \"ㄴ\",   roman: \"n\" , freq: 3.580456 },\r\n\t\t{ value: \"ㄵ\", atoms: \"ㄴㅈ\", roman: \"nt\", freq: 0.007522 },\r\n\t\t{ value: \"ㄶ\", atoms: \"ㄴㅎ\", roman: \"nt\", freq: 0.081892 },\r\n\t\t{ value: \"ㄷ\", atoms: \"ㄷ\",   roman: \"t\" , freq: 0.049969 },\r\n\t\t{ value: \"ㄹ\", atoms: \"ㄹ\",   roman: \"l\" , freq: 2.094454 },\r\n\t\t{ value: \"ㄺ\", atoms: \"ㄹㄱ\", roman: \"lk\", freq: 0.019761 },\r\n\t\t{ value: \"ㄻ\", atoms: \"ㄹㅁ\", roman: \"lm\", freq: 0.011711 },\r\n\t\t{ value: \"ㄼ\", atoms: \"ㄹㅂ\", roman: \"lp\", freq: 0.005885 },\r\n\t\t{ value: \"ㄽ\", atoms: \"ㄹㅅ\", roman: \"lt\", freq: 0.000013 },\r\n\t\t{ value: \"ㄾ\", atoms: \"ㄹㅌ\", roman: \"lt\", freq: 0.000353 },\r\n\t\t{ value: \"ㄿ\", atoms: \"ㄹㅍ\", roman: \"lp\", freq: 0.000210 },\r\n\t\t{ value: \"ㅀ\", atoms: \"ㄹㅎ\", roman: \"lt\", freq: 0.008150 },\r\n\t\t{ value: \"ㅁ\", atoms: \"ㅁ\",   roman: \"m\" , freq: 0.697015 },\r\n\t\t{ value: \"ㅂ\", atoms: \"ㅂ\",   roman: \"p\" , freq: 0.360526 },\r\n\t\t{ value: \"ㅄ\", atoms: \"ㅂㅅ\", roman: \"pt\", freq: 0.069739 },\r\n\t\t{ value: \"ㅅ\", atoms: \"ㅅ\",   roman: \"t\" , freq: 0.308934 },\r\n\t\t{ value: \"ㅆ\", atoms: \"ㅅㅅ\", roman: \"t\" , freq: 0.590913 },\r\n\t\t{ value: \"ㅇ\", atoms: \"ㅇ\",   roman: \"ng\", freq: 1.663950 },\r\n\t\t{ value: \"ㅈ\", atoms: \"ㅈ\",   roman: \"t\" , freq: 0.046297 },\r\n\t\t{ value: \"ㅊ\", atoms: \"ㅊ\",   roman: \"t\" , freq: 0.026808 },\r\n\t\t{ value: \"ㅋ\", atoms: \"ㅋ\",   roman: \"k\" , freq: 0.000814 },\r\n\t\t{ value: \"ㅌ\", atoms: \"ㅌ\",   roman: \"t\" , freq: 0.068318 },\r\n\t\t{ value: \"ㅍ\", atoms: \"ㅍ\",   roman: \"p\" , freq: 0.045664 },\r\n\t\t{ value: \"ㅎ\", atoms: \"ㅎ\",   roman: \"t\" , freq: 0.002595 },\r\n\t]);\r\n\tFINALS as TU.RoArr<JamoDesc>; // type-check\r\n}\r\nObject.freeze(Korean);"],"sourceRoot":""}